openapi: 3.0.3
info:
  title: Accounting API
  version: 1.0.0
  description: |-

    Bank-level secure REST API for universal accounting and financial operations.

    ## Features
    - JWT authentication with refresh tokens
    - Role-based access control (6 roles)
    - Multi-tenant architecture with organization isolation
    - Comprehensive validation with express-validator
    - Audit logging for all operations
    - Stripe payment integration
    - File upload capabilities
    - Complex filtering and pagination

    ## Security
    This API implements bank-level security measures including:
    - End-to-end encryption
    - Rate limiting
    - CORS protection
    - Helmet security headers
    - Input validation and sanitization
    - Audit trail for all operations

    ## Authentication
    The API uses JWT tokens for authentication. Include the Bearer token in the Authorization header:
    ```
    Authorization: Bearer <your-jwt-token>
    ```

    ## Rate Limiting
    API requests are rate-limited. See response headers for current limits:
    - `X-RateLimit-Limit`: Request limit per window
    - `X-RateLimit-Remaining`: Remaining requests in window
    - `X-RateLimit-Reset`: Time when window resets
          
  contact:
    name: Lifestream Dynamics
    email: support@lifestreamdynamics.com
  license:
    name: Proprietary
  x-generated-at: '2025-09-29T22:39:12.845Z'
  x-generated-by: generate-openapi.ts
  x-total-endpoints: 153
servers:
  - url: http://localhost:3000/api/v1
    description: Development server
  - url: https://api.accounting.com/api/v1
    description: Production server
security:
  - bearerAuth: []
tags:
  - name: Accounting
    description: Double-entry bookkeeping, journal entries, and chart of accounts
  - name: Appointments
    description: Appointment scheduling
  - name: Authentication
    description: User authentication and authorization
  - name: Customers
    description: Customer management
  - name: E-Transfers
    description: Electronic transfer management
  - name: Financial Statements
    description: Balance sheet, income statement, cash flow statement, and financial ratios
  - name: Health
    description: Health check endpoints
  - name: Invoices
    description: Invoice management
  - name: Manual Payments
    description: Manual payment processing
  - name: Organizations
    description: Organization management
  - name: Payment Analytics
    description: Payment analytics and reporting
  - name: Payments
    description: Payment processing
  - name: Projects
    description: Project management
  - name: Quotes
    description: Quote management
  - name: Tax
    description: Tax calculations, GST/HST/PST, and Canadian tax compliance
components:
  schemas:
    Timestamp:
      type: string
      format: date-time
      description: ISO 8601 timestamp
    Currency:
      type: string
      enum:
        - CAD
        - USD
        - EUR
        - GBP
      default: CAD
      description: ISO 4217 currency code
    Money:
      type: object
      properties:
        amount:
          type: number
          format: decimal
          description: Monetary amount with proper decimal precision
          example: 1234.56
        currency:
          $ref: '#/components/schemas/Currency'
      required:
        - amount
        - currency
    UserRole:
      type: string
      enum:
        - VIEWER
        - EMPLOYEE
        - ACCOUNTANT
        - MANAGER
        - ADMIN
        - SUPER_ADMIN
      description: User role hierarchy for authorization
    CustomerTier:
      type: string
      enum:
        - PERSONAL
        - SMALL_BUSINESS
        - ENTERPRISE
      description: Customer service tier classification
    CustomerStatus:
      type: string
      enum:
        - PROSPECT
        - ACTIVE
        - INACTIVE
        - SUSPENDED
      description: Customer account status
    QuoteStatus:
      type: string
      enum:
        - DRAFT
        - SENT
        - VIEWED
        - ACCEPTED
        - REJECTED
        - EXPIRED
      description: Quote workflow status
    InvoiceStatus:
      type: string
      enum:
        - DRAFT
        - SENT
        - VIEWED
        - PAID
        - OVERDUE
        - CANCELLED
      description: Invoice payment status
    PaymentMethod:
      type: string
      enum:
        - STRIPE_CARD
        - E_TRANSFER
        - CASH
        - BANK_TRANSFER
        - CHECK
      description: Payment processing method
    PaymentStatus:
      type: string
      enum:
        - PENDING
        - COMPLETED
        - FAILED
        - REFUNDED
        - CANCELLED
      description: Payment processing status
    ProjectStatus:
      type: string
      enum:
        - QUOTED
        - ACCEPTED
        - IN_PROGRESS
        - ON_HOLD
        - COMPLETED
        - CANCELLED
      description: Project lifecycle status
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error type
        message:
          type: string
          description: Error message
        details:
          type: object
          description: Additional error details
    ValidationError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            error:
              enum:
                - VALIDATION_ERROR
            details:
              type: object
              properties:
                fields:
                  type: array
                  items:
                    type: object
                    properties:
                      field:
                        type: string
                      message:
                        type: string
                      value:
                        type: string
    AuthenticationError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            error:
              enum:
                - AUTHENTICATION_REQUIRED
                - INVALID_TOKEN
                - TOKEN_EXPIRED
    AuthorizationError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            error:
              enum:
                - INSUFFICIENT_PERMISSIONS
                - ORGANIZATION_ACCESS_DENIED
    NotFoundError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            error:
              enum:
                - RESOURCE_NOT_FOUND
    ConflictError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            error:
              enum:
                - RESOURCE_CONFLICT
                - DUPLICATE_ENTRY
    RateLimitError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            error:
              enum:
                - RATE_LIMIT_EXCEEDED
            details:
              type: object
              properties:
                limit:
                  type: integer
                remaining:
                  type: integer
                resetTime:
                  type: integer
    JournalEntry:
      type: object
      required:
        - accountId
        - type
        - amount
        - description
      properties:
        accountId:
          type: string
          format: uuid
          description: Account UUID
        type:
          type: string
          enum:
            - DEBIT
            - CREDIT
          description: Transaction type
        amount:
          type: number
          minimum: 0.01
          maximum: 999999999.99
          description: Entry amount
        description:
          type: string
          minLength: 1
          maxLength: 500
          description: Entry description
        referenceType:
          type: string
          description: Reference type (INVOICE, PAYMENT, etc.)
        referenceId:
          type: string
          description: Reference ID
    Transaction:
      type: object
      required:
        - date
        - description
        - entries
      properties:
        date:
          type: string
          format: date
          description: Transaction date
        description:
          type: string
          minLength: 1
          maxLength: 500
          description: Transaction description
        entries:
          type: array
          minItems: 2
          maxItems: 50
          items:
            $ref: '#/components/schemas/JournalEntry'
    Account:
      type: object
      required:
        - accountNumber
        - name
        - type
      properties:
        accountNumber:
          type: string
          pattern: ^[0-9]{4}$
          description: 4-digit account number
        name:
          type: string
          minLength: 1
          maxLength: 100
          description: Account name
        type:
          type: string
          enum:
            - ASSET
            - LIABILITY
            - EQUITY
            - REVENUE
            - EXPENSE
          description: Account type
        parentId:
          type: string
          format: uuid
          description: Parent account UUID
        description:
          type: string
          maxLength: 500
          description: Account description
        isSystemAccount:
          type: boolean
          description: Whether this is a system-generated account
    FinancialStatement:
      type: object
      properties:
        organizationId:
          type: string
        statementType:
          type: string
          enum:
            - BALANCE_SHEET
            - INCOME_STATEMENT
            - CASH_FLOW_STATEMENT
        periodStart:
          type: string
          format: date
        periodEnd:
          type: string
          format: date
        currency:
          type: string
          example: CAD
        generatedAt:
          type: string
          format: date-time
        data:
          type: object
    BalanceSheet:
      type: object
      properties:
        header:
          type: object
          properties:
            organizationName:
              type: string
            asOfDate:
              type: string
              format: date
            currency:
              type: string
        assets:
          type: object
          properties:
            currentAssets:
              type: object
              properties:
                cash:
                  type: number
                accountsReceivable:
                  type: number
                inventory:
                  type: number
                prepaidExpenses:
                  type: number
                total:
                  type: number
            nonCurrentAssets:
              type: object
              properties:
                propertyPlantEquipment:
                  type: number
                intangibleAssets:
                  type: number
                investments:
                  type: number
                total:
                  type: number
            totalAssets:
              type: number
        liabilities:
          type: object
          properties:
            currentLiabilities:
              type: object
              properties:
                accountsPayable:
                  type: number
                accruedExpenses:
                  type: number
                shortTermDebt:
                  type: number
                total:
                  type: number
            nonCurrentLiabilities:
              type: object
              properties:
                longTermDebt:
                  type: number
                deferredTaxLiabilities:
                  type: number
                total:
                  type: number
            totalLiabilities:
              type: number
        equity:
          type: object
          properties:
            shareCapital:
              type: number
            retainedEarnings:
              type: number
            totalEquity:
              type: number
        validation:
          type: object
          properties:
            assetsEqualLiabilitiesPlusEquity:
              type: boolean
            balanceVariance:
              type: number
    IncomeStatement:
      type: object
      properties:
        header:
          type: object
          properties:
            organizationName:
              type: string
            periodStart:
              type: string
              format: date
            periodEnd:
              type: string
              format: date
            currency:
              type: string
        revenue:
          type: object
          properties:
            operatingRevenue:
              type: number
            nonOperatingRevenue:
              type: number
            totalRevenue:
              type: number
        expenses:
          type: object
          properties:
            costOfGoodsSold:
              type: number
            operatingExpenses:
              type: number
            depreciation:
              type: number
            interestExpense:
              type: number
            totalExpenses:
              type: number
        profitLoss:
          type: object
          properties:
            grossProfit:
              type: number
            operatingIncome:
              type: number
            netIncomeBeforeTaxes:
              type: number
            incomeTaxExpense:
              type: number
            netIncome:
              type: number
    CashFlowStatement:
      type: object
      properties:
        header:
          type: object
          properties:
            organizationName:
              type: string
            periodStart:
              type: string
              format: date
            periodEnd:
              type: string
              format: date
            currency:
              type: string
        operatingActivities:
          type: object
          properties:
            netIncome:
              type: number
            adjustments:
              type: object
              properties:
                depreciation:
                  type: number
                accountsReceivableChange:
                  type: number
                inventoryChange:
                  type: number
                accountsPayableChange:
                  type: number
            netCashFromOperating:
              type: number
        investingActivities:
          type: object
          properties:
            equipmentPurchases:
              type: number
            equipmentSales:
              type: number
            investments:
              type: number
            netCashFromInvesting:
              type: number
        financingActivities:
          type: object
          properties:
            loanProceeds:
              type: number
            loanPayments:
              type: number
            equityContributions:
              type: number
            dividendPayments:
              type: number
            netCashFromFinancing:
              type: number
        summary:
          type: object
          properties:
            netCashChange:
              type: number
            beginningCashBalance:
              type: number
            endingCashBalance:
              type: number
    FinancialRatios:
      type: object
      properties:
        liquidity:
          type: object
          properties:
            currentRatio:
              type: number
            quickRatio:
              type: number
            cashRatio:
              type: number
        profitability:
          type: object
          properties:
            grossProfitMargin:
              type: number
            netProfitMargin:
              type: number
            returnOnAssets:
              type: number
            returnOnEquity:
              type: number
        leverage:
          type: object
          properties:
            debtToEquity:
              type: number
            debtToAssets:
              type: number
            interestCoverage:
              type: number
        efficiency:
          type: object
          properties:
            assetTurnover:
              type: number
            receivablesTurnover:
              type: number
            inventoryTurnover:
              type: number
    TaxCalculationRequest:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
              amount:
                type: number
              category:
                type: string
              isExempt:
                type: boolean
        customerTaxExempt:
          type: boolean
          default: false
        jurisdiction:
          type: object
          properties:
            countryCode:
              type: string
              example: CA
            stateProvinceCode:
              type: string
              example: 'ON'
            municipalityCode:
              type: string
            postalCode:
              type: string
              example: M5V 3A8
        calculationDate:
          type: string
          format: date
    CanadianTaxContext:
      type: object
      properties:
        isQuickMethod:
          type: boolean
          default: false
        businessType:
          type: string
          enum:
            - SERVICE
            - RETAIL
            - MANUFACTURING
          default: SERVICE
        gstRegistered:
          type: boolean
          default: true
        annualRevenue:
          type: number
    TaxRateResponse:
      type: object
      properties:
        jurisdiction:
          type: object
        federalGST:
          type: number
        provincialHST:
          type: number
        provincialPST:
          type: number
        municipalTax:
          type: number
        compound:
          type: boolean
        effectiveDate:
          type: string
          format: date
    TaxCalculationResult:
      type: object
      properties:
        subtotal:
          type: number
        totalTax:
          type: number
        total:
          type: number
        breakdown:
          type: array
          items:
            type: object
            properties:
              taxType:
                type: string
              rate:
                type: number
              amount:
                type: number
    GSTHSTReturn:
      type: object
      properties:
        organizationId:
          type: string
        periodStart:
          type: string
          format: date
        periodEnd:
          type: string
          format: date
        totalSales:
          type: number
        totalPurchases:
          type: number
        gstHstCollected:
          type: number
        inputTaxCredits:
          type: number
        netTaxOwing:
          type: number
        adjustments:
          type: number
        totalOwing:
          type: number
  responses:
    Success:
      description: Operation successful
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: Operation completed successfully
              timestamp:
                $ref: '#/components/schemas/Timestamp'
    AuthenticationError:
      description: Authentication required or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationError'
    AuthorizationError:
      description: Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorizationError'
    ValidationError:
      description: Request validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
    NotFoundError:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    ConflictError:
      description: Resource conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConflictError'
    RateLimitError:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RateLimitError'
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    PaginationMeta:
      type: object
      properties:
        page:
          type: integer
          minimum: 1
          description: Current page number
          example: 1
        limit:
          type: integer
          minimum: 1
          maximum: 100
          description: Items per page
          example: 20
        total:
          type: integer
          minimum: 0
          description: Total number of items
          example: 150
        totalPages:
          type: integer
          minimum: 0
          description: Total number of pages
          example: 8
        hasNext:
          type: boolean
          description: Whether there are more pages
          example: true
        hasPrev:
          type: boolean
          description: Whether there are previous pages
          example: false
      required:
        - page
        - limit
        - total
        - totalPages
        - hasNext
        - hasPrev
    Organization:
      type: object
      properties:
        id:
          type: string
          description: Unique organization identifier
          example: org_123abc
        name:
          type: string
          description: Organization display name
          example: Acme Corp Inc.
        legalName:
          type: string
          description: Legal business name
          example: Acme Corporation Incorporated
        domain:
          type: string
          format: hostname
          description: Organization domain for email-based routing
          example: acme.com
        type:
          type: string
          enum:
            - SINGLE_BUSINESS
            - MULTI_BUSINESS
            - AGENCY
          description: Organization business model type
        email:
          type: string
          format: email
          description: Primary organization contact email
          example: contact@acme.com
        phone:
          type: string
          description: Primary phone number
          example: +1-555-123-4567
        website:
          type: string
          format: uri
          description: Organization website URL
          example: https://acme.com
        businessNumber:
          type: string
          description: Government business registration number
          example: 123456789RC0001
        taxNumber:
          type: string
          description: Tax identification number
          example: '123456789'
        isActive:
          type: boolean
          description: Organization account status
          example: true
        settings:
          type: object
          description: Organization-specific configuration settings
          additionalProperties: true
        createdAt:
          $ref: '#/components/schemas/Timestamp'
        updatedAt:
          $ref: '#/components/schemas/Timestamp'
      required:
        - id
        - name
        - email
        - isActive
        - createdAt
        - updatedAt
    User:
      type: object
      properties:
        id:
          type: string
          description: Unique user identifier
          example: user_456def
        organizationId:
          type: string
          description: Organization the user belongs to
          example: org_123abc
        email:
          type: string
          format: email
          description: User email address (unique)
          example: john.doe@acme.com
        firstName:
          type: string
          description: User first name
          example: John
        lastName:
          type: string
          description: User last name
          example: Doe
        role:
          $ref: '#/components/schemas/UserRole'
        isActive:
          type: boolean
          description: User account status
          example: true
        emailVerified:
          type: boolean
          description: Email verification status
          example: true
        twoFactorEnabled:
          type: boolean
          description: Two-factor authentication status
          example: false
        avatar:
          type: string
          format: uri
          description: User profile picture URL
          example: https://cdn.example.com/avatars/user_456def.jpg
        phone:
          type: string
          description: User phone number
          example: +1-555-987-6543
        lastLoginAt:
          $ref: '#/components/schemas/Timestamp'
        createdAt:
          $ref: '#/components/schemas/Timestamp'
        updatedAt:
          $ref: '#/components/schemas/Timestamp'
      required:
        - id
        - organizationId
        - email
        - firstName
        - lastName
        - role
        - isActive
        - emailVerified
        - createdAt
        - updatedAt
    Customer:
      type: object
      properties:
        id:
          type: string
          description: Unique customer identifier
          example: cust_789ghi
        organizationId:
          type: string
          description: Organization the customer belongs to
          example: org_123abc
        customerNumber:
          type: string
          description: Organization-specific customer number
          example: CUST-2023-001
        tier:
          $ref: '#/components/schemas/CustomerTier'
        status:
          $ref: '#/components/schemas/CustomerStatus'
        creditLimit:
          type: number
          format: decimal
          description: Customer credit limit
          example: 5000
        paymentTerms:
          type: integer
          description: Default payment terms in days
          example: 15
        taxExempt:
          type: boolean
          description: Tax exemption status
          example: false
        preferredCurrency:
          $ref: '#/components/schemas/Currency'
        notes:
          type: string
          description: Internal notes about the customer
          example: Preferred customer - priority support
        person:
          $ref: '#/components/schemas/Person'
        business:
          $ref: '#/components/schemas/Business'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/CustomerAddress'
        createdAt:
          $ref: '#/components/schemas/Timestamp'
        updatedAt:
          $ref: '#/components/schemas/Timestamp'
      required:
        - id
        - organizationId
        - customerNumber
        - tier
        - status
        - paymentTerms
        - taxExempt
        - preferredCurrency
        - createdAt
        - updatedAt
    Person:
      type: object
      properties:
        id:
          type: string
          example: person_abc123
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        middleName:
          type: string
          example: Michael
        dateOfBirth:
          type: string
          format: date
          example: '1985-06-15'
        email:
          type: string
          format: email
          example: john.doe@email.com
        phone:
          type: string
          example: +1-555-123-4567
        mobile:
          type: string
          example: +1-555-987-6543
      required:
        - id
        - firstName
        - lastName
    Business:
      type: object
      properties:
        id:
          type: string
          example: biz_def456
        legalName:
          type: string
          example: Smith Construction Ltd.
        tradeName:
          type: string
          example: Smith Builders
        businessNumber:
          type: string
          example: 987654321RC0001
        taxNumber:
          type: string
          example: '987654321'
        incorporationDate:
          type: string
          format: date
          example: '2015-03-10'
        businessType:
          type: string
          enum:
            - SOLE_PROPRIETORSHIP
            - PARTNERSHIP
            - CORPORATION
            - LLC
          example: CORPORATION
        email:
          type: string
          format: email
          example: info@smithbuilders.com
        phone:
          type: string
          example: +1-555-555-0123
        website:
          type: string
          format: uri
          example: https://smithbuilders.com
      required:
        - id
        - legalName
        - businessType
    Address:
      type: object
      properties:
        id:
          type: string
          example: addr_ghi789
        line1:
          type: string
          example: 123 Main Street
        line2:
          type: string
          example: Suite 456
        city:
          type: string
          example: Toronto
        stateProvince:
          type: string
          example: Ontario
        postalCode:
          type: string
          example: M5V 3A8
        country:
          type: string
          example: Canada
        type:
          type: string
          enum:
            - BILLING
            - SHIPPING
            - MAILING
          example: BILLING
        isPrimary:
          type: boolean
          example: true
      required:
        - id
        - line1
        - city
        - stateProvince
        - postalCode
        - country
        - type
    CustomerAddress:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        type:
          type: string
          enum:
            - BILLING
            - SHIPPING
            - MAILING
        isPrimary:
          type: boolean
      required:
        - address
        - type
  parameters:
    OrganizationId:
      name: organizationId
      in: path
      required: true
      description: Unique identifier for the organization (multi-tenant isolation)
      schema:
        type: string
        pattern: ^[a-zA-Z0-9_-]+$
        example: org_123abc
    UserId:
      name: userId
      in: path
      required: true
      description: Unique identifier for the user
      schema:
        type: string
        pattern: ^[a-zA-Z0-9_-]+$
        example: user_456def
    ResourceId:
      name: id
      in: path
      required: true
      description: Unique identifier for the resource
      schema:
        type: string
        pattern: ^[a-zA-Z0-9_-]+$
        example: res_789ghi
    Page:
      name: page
      in: query
      description: Page number for pagination (1-based)
      schema:
        type: integer
        minimum: 1
        default: 1
        example: 1
    Limit:
      name: limit
      in: query
      description: Number of items per page
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
        example: 20
    Sort:
      name: sort
      in: query
      description: Sort field and direction (field:asc or field:desc)
      schema:
        type: string
        pattern: ^[a-zA-Z0-9_]+:(asc|desc)$
        example: createdAt:desc
    Search:
      name: search
      in: query
      description: Search term for text-based filtering
      schema:
        type: string
        minLength: 1
        maxLength: 100
        example: john doe
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  examples: {}
paths:
  /api/v1/organizations/{organizationId}/accounting/accounts:
    get:
      summary: Get chart of accounts
      tags:
        - Accounts
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
      responses:
        '200':
          description: Chart of accounts
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    description: Chart of accounts with accounts grouped by type
    post:
      summary: Create a new account
      tags:
        - Accounts
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '201':
          description: Account created successfully
        '400':
          description: Validation error or duplicate account number
  /api/v1/organizations/{organizationId}/accounting/accounts/hierarchy:
    get:
      summary: Get account hierarchy
      tags:
        - Accounts
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
      responses:
        '200':
          description: Account hierarchy with parent-child relationships
  /api/v1/organizations/{organizationId}/accounting/accounts/standard:
    post:
      summary: Create standard chart of accounts for business type
      tags:
        - Accounts
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - businessType
              properties:
                businessType:
                  type: string
                  enum:
                    - SOLE_PROPRIETORSHIP
                    - PARTNERSHIP
                    - CORPORATION
                    - LLC
      responses:
        '201':
          description: Standard chart of accounts created
        '400':
          description: Invalid business type or accounts already exist
  /api/v1/organizations/{organizationId}/accounting/accounts/{accountId}:
    get:
      summary: Get account by ID
      tags:
        - Accounts
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Account details
        '404':
          description: Account not found
    put:
      summary: Update account
      tags:
        - Accounts
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountNumber:
                  type: string
                  pattern: ^[0-9]{4}$
                name:
                  type: string
                  minLength: 1
                  maxLength: 100
                description:
                  type: string
                  maxLength: 500
                isActive:
                  type: boolean
                parentId:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Account updated successfully
        '400':
          description: Validation error
        '404':
          description: Account not found
    delete:
      summary: Delete account (soft delete if no transactions)
      tags:
        - Accounts
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Account deleted successfully
        '400':
          description: Cannot delete account with transactions
        '404':
          description: Account not found
  /api/v1/organizations/{organizationId}/accounting/accounts/{accountId}/balance:
    get:
      summary: Get account balance
      tags:
        - Accounts
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Account balance information
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      accountId:
                        type: string
                      accountNumber:
                        type: string
                      accountName:
                        type: string
                      accountType:
                        type: string
                      balance:
                        type: number
                      lastTransactionDate:
                        type: string
                        format: date-time
  /api/v1/organizations/{organizationId}/accounting/business-transactions:
    post:
      summary: Create a business transaction from template
      tags:
        - Accounting
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transactionType
                - transactionData
              properties:
                transactionType:
                  type: string
                  enum:
                    - CASH_SALE
                    - CREDIT_SALE
                    - CASH_PAYMENT_RECEIVED
                    - EXPENSE_CASH
                    - EXPENSE_CREDIT
                    - PAY_VENDOR
                    - OWNER_INVESTMENT
                    - OWNER_WITHDRAWAL
                transactionData:
                  type: object
                  description: Transaction-specific data
      responses:
        '201':
          description: Business transaction created successfully
        '400':
          description: Invalid transaction type or data
        '401':
          description: Unauthorized
  /api/v1/organizations/{organizationId}/accounting/transaction-types:
    get:
      summary: Get available business transaction types
      tags:
        - Accounting
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
      responses:
        '200':
          description: Available transaction types
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        requiredFields:
                          type: array
                          items:
                            type: string
  /api/v1/organizations/{organizationId}/accounting/transactions:
    post:
      summary: Create a new journal transaction
      tags:
        - Accounting
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    description: Created transaction
                  warnings:
                    type: array
                    items:
                      type: string
        '400':
          description: Validation error or unbalanced transaction
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /api/v1/organizations/{organizationId}/accounting/transactions/{transactionId}/reverse:
    post:
      summary: Reverse a transaction
      tags:
        - Accounting
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reversalReason
              properties:
                reversalReason:
                  type: string
                  minLength: 1
                  maxLength: 500
      responses:
        '200':
          description: Transaction reversed successfully
        '400':
          description: Transaction already reversed or invalid
        '401':
          description: Unauthorized
  /api/v1/organizations/{organizationId}/accounting/trial-balance:
    get:
      summary: Generate trial balance
      tags:
        - Accounting
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
        - name: asOfDate
          in: query
          schema:
            type: string
            format: date
          description: As-of date for trial balance (defaults to current date)
      responses:
        '200':
          description: Trial balance generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    description: Trial balance report
  /api/v1/organizations/{organizationId}/accounting/trial-balance/export:
    get:
      summary: Export trial balance
      tags:
        - Accounting
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
        - name: format
          in: query
          schema:
            type: string
            enum:
              - CSV
              - JSON
              - PDF
            default: CSV
        - name: asOfDate
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Trial balance export file
          content:
            text/csv:
              schema:
                type: string
            application/json:
              schema:
                type: object
  /api/v1/organizations/{organizationId}/accounting/trial-balance/report:
    get:
      summary: Generate comprehensive trial balance report
      tags:
        - Accounting
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
        - name: asOfDate
          in: query
          schema:
            type: string
            format: date
        - name: periodStartDate
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Comprehensive trial balance report
  /api/v1/organizations/{organizationId}/accounting/validate:
    get:
      summary: Validate accounting equation (Assets = Liabilities + Equity)
      tags:
        - Accounting
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
      responses:
        '200':
          description: Accounting equation validation result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      isValid:
                        type: boolean
                      assets:
                        type: number
                      liabilities:
                        type: number
                      equity:
                        type: number
                      difference:
                        type: number
  /api/v1/organizations/{organizationId}/assets/logo:
    post:
      tags:
        - Organization Assets
      summary: Upload organization logo
      description: Uploads a logo file for the organization. Supports PNG and JPEG formats up to 5MB. Requires Admin or Manager role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          description: Organization ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - logo
              properties:
                logo:
                  type: string
                  format: binary
                  description: Logo image file (PNG or JPEG, max 5MB)
                logoWidth:
                  type: integer
                  description: Desired display width in pixels
                  example: 200
                logoHeight:
                  type: integer
                  description: Desired display height in pixels
                  example: 80
      responses:
        '201':
          description: Logo uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    example: Logo uploaded successfully
                  data:
                    type: object
                    properties:
                      logoUrl:
                        type: string
                        example: /storage/logos/org123/logo-1640995200000.png
                      logoWidth:
                        type: integer
                        example: 200
                      logoHeight:
                        type: integer
                        example: 80
                      showLogo:
                        type: boolean
                        example: true
        '400':
          description: Invalid file or file too large
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Failed to upload logo
    delete:
      tags:
        - Organization Assets
      summary: Remove organization logo
      description: Removes the current logo from the organization and disables logo display. Requires Admin or Manager role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          description: Organization ID
          schema:
            type: string
      responses:
        '200':
          description: Logo removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    example: Logo removed successfully
                  data:
                    type: object
                    properties:
                      logoUrl:
                        type: string
                        nullable: true
                        example: null
                      showLogo:
                        type: boolean
                        example: false
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Logo not found or organization not found
        '500':
          description: Failed to remove logo
  /api/v1/organizations/{organizationId}/financial-statements/balance-sheet:
    get:
      summary: Generate balance sheet
      description: Generates a comprehensive balance sheet for the specified date
      tags:
        - Financial Statements
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Organization ID
        - in: query
          name: asOfDate
          schema:
            type: string
            format: date
          description: As-of date for balance sheet (defaults to current date)
        - in: query
          name: format
          schema:
            type: string
            enum:
              - JSON
              - PDF
              - CSV
            default: JSON
          description: Output format
      responses:
        '200':
          description: Balance sheet generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/BalanceSheet'
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '403':
          description: Insufficient permissions
        '500':
          description: Internal server error
  /api/v1/organizations/{organizationId}/financial-statements/cash-flow:
    get:
      summary: Generate cash flow statement
      description: Generates a comprehensive cash flow statement for the specified period
      tags:
        - Financial Statements
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Organization ID
        - in: query
          name: startDate
          required: true
          schema:
            type: string
            format: date
          description: Period start date
        - in: query
          name: endDate
          required: true
          schema:
            type: string
            format: date
          description: Period end date
        - in: query
          name: method
          schema:
            type: string
            enum:
              - DIRECT
              - INDIRECT
            default: INDIRECT
          description: Cash flow calculation method
        - in: query
          name: format
          schema:
            type: string
            enum:
              - JSON
              - PDF
              - CSV
            default: JSON
          description: Output format
      responses:
        '200':
          description: Cash flow statement generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/CashFlowStatement'
  /api/v1/organizations/{organizationId}/financial-statements/comparison:
    get:
      summary: Generate comparative financial statements
      description: Generates financial statements with period-over-period comparison (ACCOUNTANT+ required)
      tags:
        - Financial Statements
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Organization ID
        - in: query
          name: currentPeriodStart
          required: true
          schema:
            type: string
            format: date
          description: Current period start date
        - in: query
          name: currentPeriodEnd
          required: true
          schema:
            type: string
            format: date
          description: Current period end date
        - in: query
          name: comparativePeriodStart
          required: true
          schema:
            type: string
            format: date
          description: Comparative period start date
        - in: query
          name: comparativePeriodEnd
          required: true
          schema:
            type: string
            format: date
          description: Comparative period end date
        - in: query
          name: statementType
          schema:
            type: string
            enum:
              - BALANCE_SHEET
              - INCOME_STATEMENT
              - CASH_FLOW_STATEMENT
              - ALL
            default: ALL
          description: Type of statement to compare
      responses:
        '200':
          description: Comparative financial statements generated successfully
        '403':
          description: Insufficient permissions (ACCOUNTANT+ required)
  /api/v1/organizations/{organizationId}/financial-statements/comprehensive:
    get:
      summary: Generate comprehensive financial statements package
      description: Generates all three primary financial statements in a single response (ACCOUNTANT+ required)
      tags:
        - Financial Statements
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Organization ID
        - in: query
          name: startDate
          required: true
          schema:
            type: string
            format: date
          description: Period start date
        - in: query
          name: endDate
          required: true
          schema:
            type: string
            format: date
          description: Period end date
        - in: query
          name: format
          schema:
            type: string
            enum:
              - JSON
              - PDF
            default: JSON
          description: Output format
        - in: query
          name: includeRatios
          schema:
            type: boolean
            default: true
          description: Include financial ratio analysis
      responses:
        '200':
          description: Comprehensive financial statements generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      balanceSheet:
                        $ref: '#/components/schemas/BalanceSheet'
                      incomeStatement:
                        $ref: '#/components/schemas/IncomeStatement'
                      cashFlowStatement:
                        $ref: '#/components/schemas/CashFlowStatement'
                      financialRatios:
                        $ref: '#/components/schemas/FinancialRatios'
                      generatedAt:
                        type: string
                        format: date-time
        '403':
          description: Insufficient permissions (ACCOUNTANT+ required)
  /api/v1/organizations/{organizationId}/financial-statements/export:
    post:
      summary: Export financial statements
      description: Export financial statements in various formats with customization options (ACCOUNTANT+ required)
      tags:
        - Financial Statements
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Organization ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - statementTypes
                - periodStart
                - periodEnd
                - format
              properties:
                statementTypes:
                  type: array
                  items:
                    type: string
                    enum:
                      - BALANCE_SHEET
                      - INCOME_STATEMENT
                      - CASH_FLOW_STATEMENT
                  minItems: 1
                periodStart:
                  type: string
                  format: date
                periodEnd:
                  type: string
                  format: date
                format:
                  type: string
                  enum:
                    - PDF
                    - EXCEL
                    - CSV
                options:
                  type: object
                  properties:
                    includeRatios:
                      type: boolean
                      default: true
                    includeComparative:
                      type: boolean
                      default: false
                    comparativePeriodStart:
                      type: string
                      format: date
                    comparativePeriodEnd:
                      type: string
                      format: date
                    logoUrl:
                      type: string
                    headerText:
                      type: string
                    footerText:
                      type: string
      responses:
        '200':
          description: Financial statements exported successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '403':
          description: Insufficient permissions (ACCOUNTANT+ required)
  /api/v1/organizations/{organizationId}/financial-statements/history:
    get:
      summary: Get financial statement generation history
      description: Retrieves the history of generated financial statements for the organization
      tags:
        - Financial Statements
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Organization ID
        - in: query
          name: statementType
          schema:
            type: string
            enum:
              - BALANCE_SHEET
              - INCOME_STATEMENT
              - CASH_FLOW_STATEMENT
          description: Filter by statement type
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of records per page
      responses:
        '200':
          description: Financial statement history retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      statements:
                        type: array
                        items:
                          $ref: '#/components/schemas/FinancialStatement'
                      pagination:
                        type: object
                        properties:
                          page:
                            type: integer
                          limit:
                            type: integer
                          total:
                            type: integer
                          totalPages:
                            type: integer
  /api/v1/organizations/{organizationId}/financial-statements/income-statement:
    get:
      summary: Generate income statement
      description: Generates a comprehensive income statement for the specified period
      tags:
        - Financial Statements
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Organization ID
        - in: query
          name: startDate
          required: true
          schema:
            type: string
            format: date
          description: Period start date
        - in: query
          name: endDate
          required: true
          schema:
            type: string
            format: date
          description: Period end date
        - in: query
          name: format
          schema:
            type: string
            enum:
              - JSON
              - PDF
              - CSV
            default: JSON
          description: Output format
      responses:
        '200':
          description: Income statement generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/IncomeStatement'
  /api/v1/organizations/{organizationId}/financial-statements/ratios:
    get:
      summary: Calculate financial ratios
      description: Calculates comprehensive financial ratios for analysis
      tags:
        - Financial Statements
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Organization ID
        - in: query
          name: asOfDate
          schema:
            type: string
            format: date
          description: As-of date for ratio calculations (defaults to current date)
        - in: query
          name: periodStart
          schema:
            type: string
            format: date
          description: Period start date for income-based ratios
        - in: query
          name: periodEnd
          schema:
            type: string
            format: date
          description: Period end date for income-based ratios
      responses:
        '200':
          description: Financial ratios calculated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/FinancialRatios'
  /api/v1/organizations/{organizationId}/invoice-styles:
    get:
      tags:
        - Invoice Styles
      summary: Get available invoice styles
      description: Retrieves all available invoice styles for the organization.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          description: Organization ID
          schema:
            type: string
        - in: query
          name: templateId
          description: Filter by template ID
          schema:
            type: string
        - in: query
          name: isSystem
          description: Filter by system styles
          schema:
            type: boolean
        - in: query
          name: search
          description: Search style names and descriptions
          schema:
            type: string
        - in: query
          name: limit
          description: Number of styles per page
          schema:
            type: integer
            default: 50
        - in: query
          name: offset
          description: Pagination offset
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Styles retrieved successfully
        '401':
          description: Unauthorized
        '500':
          description: Failed to retrieve styles
    post:
      tags:
        - Invoice Styles
      summary: Create custom invoice style
      description: Creates a new custom invoice style for the organization.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          description: Organization ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - cssContent
                - colorScheme
              properties:
                name:
                  type: string
                  example: Custom Blue Theme
                description:
                  type: string
                  example: Custom blue color scheme for invoices
                templateId:
                  type: string
                  description: Associated template ID (optional)
                cssContent:
                  type: string
                  description: CSS stylesheet content
                colorScheme:
                  type: object
                  properties:
                    primary:
                      type: string
                      example: '#2563eb'
                    secondary:
                      type: string
                      example: '#64748b'
                    accent:
                      type: string
                      example: '#3b82f6'
                    background:
                      type: string
                      example: '#ffffff'
                    text:
                      type: string
                      example: '#1e293b'
                fontFamily:
                  type: string
                  example: Arial, sans-serif
                isDefault:
                  type: boolean
                  default: false
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Style created successfully
        '400':
          description: Invalid style data
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Failed to create style
  /api/v1/organizations/{organizationId}/invoice-templates:
    get:
      tags:
        - Invoice Templates
      summary: Get available invoice templates
      description: Retrieves all available invoice templates for the organization, including system and custom templates.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          description: Organization ID
          schema:
            type: string
        - in: query
          name: templateType
          description: Filter by template type
          schema:
            type: string
            enum:
              - STANDARD
              - MINIMAL
              - MODERN
              - CUSTOM
        - in: query
          name: isSystem
          description: Filter by system templates
          schema:
            type: boolean
        - in: query
          name: search
          description: Search template names and descriptions
          schema:
            type: string
        - in: query
          name: limit
          description: Number of templates per page
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - in: query
          name: offset
          description: Pagination offset
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Templates retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      templates:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            description:
                              type: string
                            templateType:
                              type: string
                            isDefault:
                              type: boolean
                            isSystem:
                              type: boolean
                            version:
                              type: string
                            createdAt:
                              type: string
                              format: date-time
                            stylesCount:
                              type: integer
                      pagination:
                        type: object
                        properties:
                          total:
                            type: integer
                          limit:
                            type: integer
                          offset:
                            type: integer
                          pages:
                            type: integer
        '401':
          description: Unauthorized
        '500':
          description: Failed to retrieve templates
    post:
      tags:
        - Invoice Templates
      summary: Create custom invoice template
      description: Creates a new custom invoice template for the organization. Requires Admin or Manager role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          description: Organization ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - templateType
                - htmlTemplate
              properties:
                name:
                  type: string
                  description: Template name
                  example: Custom Professional Template
                description:
                  type: string
                  description: Template description
                  example: Custom template with company-specific layout
                templateType:
                  type: string
                  enum:
                    - STANDARD
                    - MINIMAL
                    - MODERN
                    - CUSTOM
                  description: Template type category
                htmlTemplate:
                  type: string
                  description: Handlebars HTML template content
                isDefault:
                  type: boolean
                  description: Set as organization default template
                  default: false
                tags:
                  type: array
                  items:
                    type: string
                  description: Template tags for categorization
      responses:
        '201':
          description: Template created successfully
        '400':
          description: Invalid template data
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Insufficient permissions
        '500':
          description: Failed to create template
  /api/v1/organizations/{organizationId}/invoices/{id}/pdf:
    get:
      tags:
        - Invoice PDF
      summary: Generate and download invoice PDF
      description: Generates a PDF for the specified invoice with customizable template and styling options. Supports organization branding and tax settings.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          description: Organization ID
          schema:
            type: string
            example: org_1234567890
        - in: path
          name: id
          required: true
          description: Invoice ID
          schema:
            type: string
            example: inv_1234567890
        - in: query
          name: templateId
          description: Template ID to use (optional, uses default if not specified)
          schema:
            type: string
            example: tpl_1234567890
        - in: query
          name: styleId
          description: Style ID to use (optional, uses default if not specified)
          schema:
            type: string
            example: sty_1234567890
        - in: query
          name: format
          description: PDF page format
          schema:
            type: string
            enum:
              - A4
              - Letter
            default: A4
        - in: query
          name: orientation
          description: PDF page orientation
          schema:
            type: string
            enum:
              - portrait
              - landscape
            default: portrait
        - in: query
          name: regenerate
          description: Force regenerate PDF even if one exists
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: PDF generated and returned successfully
          content:
            application/pdf:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              description: Attachment filename
              schema:
                type: string
                example: attachment; filename="invoice-INV-001.pdf"
            Content-Length:
              description: File size in bytes
              schema:
                type: integer
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '404':
          description: Invoice not found
        '500':
          description: PDF generation failed
  /api/v1/organizations/{organizationId}/invoices/{id}/pdf/regenerate:
    post:
      tags:
        - Invoice PDF
      summary: Force regenerate invoice PDF
      description: Forces regeneration of invoice PDF with new template/style settings. Deletes existing PDFs for the invoice.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          description: Organization ID
          schema:
            type: string
        - in: path
          name: id
          required: true
          description: Invoice ID
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                templateId:
                  type: string
                  description: Template ID to use
                  example: tpl_1234567890
                styleId:
                  type: string
                  description: Style ID to use
                  example: sty_1234567890
                format:
                  type: string
                  enum:
                    - A4
                    - Letter
                  default: A4
                orientation:
                  type: string
                  enum:
                    - portrait
                    - landscape
                  default: portrait
      responses:
        '201':
          description: PDF regenerated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: PDF regenerated successfully
                  data:
                    type: object
                    properties:
                      pdf:
                        type: object
                        properties:
                          id:
                            type: string
                          filename:
                            type: string
                          fileSize:
                            type: integer
                          status:
                            type: string
                          createdAt:
                            type: string
                            format: date-time
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Invoice not found
        '500':
          description: PDF regeneration failed
  /api/v1/organizations/{organizationId}/invoices/{id}/pdf/status:
    get:
      tags:
        - Invoice PDF
      summary: Get PDF generation status
      description: Get the status and metadata for PDF generations of the specified invoice.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          description: Organization ID
          schema:
            type: string
        - in: path
          name: id
          required: true
          description: Invoice ID
          schema:
            type: string
        - in: query
          name: templateId
          description: Filter by template ID
          schema:
            type: string
        - in: query
          name: styleId
          description: Filter by style ID
          schema:
            type: string
      responses:
        '200':
          description: PDF status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      pdfs:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            filename:
                              type: string
                            fileSize:
                              type: integer
                            status:
                              type: string
                              enum:
                                - GENERATED
                                - FAILED
                                - PROCESSING
                            templateId:
                              type: string
                            styleId:
                              type: string
                            createdAt:
                              type: string
                              format: date-time
                            errorMessage:
                              type: string
        '401':
          description: Unauthorized
        '404':
          description: Invoice not found
        '500':
          description: Failed to retrieve status
  /api/v1/organizations/{organizationId}/settings/defaults:
    put:
      tags:
        - Organization Settings
      summary: Set default template and style
      description: Sets the default invoice template and style for the organization. These will be used when generating PDFs without specific template/style parameters.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          description: Organization ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                defaultTemplateId:
                  type: string
                  description: Template ID to set as default
                  example: tpl_1234567890
                defaultStyleId:
                  type: string
                  description: Style ID to set as default
                  example: sty_1234567890
      responses:
        '200':
          description: Defaults updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      defaultTemplateId:
                        type: string
                      defaultStyleId:
                        type: string
        '400':
          description: Invalid template or style ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Template or style not found
        '500':
          description: Failed to update defaults
  /api/v1/organizations/{organizationId}/settings/initialize:
    post:
      tags:
        - Organization Settings
      summary: Initialize invoice settings
      description: Initializes complete invoice settings for a new organization, including system templates, styles, and default branding. Requires Admin role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          description: Organization ID
          schema:
            type: string
      responses:
        '201':
          description: Settings initialized successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    example: Invoice settings initialized successfully
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: System templates, styles, and default branding created
                      templatesCount:
                        type: integer
                        example: 3
                      stylesCount:
                        type: integer
                        example: 3
                      branding:
                        type: object
                        properties:
                          id:
                            type: string
                          taxesEnabled:
                            type: boolean
                          showLogo:
                            type: boolean
                          showOrgName:
                            type: boolean
        '400':
          description: Settings already initialized
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Admin role required
        '500':
          description: Failed to initialize settings
  /api/v1/organizations/{organizationId}/settings/invoice:
    get:
      tags:
        - Organization Settings
      summary: Get organization invoice settings
      description: Retrieves complete invoice customization settings including branding, available templates, and styles for the organization.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          description: Organization ID
          schema:
            type: string
            example: org_1234567890
      responses:
        '200':
          description: Invoice settings retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Invoice settings retrieved successfully
                  data:
                    type: object
                    properties:
                      branding:
                        type: object
                        properties:
                          id:
                            type: string
                          logoUrl:
                            type: string
                            example: /storage/logos/org123/logo.png
                          logoWidth:
                            type: integer
                            example: 200
                          logoHeight:
                            type: integer
                            example: 80
                          showLogo:
                            type: boolean
                            example: true
                          showOrgName:
                            type: boolean
                            example: true
                          primaryColor:
                            type: string
                            example: '#2563eb'
                          secondaryColor:
                            type: string
                            example: '#64748b'
                          accentColor:
                            type: string
                            example: '#3b82f6'
                          backgroundColor:
                            type: string
                            example: '#ffffff'
                          textColor:
                            type: string
                            example: '#1e293b'
                          displaySettings:
                            type: object
                            properties:
                              dateFormat:
                                type: string
                                example: YYYY-MM-DD
                              currency:
                                type: string
                                example: CAD
                              layout:
                                type: string
                                example: standard
                          customCss:
                            type: string
                          taxesEnabled:
                            type: boolean
                            example: true
                          defaultTaxExempt:
                            type: boolean
                            example: false
                          taxDisplaySettings:
                            type: object
                          defaultTemplateId:
                            type: string
                          defaultStyleId:
                            type: string
                          createdAt:
                            type: string
                            format: date-time
                          updatedAt:
                            type: string
                            format: date-time
                      availableTemplates:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            templateType:
                              type: string
                            isDefault:
                              type: boolean
                      availableStyles:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            description:
                              type: string
                            isDefault:
                              type: boolean
        '401':
          description: Unauthorized
        '404':
          description: Organization not found
        '500':
          description: Failed to retrieve settings
    put:
      tags:
        - Organization Settings
      summary: Update organization invoice settings
      description: Updates invoice customization settings for the organization. Requires Admin or Manager role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          description: Organization ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                logoUrl:
                  type: string
                  description: Logo URL
                  example: /storage/logos/org123/logo.png
                logoWidth:
                  type: integer
                  description: Logo display width in pixels
                  example: 200
                logoHeight:
                  type: integer
                  description: Logo display height in pixels
                  example: 80
                showLogo:
                  type: boolean
                  description: Whether to display logo on invoices
                  example: true
                showOrgName:
                  type: boolean
                  description: Whether to display organization name
                  example: true
                primaryColor:
                  type: string
                  description: Primary brand color (hex)
                  example: '#2563eb'
                secondaryColor:
                  type: string
                  description: Secondary color (hex)
                  example: '#64748b'
                accentColor:
                  type: string
                  description: Accent color (hex)
                  example: '#3b82f6'
                backgroundColor:
                  type: string
                  description: Background color (hex)
                  example: '#ffffff'
                textColor:
                  type: string
                  description: Text color (hex)
                  example: '#1e293b'
                displaySettings:
                  type: object
                  description: Display format settings
                  properties:
                    dateFormat:
                      type: string
                      example: YYYY-MM-DD
                    currency:
                      type: string
                      example: CAD
                    layout:
                      type: string
                      example: standard
                    showItemCodes:
                      type: boolean
                      example: true
                    showDescription:
                      type: boolean
                      example: true
                customCss:
                  type: string
                  description: Custom CSS for additional styling
                taxesEnabled:
                  type: boolean
                  description: Enable/disable tax calculations organization-wide
                  example: true
                defaultTaxExempt:
                  type: boolean
                  description: Default tax exempt status for new invoices
                  example: false
                taxDisplaySettings:
                  type: object
                  description: Tax display configuration
                  properties:
                    showTaxBreakdown:
                      type: boolean
                      example: true
                    hideTaxColumn:
                      type: boolean
                      example: false
                    taxLabel:
                      type: string
                      example: Tax
                defaultTemplateId:
                  type: string
                  description: Default template ID for new invoices
                defaultStyleId:
                  type: string
                  description: Default style ID for new invoices
      responses:
        '200':
          description: Settings updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      branding:
                        type: object
                        description: Updated branding settings
        '400':
          description: Invalid settings data
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Organization not found
        '500':
          description: Failed to update settings
  /api/v1/organizations/{organizationId}/settings/tax:
    get:
      tags:
        - Organization Settings
      summary: Get tax settings
      description: Retrieves tax calculation settings for the organization.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          description: Organization ID
          schema:
            type: string
      responses:
        '200':
          description: Tax settings retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      taxesEnabled:
                        type: boolean
                        description: Whether tax calculations are enabled
                        example: true
                      defaultTaxExempt:
                        type: boolean
                        description: Default tax exempt status
                        example: false
        '401':
          description: Unauthorized
        '500':
          description: Failed to retrieve tax settings
    put:
      tags:
        - Organization Settings
      summary: Update tax settings
      description: Updates tax calculation settings for the organization. When disabled, all invoices will skip tax calculations and hide tax fields. Requires Admin or Manager role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          description: Organization ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - taxesEnabled
              properties:
                taxesEnabled:
                  type: boolean
                  description: Enable or disable tax calculations organization-wide
                  example: false
                defaultTaxExempt:
                  type: boolean
                  description: Default tax exempt status for new invoices
                  example: false
      responses:
        '200':
          description: Tax settings updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                    example: Tax settings updated successfully
                  data:
                    type: object
                    properties:
                      taxesEnabled:
                        type: boolean
                      defaultTaxExempt:
                        type: boolean
        '400':
          description: Invalid tax settings data
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Failed to update tax settings
  /api/v1/organizations/{organizationId}/tax/calculate:
    post:
      summary: Calculate tax for a transaction
      description: Calculates taxes for transaction items based on jurisdiction and customer status
      tags:
        - Tax
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Organization ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxCalculationRequest'
      responses:
        '200':
          description: Tax calculation successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/TaxCalculationResult'
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /api/v1/organizations/{organizationId}/tax/calculate/canadian:
    post:
      summary: Calculate Canadian tax with provincial rules
      description: Calculates Canadian GST/HST/PST with province-specific rules and context
      tags:
        - Tax
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Organization ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/TaxCalculationRequest'
                - type: object
                  properties:
                    context:
                      $ref: '#/components/schemas/CanadianTaxContext'
      responses:
        '200':
          description: Canadian tax calculation successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    allOf:
                      - $ref: '#/components/schemas/TaxCalculationResult'
                      - type: object
                        properties:
                          canadianBreakdown:
                            type: object
                            properties:
                              gstAmount:
                                type: number
                              hstAmount:
                                type: number
                              pstAmount:
                                type: number
                              provinceName:
                                type: string
                              isCompound:
                                type: boolean
        '400':
          description: Invalid request parameters
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /api/v1/organizations/{organizationId}/tax/gst-hst-return:
    post:
      summary: Generate GST/HST return
      description: Generates comprehensive GST/HST return for the specified period (ACCOUNTANT+ required)
      tags:
        - Tax
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Organization ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - startDate
                - endDate
              properties:
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
                context:
                  $ref: '#/components/schemas/CanadianTaxContext'
      responses:
        '200':
          description: GST/HST return generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/GSTHSTReturn'
  /api/v1/organizations/{organizationId}/tax/itc/calculate:
    post:
      summary: Calculate Input Tax Credits (ITCs)
      description: Calculates Input Tax Credits for business expenses in Canada
      tags:
        - Tax
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Organization ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - expenseAmount
                - taxPaid
                - expenseType
              properties:
                expenseAmount:
                  type: number
                  minimum: 0
                taxPaid:
                  type: number
                  minimum: 0
                expenseType:
                  type: string
                  enum:
                    - BUSINESS_SUPPLIES
                    - EQUIPMENT
                    - PROFESSIONAL_SERVICES
                    - OFFICE_RENT
                    - UTILITIES
                context:
                  $ref: '#/components/schemas/CanadianTaxContext'
      responses:
        '200':
          description: ITC calculation successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      expenseAmount:
                        type: number
                      taxPaid:
                        type: number
                      eligibleITC:
                        type: number
                      recoveryRate:
                        type: number
                      expenseType:
                        type: string
  /api/v1/organizations/{organizationId}/tax/payments:
    post:
      summary: Record tax payment
      description: Records a tax payment made to tax authorities (ACCOUNTANT+ required)
      tags:
        - Tax
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Organization ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - taxType
                - taxPeriod
                - taxYear
                - amountPaid
                - paymentDate
              properties:
                taxType:
                  type: string
                  enum:
                    - GST
                    - HST
                    - PST
                    - CORPORATE_INCOME_TAX
                taxPeriod:
                  type: string
                  enum:
                    - Q1
                    - Q2
                    - Q3
                    - Q4
                    - ANNUAL
                taxYear:
                  type: integer
                  minimum: 2000
                  maximum: 2100
                amountPaid:
                  type: number
                  minimum: 0
                paymentDate:
                  type: string
                  format: date
                paymentReference:
                  type: string
      responses:
        '201':
          description: Tax payment recorded successfully
        '403':
          description: Insufficient permissions (ACCOUNTANT+ required)
  /api/v1/organizations/{organizationId}/tax/rates:
    get:
      summary: Get tax rates for jurisdiction
      description: Retrieves current tax rates for specified jurisdiction
      tags:
        - Tax
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Organization ID
        - in: query
          name: countryCode
          required: true
          schema:
            type: string
            minLength: 2
            maxLength: 2
          description: Two-letter country code
        - in: query
          name: stateProvinceCode
          schema:
            type: string
          description: State or province code
        - in: query
          name: municipalityCode
          schema:
            type: string
          description: Municipality code
        - in: query
          name: postalCode
          schema:
            type: string
          description: Postal or ZIP code
      responses:
        '200':
          description: Tax rates retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/TaxRateResponse'
  /api/v1/organizations/{organizationId}/tax/remittance:
    post:
      summary: Calculate tax remittance for a period
      description: Calculates tax remittance amounts for specified period and frequency (ACCOUNTANT+ required)
      tags:
        - Tax
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: Organization ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - taxType
                - startDate
                - endDate
                - frequency
              properties:
                taxType:
                  type: string
                  enum:
                    - GST
                    - HST
                    - PST
                    - CORPORATE_INCOME_TAX
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
                frequency:
                  type: string
                  enum:
                    - MONTHLY
                    - QUARTERLY
                    - ANNUALLY
      responses:
        '200':
          description: Tax remittance calculated successfully
        '403':
          description: Insufficient permissions (ACCOUNTANT+ required)
  /api/v1/tax/exempt/check:
    post:
      summary: Check if item is GST exempt
      description: Determines if an item is exempt from GST/HST
      tags:
        - Tax
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - itemDescription
              properties:
                itemDescription:
                  type: string
                itemCategory:
                  type: string
      responses:
        '200':
          description: GST exempt status checked successfully
  /api/v1/tax/gst-number/validate:
    post:
      summary: Validate GST number
      description: Validates Canadian GST/HST registration number format
      tags:
        - Tax
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - gstNumber
              properties:
                gstNumber:
                  type: string
                  example: 123456789RT0001
      responses:
        '200':
          description: GST number validation completed
  /api/v1/tax/quick-method/rate:
    get:
      summary: Get Quick Method rate
      description: Returns the Quick Method remittance rate for specified province and business type
      tags:
        - Tax
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: province
          required: true
          schema:
            type: string
            enum:
              - AB
              - BC
              - MB
              - NB
              - NL
              - NS
              - NT
              - NU
              - 'ON'
              - PE
              - QC
              - SK
              - YT
          description: Canadian province or territory code
        - in: query
          name: businessType
          required: true
          schema:
            type: string
            enum:
              - SERVICE
              - RETAIL
              - MANUFACTURING
          description: Business type for Quick Method calculation
      responses:
        '200':
          description: Quick Method rate retrieved successfully
  /api/v1/tax/rates:
    post:
      summary: Configure tax rate
      description: Configure new or update existing tax rate (SUPER_ADMIN required)
      tags:
        - Tax
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - jurisdiction
                - taxType
                - rate
                - effectiveDate
              properties:
                jurisdiction:
                  type: object
                  properties:
                    countryCode:
                      type: string
                    stateProvinceCode:
                      type: string
                    municipalityCode:
                      type: string
                taxType:
                  type: string
                  enum:
                    - GST
                    - HST
                    - PST
                    - MUNICIPAL
                rate:
                  type: number
                  minimum: 0
                  maximum: 100
                effectiveDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
                description:
                  type: string
      responses:
        '201':
          description: Tax rate configured successfully
        '403':
          description: Insufficient permissions (SUPER_ADMIN required)
  /api/v1/tax/rates/canadian/initialize:
    post:
      summary: Initialize Canadian tax rates
      description: Initialize standard Canadian provincial and federal tax rates (SUPER_ADMIN required)
      tags:
        - Tax
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Canadian tax rates initialized successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TaxRateResponse'
                  message:
                    type: string
        '403':
          description: Insufficient permissions (SUPER_ADMIN required)
  /api/v1/tax/small-supplier/threshold:
    get:
      summary: Get small supplier threshold
      description: Returns the current small supplier threshold for GST/HST registration
      tags:
        - Tax
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Small supplier threshold retrieved successfully
  /api/v1/tax/zero-rated/check:
    post:
      summary: Check if item is zero-rated
      description: Determines if an item qualifies for zero-rated GST/HST treatment
      tags:
        - Tax
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - itemDescription
              properties:
                itemDescription:
                  type: string
                itemCategory:
                  type: string
      responses:
        '200':
          description: Zero-rated status checked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      itemDescription:
                        type: string
                      itemCategory:
                        type: string
                      isZeroRated:
                        type: boolean
  /appointments:
    post:
      tags:
        - Appointments
      summary: Create a new appointment
      description: Schedules a new appointment with a customer including date, time, location, and purpose. Supports various appointment types and automated reminders.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - customerId
                - scheduledAt
                - duration
                - type
                - title
              properties:
                customerId:
                  type: string
                  description: Customer ID for the appointment
                  example: clp1234567890
                title:
                  type: string
                  description: Appointment title
                  example: Initial Consultation
                  minLength: 5
                  maxLength: 100
                description:
                  type: string
                  description: Detailed appointment description
                  example: Discuss project requirements and budget
                  maxLength: 1000
                scheduledAt:
                  type: string
                  format: date-time
                  description: Appointment date and time (ISO 8601)
                  example: '2024-01-20T10:00:00Z'
                duration:
                  type: integer
                  description: Appointment duration in minutes
                  example: 60
                  minimum: 15
                  maximum: 480
                type:
                  type: string
                  enum:
                    - CONSULTATION
                    - MEETING
                    - PRESENTATION
                    - REVIEW
                    - FOLLOW_UP
                    - OTHER
                  description: Type of appointment
                  example: CONSULTATION
                location:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - IN_PERSON
                        - VIRTUAL
                        - PHONE
                        - CLIENT_SITE
                      example: IN_PERSON
                    address:
                      type: string
                      example: 123 Business Ave, Suite 100
                    meetingLink:
                      type: string
                      format: uri
                      example: https://meet.google.com/abc-defg-hij
                    phone:
                      type: string
                      example: +1-555-123-4567
                    notes:
                      type: string
                      example: Use main entrance, ask for John
                priority:
                  type: string
                  enum:
                    - LOW
                    - NORMAL
                    - HIGH
                    - URGENT
                  default: NORMAL
                  description: Appointment priority
                reminderSettings:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                      default: true
                    emailReminder:
                      type: boolean
                      default: true
                    smsReminder:
                      type: boolean
                      default: false
                    reminderTimes:
                      type: array
                      items:
                        type: integer
                      description: Reminder times in minutes before appointment
                      example:
                        - 1440
                        - 60
                        - 15
                attendees:
                  type: array
                  items:
                    type: object
                    properties:
                      userId:
                        type: string
                      required:
                        type: boolean
                        default: false
                  description: Internal team members attending
                notes:
                  type: string
                  description: Internal notes about the appointment
                  maxLength: 2000
      responses:
        '201':
          description: Appointment created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Appointment ID
                  title:
                    type: string
                  scheduledAt:
                    type: string
                    format: date-time
                  duration:
                    type: integer
                  status:
                    type: string
                    enum:
                      - SCHEDULED
                      - CONFIRMED
                      - IN_PROGRESS
                      - COMPLETED
                      - CANCELLED
                      - NO_SHOW
                    example: SCHEDULED
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                  createdAt:
                    type: string
                    format: date-time
        '400':
          description: Invalid input data or scheduling conflict
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Customer not found
        '409':
          description: Conflict - Time slot already booked
        '500':
          description: Internal server error
    get:
      tags:
        - Appointments
      summary: List appointments
      description: Retrieves a paginated list of appointments with filtering and search capabilities. Users can view all appointments within their organization.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Number of appointments per page
        - in: query
          name: search
          schema:
            type: string
          description: Search term for appointment title or customer name
        - in: query
          name: status
          schema:
            type: string
            enum:
              - SCHEDULED
              - CONFIRMED
              - IN_PROGRESS
              - COMPLETED
              - CANCELLED
              - NO_SHOW
          description: Filter by appointment status
        - in: query
          name: type
          schema:
            type: string
            enum:
              - CONSULTATION
              - MEETING
              - PRESENTATION
              - REVIEW
              - FOLLOW_UP
              - OTHER
          description: Filter by appointment type
        - in: query
          name: customerId
          schema:
            type: string
          description: Filter by specific customer
        - in: query
          name: assignedTo
          schema:
            type: string
          description: Filter by assigned user ID
        - in: query
          name: dateFrom
          schema:
            type: string
            format: date
          description: Filter appointments from this date (YYYY-MM-DD)
        - in: query
          name: dateTo
          schema:
            type: string
            format: date
          description: Filter appointments to this date (YYYY-MM-DD)
        - in: query
          name: priority
          schema:
            type: string
            enum:
              - LOW
              - NORMAL
              - HIGH
              - URGENT
          description: Filter by appointment priority
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - scheduledAt
              - createdAt
              - updatedAt
              - title
              - status
              - priority
            default: scheduledAt
          description: Field to sort by
        - in: query
          name: sortOrder
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
          description: Sort order
      responses:
        '200':
          description: Appointments retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Appointment ID
                        title:
                          type: string
                          example: Initial Consultation
                        description:
                          type: string
                        scheduledAt:
                          type: string
                          format: date-time
                        duration:
                          type: integer
                          description: Duration in minutes
                        status:
                          type: string
                          enum:
                            - SCHEDULED
                            - CONFIRMED
                            - IN_PROGRESS
                            - COMPLETED
                            - CANCELLED
                            - NO_SHOW
                        type:
                          type: string
                          enum:
                            - CONSULTATION
                            - MEETING
                            - PRESENTATION
                            - REVIEW
                            - FOLLOW_UP
                            - OTHER
                        priority:
                          type: string
                          enum:
                            - LOW
                            - NORMAL
                            - HIGH
                            - URGENT
                        customer:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            email:
                              type: string
                        location:
                          type: object
                          properties:
                            type:
                              type: string
                            address:
                              type: string
                            meetingLink:
                              type: string
                        assignedTo:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                              role:
                                type: string
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      total:
                        type: integer
                      pages:
                        type: integer
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '500':
          description: Internal server error
  /appointments/stats/summary:
    get:
      tags:
        - Appointments
      summary: Get appointment statistics
      description: Retrieves comprehensive appointment statistics including status distribution, booking trends, and performance metrics for the organization.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: period
          schema:
            type: string
            enum:
              - day
              - week
              - month
              - quarter
              - year
            default: month
          description: Time period for statistics calculation
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: Start date for custom period (YYYY-MM-DD)
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: End date for custom period (YYYY-MM-DD)
        - in: query
          name: type
          schema:
            type: string
            enum:
              - CONSULTATION
              - MEETING
              - PRESENTATION
              - REVIEW
              - FOLLOW_UP
              - OTHER
          description: Filter by appointment type
      responses:
        '200':
          description: Appointment statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    type: object
                    properties:
                      totalAppointments:
                        type: integer
                        description: Total number of appointments
                      completedAppointments:
                        type: integer
                        description: Successfully completed appointments
                      cancelledAppointments:
                        type: integer
                        description: Cancelled appointments
                      noShowAppointments:
                        type: integer
                        description: No-show appointments
                      upcomingAppointments:
                        type: integer
                        description: Scheduled future appointments
                      completionRate:
                        type: number
                        format: float
                        description: Percentage of completed appointments
                  statusDistribution:
                    type: object
                    properties:
                      SCHEDULED:
                        type: integer
                      CONFIRMED:
                        type: integer
                      IN_PROGRESS:
                        type: integer
                      COMPLETED:
                        type: integer
                      CANCELLED:
                        type: integer
                      NO_SHOW:
                        type: integer
                  typeDistribution:
                    type: object
                    properties:
                      CONSULTATION:
                        type: integer
                      MEETING:
                        type: integer
                      PRESENTATION:
                        type: integer
                      REVIEW:
                        type: integer
                      FOLLOW_UP:
                        type: integer
                      OTHER:
                        type: integer
                  trends:
                    type: object
                    properties:
                      bookingsPerDay:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              format: date
                            count:
                              type: integer
                      averageDuration:
                        type: number
                        format: float
                        description: Average appointment duration in minutes
                      peakHours:
                        type: array
                        items:
                          type: object
                          properties:
                            hour:
                              type: integer
                            count:
                              type: integer
                  performance:
                    type: object
                    properties:
                      onTimeRate:
                        type: number
                        format: float
                        description: Percentage of on-time appointments
                      averageLeadTime:
                        type: number
                        format: float
                        description: Average days between booking and appointment
                      customerSatisfaction:
                        type: number
                        format: float
                        description: Average satisfaction rating
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '500':
          description: Internal server error
  /appointments/{id}:
    get:
      tags:
        - Appointments
      summary: Get appointment details
      description: Retrieves detailed information about a specific appointment including participants, location, history, and related documents.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Appointment ID
          schema:
            type: string
            example: clp1234567890
      responses:
        '200':
          description: Appointment details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Appointment ID
                  title:
                    type: string
                    example: Initial Consultation
                  description:
                    type: string
                    example: Discuss project requirements and timeline
                  scheduledAt:
                    type: string
                    format: date-time
                    example: '2024-01-20T10:00:00Z'
                  duration:
                    type: integer
                    description: Duration in minutes
                    example: 60
                  status:
                    type: string
                    enum:
                      - SCHEDULED
                      - CONFIRMED
                      - IN_PROGRESS
                      - COMPLETED
                      - CANCELLED
                      - NO_SHOW
                    example: CONFIRMED
                  type:
                    type: string
                    enum:
                      - CONSULTATION
                      - MEETING
                      - PRESENTATION
                      - REVIEW
                      - FOLLOW_UP
                      - OTHER
                    example: CONSULTATION
                  priority:
                    type: string
                    enum:
                      - LOW
                      - NORMAL
                      - HIGH
                      - URGENT
                    example: HIGH
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                        example: John Doe
                      email:
                        type: string
                        example: john@example.com
                      phone:
                        type: string
                        example: +1-555-123-4567
                  location:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - IN_PERSON
                          - VIRTUAL
                          - PHONE
                          - CLIENT_SITE
                        example: IN_PERSON
                      address:
                        type: string
                        example: 123 Business Ave, Suite 100
                      meetingLink:
                        type: string
                        format: uri
                        example: https://meet.google.com/abc-defg-hij
                      phone:
                        type: string
                        example: +1-555-123-4567
                      notes:
                        type: string
                        example: Use main entrance, ask for John
                  attendees:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        email:
                          type: string
                        role:
                          type: string
                        required:
                          type: boolean
                        status:
                          type: string
                          enum:
                            - INVITED
                            - CONFIRMED
                            - DECLINED
                            - TENTATIVE
                  reminderSettings:
                    type: object
                    properties:
                      enabled:
                        type: boolean
                      emailReminder:
                        type: boolean
                      smsReminder:
                        type: boolean
                      reminderTimes:
                        type: array
                        items:
                          type: integer
                        description: Reminder times in minutes before appointment
                  history:
                    type: array
                    items:
                      type: object
                      properties:
                        action:
                          type: string
                          enum:
                            - CREATED
                            - UPDATED
                            - CONFIRMED
                            - RESCHEDULED
                            - CANCELLED
                            - COMPLETED
                        timestamp:
                          type: string
                          format: date-time
                        performedBy:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                        notes:
                          type: string
                    description: Appointment history and changes
                  attachments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        filename:
                          type: string
                        description:
                          type: string
                        url:
                          type: string
                        uploadedAt:
                          type: string
                          format: date-time
                        uploadedBy:
                          type: string
                  relatedRecords:
                    type: object
                    properties:
                      quoteId:
                        type: string
                        description: Related quote ID (if applicable)
                      projectId:
                        type: string
                        description: Related project ID (if applicable)
                      invoiceId:
                        type: string
                        description: Related invoice ID (if applicable)
                  notes:
                    type: string
                    description: Internal notes about the appointment
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  createdBy:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '404':
          description: Appointment not found
        '500':
          description: Internal server error
    put:
      tags:
        - Appointments
      summary: Update appointment
      description: Updates appointment details including title, description, location, and participants. Note that changing date/time should use the reschedule endpoint.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Appointment ID
          schema:
            type: string
            example: clp1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Appointment title
                  example: Updated Consultation Meeting
                  minLength: 5
                  maxLength: 100
                description:
                  type: string
                  description: Detailed appointment description
                  example: 'Updated: Discuss project scope and requirements'
                  maxLength: 1000
                type:
                  type: string
                  enum:
                    - CONSULTATION
                    - MEETING
                    - PRESENTATION
                    - REVIEW
                    - FOLLOW_UP
                    - OTHER
                  description: Type of appointment
                priority:
                  type: string
                  enum:
                    - LOW
                    - NORMAL
                    - HIGH
                    - URGENT
                  description: Appointment priority
                location:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - IN_PERSON
                        - VIRTUAL
                        - PHONE
                        - CLIENT_SITE
                    address:
                      type: string
                    meetingLink:
                      type: string
                      format: uri
                    phone:
                      type: string
                    notes:
                      type: string
                reminderSettings:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                    emailReminder:
                      type: boolean
                    smsReminder:
                      type: boolean
                    reminderTimes:
                      type: array
                      items:
                        type: integer
                      description: Reminder times in minutes before appointment
                attendees:
                  type: array
                  items:
                    type: object
                    properties:
                      userId:
                        type: string
                      required:
                        type: boolean
                        default: false
                  description: Internal team members attending
                notes:
                  type: string
                  description: Internal notes about the appointment
                  maxLength: 2000
                updateReason:
                  type: string
                  description: Reason for the update
                  example: Added additional attendees
                  maxLength: 500
      responses:
        '200':
          description: Appointment updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  type:
                    type: string
                    enum:
                      - CONSULTATION
                      - MEETING
                      - PRESENTATION
                      - REVIEW
                      - FOLLOW_UP
                      - OTHER
                  priority:
                    type: string
                    enum:
                      - LOW
                      - NORMAL
                      - HIGH
                      - URGENT
                  location:
                    type: object
                  updatedBy:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
                  updatedAt:
                    type: string
                    format: date-time
                  changes:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                        previousValue:
                          type: string
                        newValue:
                          type: string
                    description: Summary of changes made
                  notificationsSent:
                    type: array
                    items:
                      type: string
                    description: List of notification types sent
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Appointment not found
        '409':
          description: Conflict - Appointment in invalid state for updates
        '500':
          description: Internal server error
  /appointments/{id}/cancel:
    post:
      tags:
        - Appointments
      summary: Cancel appointment
      description: Cancels an appointment with reason and notification options. Handles cancellation policies and rescheduling suggestions.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Appointment ID
          schema:
            type: string
            example: clp1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
                - cancelledBy
              properties:
                reason:
                  type: string
                  enum:
                    - CLIENT_REQUEST
                    - EMERGENCY
                    - SCHEDULING_CONFLICT
                    - WEATHER
                    - ILLNESS
                    - OTHER
                  description: Reason for cancellation
                  example: CLIENT_REQUEST
                cancelledBy:
                  type: string
                  enum:
                    - CLIENT
                    - STAFF
                    - SYSTEM
                  description: Who initiated the cancellation
                  example: CLIENT
                notes:
                  type: string
                  description: Additional cancellation notes
                  example: Client had to travel unexpectedly
                  maxLength: 1000
                refundAmount:
                  type: number
                  format: float
                  description: Refund amount (if applicable)
                  minimum: 0
                rescheduleRequested:
                  type: boolean
                  default: false
                  description: Whether client wants to reschedule
                suggestedRescheduleDate:
                  type: string
                  format: date-time
                  description: Suggested new appointment time
                notifyClient:
                  type: boolean
                  default: true
                  description: Whether to notify the client
                applyPenalty:
                  type: boolean
                  default: false
                  description: Whether to apply cancellation penalty
      responses:
        '200':
          description: Appointment cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  status:
                    type: string
                    example: CANCELLED
                  reason:
                    type: string
                  cancelledBy:
                    type: string
                  cancelledAt:
                    type: string
                    format: date-time
                  refundProcessed:
                    type: object
                    properties:
                      amount:
                        type: number
                        format: float
                      transactionId:
                        type: string
                      processingTime:
                        type: string
                  rescheduleOptions:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date-time
                        available:
                          type: boolean
                    description: Available reschedule slots
                  penaltyApplied:
                    type: object
                    properties:
                      amount:
                        type: number
                        format: float
                      reason:
                        type: string
                  notificationsSent:
                    type: array
                    items:
                      type: string
                    description: List of notification types sent
        '400':
          description: Invalid input data or appointment cannot be cancelled
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Appointment not found
        '409':
          description: Conflict - Appointment already cancelled or in invalid state
        '500':
          description: Internal server error
  /appointments/{id}/complete:
    post:
      tags:
        - Appointments
      summary: Complete appointment
      description: Marks appointment as completed with outcome details, follow-up actions, and billing information. Essential for tracking service delivery.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Appointment ID
          schema:
            type: string
            example: clp1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - outcome
              properties:
                outcome:
                  type: string
                  enum:
                    - SUCCESSFUL
                    - PARTIALLY_COMPLETED
                    - RESCHEDULED
                    - CLIENT_NO_SHOW
                    - CANCELLED
                  description: Appointment outcome
                  example: SUCCESSFUL
                completionNotes:
                  type: string
                  description: Detailed notes about the appointment
                  example: Discussed project requirements, provided quote
                  minLength: 10
                  maxLength: 2000
                actualDuration:
                  type: integer
                  description: Actual duration in minutes
                  example: 75
                  minimum: 1
                followUpRequired:
                  type: boolean
                  default: false
                  description: Whether follow-up is required
                followUpDate:
                  type: string
                  format: date
                  description: Suggested follow-up date
                nextSteps:
                  type: array
                  items:
                    type: string
                  description: List of next steps or action items
                  example:
                    - Send detailed quote
                    - Schedule site visit
                billableHours:
                  type: number
                  format: float
                  description: Billable hours for this appointment
                  example: 1.25
                  minimum: 0
                expenses:
                  type: array
                  items:
                    type: object
                    properties:
                      description:
                        type: string
                      amount:
                        type: number
                        format: float
                      category:
                        type: string
                  description: Expenses incurred during appointment
                clientSatisfaction:
                  type: integer
                  minimum: 1
                  maximum: 5
                  description: Client satisfaction rating (1-5)
                attachments:
                  type: array
                  items:
                    type: object
                    properties:
                      filename:
                        type: string
                      description:
                        type: string
                      url:
                        type: string
                  description: Files or documents related to the appointment
      responses:
        '200':
          description: Appointment completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  status:
                    type: string
                    example: COMPLETED
                  outcome:
                    type: string
                  completedBy:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
                  completedAt:
                    type: string
                    format: date-time
                  actualDuration:
                    type: integer
                  billableAmount:
                    type: number
                    format: float
                    description: Calculated billable amount
                  followUpAppointmentId:
                    type: string
                    description: ID of created follow-up appointment (if any)
                  generatedInvoiceId:
                    type: string
                    description: ID of generated invoice (if applicable)
        '400':
          description: Invalid input data or appointment cannot be completed
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Appointment not found
        '409':
          description: Conflict - Appointment already completed or in invalid state
        '500':
          description: Internal server error
  /appointments/{id}/confirm:
    post:
      tags:
        - Appointments
      summary: Confirm appointment
      description: Confirms a scheduled appointment, changing status from SCHEDULED to CONFIRMED. Triggers confirmation notifications to all participants.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Appointment ID
          schema:
            type: string
            example: clp1234567890
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                confirmationNotes:
                  type: string
                  description: Notes about the confirmation
                  example: Customer confirmed availability
                  maxLength: 500
                sendNotifications:
                  type: boolean
                  default: true
                  description: Whether to send confirmation notifications
      responses:
        '200':
          description: Appointment confirmed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  status:
                    type: string
                    example: CONFIRMED
                  confirmedBy:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
                  confirmedAt:
                    type: string
                    format: date-time
                  notificationsSent:
                    type: array
                    items:
                      type: string
                    description: List of notification types sent
        '400':
          description: Invalid request - Appointment cannot be confirmed
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Appointment not found
        '409':
          description: Conflict - Appointment already confirmed or in invalid state
        '500':
          description: Internal server error
  /appointments/{id}/reschedule:
    post:
      tags:
        - Appointments
      summary: Reschedule appointment
      description: Reschedules an existing appointment to a new date and time while preserving all appointment details and history.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Appointment ID
          schema:
            type: string
            example: clp1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - newScheduledAt
                - reason
              properties:
                newScheduledAt:
                  type: string
                  format: date-time
                  description: New appointment date and time (ISO 8601)
                  example: '2024-01-25T14:00:00Z'
                newDuration:
                  type: integer
                  description: New appointment duration in minutes (optional)
                  example: 90
                  minimum: 15
                  maximum: 480
                reason:
                  type: string
                  enum:
                    - CLIENT_REQUEST
                    - STAFF_UNAVAILABLE
                    - SCHEDULING_CONFLICT
                    - EMERGENCY
                    - OTHER
                  description: Reason for rescheduling
                  example: CLIENT_REQUEST
                rescheduledBy:
                  type: string
                  enum:
                    - CLIENT
                    - STAFF
                    - SYSTEM
                  description: Who initiated the reschedule
                  example: CLIENT
                notes:
                  type: string
                  description: Additional rescheduling notes
                  example: Client needs later time due to work schedule
                  maxLength: 1000
                updateLocation:
                  type: object
                  description: Updated location information (optional)
                  properties:
                    type:
                      type: string
                      enum:
                        - IN_PERSON
                        - VIRTUAL
                        - PHONE
                        - CLIENT_SITE
                    address:
                      type: string
                    meetingLink:
                      type: string
                      format: uri
                    phone:
                      type: string
                notifyParticipants:
                  type: boolean
                  default: true
                  description: Whether to notify all participants
                sendCalendarUpdate:
                  type: boolean
                  default: true
                  description: Whether to send calendar updates
                preserveReminders:
                  type: boolean
                  default: true
                  description: Whether to preserve existing reminder settings
      responses:
        '200':
          description: Appointment rescheduled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  previousScheduledAt:
                    type: string
                    format: date-time
                    description: Original appointment time
                  newScheduledAt:
                    type: string
                    format: date-time
                    description: New appointment time
                  duration:
                    type: integer
                  status:
                    type: string
                    example: SCHEDULED
                  rescheduledBy:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
                  rescheduledAt:
                    type: string
                    format: date-time
                  rescheduleHistory:
                    type: array
                    items:
                      type: object
                      properties:
                        previousDate:
                          type: string
                          format: date-time
                        newDate:
                          type: string
                          format: date-time
                        reason:
                          type: string
                        rescheduledAt:
                          type: string
                          format: date-time
                    description: History of reschedules for this appointment
                  notificationsSent:
                    type: array
                    items:
                      type: string
                    description: List of notification types sent
                  calendarUpdated:
                    type: boolean
                    description: Whether calendar invites were updated
                  conflictWarnings:
                    type: array
                    items:
                      type: string
                    description: Any scheduling conflicts or warnings
        '400':
          description: Invalid input data or new time slot unavailable
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Appointment not found
        '409':
          description: Conflict - New time slot already booked or scheduling conflict
        '500':
          description: Internal server error
  /audit/entity/{entityType}/{entityId}/history:
    get:
      tags:
        - Audit
      summary: Get entity history
      description: Get the complete audit history for a specific entity. Requires Manager+ role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: entityType
          required: true
          schema:
            type: string
          description: Type of entity (e.g., Customer, Invoice, Payment)
        - in: path
          name: entityId
          required: true
          schema:
            type: string
          description: ID of the entity
      responses:
        '200':
          description: Entity history retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        timestamp:
                          type: string
                          format: date-time
                        userName:
                          type: string
                        action:
                          type: string
                        changes:
                          type: object
                        ipAddress:
                          type: string
        '403':
          description: Insufficient permissions
        '404':
          description: Entity not found
  /audit/export:
    get:
      tags:
        - Audit
      summary: Export audit logs
      description: Export audit logs in various formats (JSON, CSV, PDF). Requires Admin+ role.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date-time
          description: Start date for export (ISO 8601)
        - in: query
          name: endDate
          schema:
            type: string
            format: date-time
          description: End date for export (ISO 8601)
        - in: query
          name: format
          schema:
            type: string
            enum:
              - json
              - csv
              - pdf
            default: json
          description: Export format
        - in: query
          name: userId
          schema:
            type: string
          description: Filter by user ID
        - in: query
          name: action
          schema:
            type: string
            enum:
              - CREATE
              - UPDATE
              - DELETE
              - VIEW
              - LOGIN
              - LOGOUT
              - EXPORT
              - IMPORT
              - REFUND
              - AUTHORIZE
          description: Filter by action type
        - in: query
          name: resource
          schema:
            type: string
          description: Filter by resource/entity type
      responses:
        '200':
          description: Audit logs exported successfully
          content:
            application/json:
              schema:
                type: string
            text/csv:
              schema:
                type: string
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          description: Validation error
        '403':
          description: Insufficient permissions
  /audit/logs:
    get:
      tags:
        - Audit
      summary: Get audit logs
      description: Retrieve paginated audit logs with filtering options. Requires Admin+ role.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date-time
          description: Start date for filtering logs (ISO 8601)
        - in: query
          name: endDate
          schema:
            type: string
            format: date-time
          description: End date for filtering logs (ISO 8601)
        - in: query
          name: category
          schema:
            type: string
            enum:
              - AUTH
              - DATA
              - SYSTEM
              - SECURITY
              - FINANCIAL
          description: Filter by event category
        - in: query
          name: severity
          schema:
            type: string
            enum:
              - LOW
              - MEDIUM
              - HIGH
              - CRITICAL
          description: Filter by severity level
        - in: query
          name: success
          schema:
            type: boolean
          description: Filter by success status
        - in: query
          name: search
          schema:
            type: string
            maxLength: 100
          description: Search in descriptions and resources
        - in: query
          name: userId
          schema:
            type: string
          description: Filter by user ID
        - in: query
          name: action
          schema:
            type: string
            enum:
              - CREATE
              - UPDATE
              - DELETE
              - VIEW
              - LOGIN
              - LOGOUT
              - EXPORT
              - IMPORT
              - REFUND
              - AUTHORIZE
          description: Filter by action type
        - in: query
          name: resource
          schema:
            type: string
          description: Filter by resource/entity type
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
          description: Number of items per page
      responses:
        '200':
          description: Audit logs retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    timestamp:
                      type: string
                      format: date-time
                    userId:
                      type: string
                    userName:
                      type: string
                    userRole:
                      type: string
                    action:
                      type: string
                    category:
                      type: string
                      enum:
                        - AUTH
                        - DATA
                        - SYSTEM
                        - SECURITY
                        - FINANCIAL
                    severity:
                      type: string
                      enum:
                        - LOW
                        - MEDIUM
                        - HIGH
                        - CRITICAL
                    resource:
                      type: string
                    description:
                      type: string
                    ipAddress:
                      type: string
                    userAgent:
                      type: string
                    success:
                      type: boolean
                    details:
                      type: object
                    riskScore:
                      type: number
                      minimum: 0
                      maximum: 100
        '400':
          description: Validation error
        '403':
          description: Insufficient permissions
  /audit/security-metrics:
    get:
      tags:
        - Audit
      summary: Get security metrics dashboard
      description: Get real-time security metrics and compliance status. Requires Admin+ role.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Security metrics retrieved successfully
        '403':
          description: Insufficient permissions
  /audit/security-summary:
    get:
      tags:
        - Audit
      summary: Get security summary
      description: Get security metrics and analytics for a given time period. Requires Admin+ role.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: startDate
          required: true
          schema:
            type: string
            format: date-time
          description: Start date for the summary period (ISO 8601)
        - in: query
          name: endDate
          required: true
          schema:
            type: string
            format: date-time
          description: End date for the summary period (ISO 8601)
      responses:
        '200':
          description: Security summary retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalEvents:
                    type: number
                    description: Total number of audit events
                  criticalEvents:
                    type: number
                    description: Number of critical severity events
                  failedLogins:
                    type: number
                    description: Number of failed login attempts
                  dataAccess:
                    type: number
                    description: Number of data access events
                  recentActivity:
                    type: array
                    items:
                      type: object
                      properties:
                        time:
                          type: string
                          format: date-time
                        events:
                          type: number
                        severity:
                          type: string
                          enum:
                            - LOW
                            - MEDIUM
                            - HIGH
                            - CRITICAL
        '400':
          description: Validation error
        '403':
          description: Insufficient permissions
  /audit/sessions:
    get:
      tags:
        - Audit
      summary: Get active user sessions
      description: Get list of currently active user sessions with risk analysis. Requires Admin+ role.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Active sessions retrieved successfully
        '403':
          description: Insufficient permissions
  /audit/suspicious-activity:
    get:
      tags:
        - Audit
      summary: Get suspicious activity alerts
      description: Get detected suspicious activities and security alerts. Requires Admin+ role.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: severity
          schema:
            type: string
            enum:
              - low
              - medium
              - high
              - critical
          description: Filter by severity level
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
          description: Maximum number of activities to return
      responses:
        '200':
          description: Suspicious activities retrieved successfully
        '403':
          description: Insufficient permissions
  /audit/users/{userId}/activity:
    get:
      tags:
        - Audit
      summary: Get user activity timeline
      description: Get comprehensive activity timeline for a specific user. Requires Admin+ role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: User ID
        - in: query
          name: startDate
          schema:
            type: string
            format: date-time
          description: Start date for activity timeline
        - in: query
          name: endDate
          schema:
            type: string
            format: date-time
          description: End date for activity timeline
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
          description: Maximum number of activities to return
      responses:
        '200':
          description: User activity retrieved successfully
        '403':
          description: Insufficient permissions
  /auth/2fa/disable:
    post:
      tags:
        - Authentication
      summary: Disable two-factor authentication
      description: Disables 2FA for the current user account. Requires password confirmation and either 2FA code or backup code for security.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
                  description: Current password for verification
                  example: CurrentPass123!
                code:
                  type: string
                  description: 6-digit code from authenticator app
                  example: '123456'
                  pattern: ^[0-9]{6}$
                backupCode:
                  type: string
                  description: Backup code (alternative to app code)
                  example: '12345678'
                reason:
                  type: string
                  description: Optional reason for disabling 2FA
                  example: Lost authenticator device
                  maxLength: 200
      responses:
        '200':
          description: 2FA disabled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Two-factor authentication disabled successfully
                  disabled:
                    type: boolean
                    example: true
                  disabledAt:
                    type: string
                    format: date-time
                  reason:
                    type: string
                    description: Reason provided for disabling
                  security:
                    type: object
                    properties:
                      otherSessionsLoggedOut:
                        type: boolean
                        description: Whether other sessions were logged out for security
                      sessionsTerminated:
                        type: integer
                        description: Number of sessions terminated
                  newTokens:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        description: New access token without 2FA flag
                      refreshToken:
                        type: string
                    description: Updated tokens reflecting new 2FA status
        '400':
          description: Invalid password, code, or 2FA not enabled
        '401':
          description: Unauthorized - Invalid authentication or verification failed
        '500':
          description: Internal server error
  /auth/2fa/enable:
    post:
      tags:
        - Authentication
      summary: Enable two-factor authentication
      description: Enables 2FA for the current user account. Returns QR code and backup codes for authentication app setup. Requires password confirmation.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
                  description: Current password for verification
                  example: CurrentPass123!
                method:
                  type: string
                  enum:
                    - app
                    - sms
                  default: app
                  description: 2FA method preference
      responses:
        '200':
          description: 2FA setup initiated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Two-factor authentication setup initiated
                  qrCodeUrl:
                    type: string
                    description: QR code URL for authentication app
                    example: otpauth://totp/AccountingAPI:john.doe@example.com?secret=...
                  qrCodeImage:
                    type: string
                    description: Base64 encoded QR code image
                  secret:
                    type: string
                    description: Manual entry secret key (if QR code can't be scanned)
                    example: JBSWY3DPEHPK3PXP
                  backupCodes:
                    type: array
                    items:
                      type: string
                    description: One-time backup codes for recovery
                    example:
                      - '12345678'
                      - '87654321'
                      - '11223344'
                  nextStep:
                    type: string
                    description: Instructions for completing setup
                    example: Scan QR code with authenticator app and verify with generated code
        '400':
          description: Invalid password or 2FA already enabled
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '500':
          description: Internal server error
  /auth/2fa/verify:
    post:
      tags:
        - Authentication
      summary: Verify two-factor authentication
      description: Verifies 2FA setup by confirming the code from authenticator app. Completes 2FA enablement and provides new recovery codes.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
              properties:
                code:
                  type: string
                  description: 6-digit code from authenticator app
                  example: '123456'
                  pattern: ^[0-9]{6}$
                backupCode:
                  type: string
                  description: Backup code (alternative to app code)
                  example: '12345678'
      responses:
        '200':
          description: 2FA verified and enabled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Two-factor authentication enabled successfully
                  enabled:
                    type: boolean
                    example: true
                  enabledAt:
                    type: string
                    format: date-time
                  method:
                    type: string
                    example: app
                  recoveryCodesRemaining:
                    type: integer
                    description: Number of unused backup codes
                    example: 10
                  newTokens:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        description: New access token with 2FA flag
                      refreshToken:
                        type: string
                    description: Updated tokens reflecting 2FA status
        '400':
          description: Invalid or expired code
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '409':
          description: 2FA not in setup state or already enabled
        '500':
          description: Internal server error
  /auth/change-password:
    post:
      tags:
        - Authentication
      summary: Change user password
      description: Changes the current user's password. Requires current password verification and logs out all other sessions for security.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - currentPassword
                - newPassword
              properties:
                currentPassword:
                  type: string
                  description: Current password for verification
                  example: CurrentPass123!
                newPassword:
                  type: string
                  description: New password (must meet security requirements)
                  example: NewSecurePass123!
                  minLength: 8
                  pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$
                confirmPassword:
                  type: string
                  description: Password confirmation (must match newPassword)
                  example: NewSecurePass123!
                logoutOtherSessions:
                  type: boolean
                  default: true
                  description: Whether to logout other active sessions
      responses:
        '200':
          description: Password changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Password changed successfully
                  changedAt:
                    type: string
                    format: date-time
                  otherSessionsLoggedOut:
                    type: boolean
                    description: Whether other sessions were logged out
                  sessionsTerminated:
                    type: integer
                    description: Number of other sessions terminated
                  newTokens:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        description: New access token for continued use
                      refreshToken:
                        type: string
                        description: New refresh token
                      expiresIn:
                        type: integer
        '400':
          description: Invalid input data, password mismatch, or weak password
        '401':
          description: Current password is incorrect
        '403':
          description: Password change not allowed (e.g., recently changed)
        '500':
          description: Internal server error
  /auth/forgot-password:
    post:
      tags:
        - Authentication
      summary: Initiate password reset
      description: Send password reset email to user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: User email address
              required:
                - email
      responses:
        '200':
          description: Password reset email sent (always returns 200 for security)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: If an account with that email exists, a password reset link has been sent.
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Authenticate user
      description: Authenticates user credentials and returns JWT access and refresh tokens. Supports multi-factor authentication and tracks login sessions.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: User email address
                  example: john.doe@example.com
                password:
                  type: string
                  description: User password
                  example: SecurePass123!
                organizationId:
                  type: string
                  description: Optional organization ID for multi-tenant users
                  example: clp1234567890
                rememberMe:
                  type: boolean
                  default: false
                  description: Whether to extend session duration
                twoFactorCode:
                  type: string
                  description: Two-factor authentication code (if enabled)
                  example: '123456'
                  pattern: ^[0-9]{6}$
                deviceInfo:
                  type: object
                  properties:
                    deviceName:
                      type: string
                      example: John's MacBook Pro
                    userAgent:
                      type: string
                    ipAddress:
                      type: string
                      format: ipv4
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: JWT access token (15 minutes expiry)
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  refreshToken:
                    type: string
                    description: JWT refresh token (30 days expiry)
                  tokenType:
                    type: string
                    example: Bearer
                  expiresIn:
                    type: integer
                    description: Access token expiry in seconds
                    example: 900
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      role:
                        type: string
                        enum:
                          - SUPER_ADMIN
                          - ADMIN
                          - MANAGER
                          - ACCOUNTANT
                          - EMPLOYEE
                          - VIEWER
                      organizationId:
                        type: string
                      lastLoginAt:
                        type: string
                        format: date-time
                      twoFactorEnabled:
                        type: boolean
                  sessionId:
                    type: string
                    description: Session identifier for logout operations
        '400':
          description: Invalid credentials or validation errors
        '401':
          description: Authentication failed - invalid email/password
        '403':
          description: Account locked, suspended, or requires verification
        '423':
          description: Account temporarily locked due to failed attempts
        '500':
          description: Internal server error
  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout current session
      description: Invalidates the current session by blacklisting the access token and removing the refresh token. Logs the logout event for security auditing.
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: string
                  description: Optional session ID to logout (defaults to current session)
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logout successful
                  loggedOutAt:
                    type: string
                    format: date-time
                  sessionId:
                    type: string
                    description: ID of the logged out session
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '500':
          description: Internal server error
  /auth/logout-all:
    post:
      tags:
        - Authentication
      summary: Logout all sessions
      description: Invalidates all active sessions for the current user across all devices. Useful for security incidents or when changing passwords.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: All sessions logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: All sessions logged out successfully
                  sessionsTerminated:
                    type: integer
                    description: Number of sessions that were terminated
                    example: 3
                  loggedOutAt:
                    type: string
                    format: date-time
                  devicesSummary:
                    type: array
                    items:
                      type: object
                      properties:
                        deviceName:
                          type: string
                        lastActive:
                          type: string
                          format: date-time
                        location:
                          type: string
                    description: Summary of devices that were logged out
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '500':
          description: Internal server error
  /auth/me:
    get:
      tags:
        - Authentication
      summary: Get current user profile
      description: Retrieve the authenticated user's profile information
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  organization:
                    $ref: '#/components/schemas/Organization'
                  permissions:
                    type: array
                    items:
                      type: string
                    description: User permissions for current organization
                    example:
                      - customers:read
                      - quotes:write
                      - invoices:read
        '401':
          $ref: '#/components/responses/AuthenticationError'
  /auth/profile:
    get:
      tags:
        - Authentication
      summary: Get user profile
      description: Retrieves the current user's profile information including personal details, preferences, and account settings.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: User ID
                  email:
                    type: string
                    format: email
                    example: john.doe@example.com
                  firstName:
                    type: string
                    example: John
                  lastName:
                    type: string
                    example: Doe
                  role:
                    type: string
                    enum:
                      - SUPER_ADMIN
                      - ADMIN
                      - MANAGER
                      - ACCOUNTANT
                      - EMPLOYEE
                      - VIEWER
                    example: EMPLOYEE
                  organizationId:
                    type: string
                  organization:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                        example: Acme Corporation
                      domain:
                        type: string
                        example: acme.com
                  phone:
                    type: string
                    example: +1-555-123-4567
                  timezone:
                    type: string
                    example: America/New_York
                  preferences:
                    type: object
                    properties:
                      language:
                        type: string
                        example: en
                      dateFormat:
                        type: string
                        example: MM/DD/YYYY
                      timeFormat:
                        type: string
                        example: 12h
                      notifications:
                        type: object
                        properties:
                          email:
                            type: boolean
                          sms:
                            type: boolean
                          push:
                            type: boolean
                  security:
                    type: object
                    properties:
                      twoFactorEnabled:
                        type: boolean
                      lastPasswordChange:
                        type: string
                        format: date-time
                      activeSessions:
                        type: integer
                        description: Number of active sessions
                  accountStatus:
                    type: string
                    enum:
                      - ACTIVE
                      - PENDING
                      - SUSPENDED
                      - DEACTIVATED
                    example: ACTIVE
                  emailVerified:
                    type: boolean
                  phoneVerified:
                    type: boolean
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  lastLoginAt:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '500':
          description: Internal server error
    put:
      tags:
        - Authentication
      summary: Update user profile
      description: Updates the current user's profile information including personal details and preferences. Some fields may require additional verification.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  description: User's first name
                  example: John
                  minLength: 2
                  maxLength: 50
                lastName:
                  type: string
                  description: User's last name
                  example: Doe
                  minLength: 2
                  maxLength: 50
                phone:
                  type: string
                  description: Phone number (requires verification if changed)
                  example: +1-555-123-4567
                timezone:
                  type: string
                  description: User's timezone
                  example: America/Los_Angeles
                preferences:
                  type: object
                  properties:
                    language:
                      type: string
                      enum:
                        - en
                        - es
                        - fr
                        - de
                      example: en
                    dateFormat:
                      type: string
                      enum:
                        - MM/DD/YYYY
                        - DD/MM/YYYY
                        - YYYY-MM-DD
                      example: MM/DD/YYYY
                    timeFormat:
                      type: string
                      enum:
                        - 12h
                        - 24h
                      example: 12h
                    notifications:
                      type: object
                      properties:
                        email:
                          type: boolean
                        sms:
                          type: boolean
                        push:
                          type: boolean
                avatar:
                  type: string
                  format: uri
                  description: Avatar image URL
                bio:
                  type: string
                  description: User biography or description
                  maxLength: 500
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Profile updated successfully
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
                      phone:
                        type: string
                      timezone:
                        type: string
                      preferences:
                        type: object
                      updatedAt:
                        type: string
                        format: date-time
                  verificationRequired:
                    type: object
                    properties:
                      phone:
                        type: boolean
                        description: Whether phone verification is required
                      email:
                        type: boolean
                        description: Whether email verification is required
                  changes:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                        previousValue:
                          type: string
                        newValue:
                          type: string
                    description: Summary of changes made
        '400':
          description: Invalid input data or validation errors
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '409':
          description: Conflict - Phone number already in use by another account
        '500':
          description: Internal server error
  /auth/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      description: Generates a new access token using a valid refresh token. Essential for maintaining authenticated sessions without re-login.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
                  description: Valid JWT refresh token
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: New JWT access token
                  tokenType:
                    type: string
                    example: Bearer
                  expiresIn:
                    type: integer
                    description: Access token expiry in seconds
                    example: 900
                  refreshToken:
                    type: string
                    description: New refresh token (if rotation enabled)
        '400':
          description: Invalid or missing refresh token
        '401':
          description: Refresh token expired or revoked
        '500':
          description: Internal server error
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Creates a new user account with email verification. Registration requires organization invitation or valid organization domain for multi-tenant security.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - firstName
                - lastName
                - organizationId
              properties:
                email:
                  type: string
                  format: email
                  description: User email address (must be unique)
                  example: john.doe@example.com
                password:
                  type: string
                  description: User password (min 8 chars, must include uppercase, lowercase, number, special char)
                  example: SecurePass123!
                  minLength: 8
                  pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$
                firstName:
                  type: string
                  description: User's first name
                  example: John
                  minLength: 2
                  maxLength: 50
                lastName:
                  type: string
                  description: User's last name
                  example: Doe
                  minLength: 2
                  maxLength: 50
                organizationId:
                  type: string
                  description: Organization ID to join
                  example: clp1234567890
                invitationCode:
                  type: string
                  description: Invitation code (required for some organizations)
                  example: INV-ABC123
                role:
                  type: string
                  enum:
                    - VIEWER
                    - EMPLOYEE
                    - ACCOUNTANT
                    - MANAGER
                    - ADMIN
                  description: Requested role (subject to approval)
                  example: EMPLOYEE
                phone:
                  type: string
                  description: Phone number for 2FA and notifications
                  example: +1-555-123-4567
                timezone:
                  type: string
                  description: User's timezone
                  example: America/New_York
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User registered successfully. Please check your email for verification.
                  userId:
                    type: string
                    description: Created user ID
                  email:
                    type: string
                  verificationRequired:
                    type: boolean
                    description: Whether email verification is required
                  estimatedActivationTime:
                    type: string
                    description: Estimated time for account activation
        '400':
          description: Invalid input data or validation errors
        '409':
          description: Conflict - Email already exists or organization invitation required
        '500':
          description: Internal server error
  /auth/reset-password:
    post:
      tags:
        - Authentication
      summary: Reset password
      description: Completes password reset process using the token received via email. The token is single-use and has limited validity.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - newPassword
              properties:
                token:
                  type: string
                  description: Password reset token from email
                  example: abc123def456ghi789
                newPassword:
                  type: string
                  description: New password (must meet security requirements)
                  example: NewSecurePass123!
                  minLength: 8
                  pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$
                confirmPassword:
                  type: string
                  description: Password confirmation (must match newPassword)
                  example: NewSecurePass123!
      responses:
        '200':
          description: Password reset successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Password reset successfully. Please log in with your new password.
                  userId:
                    type: string
                    description: User ID for reference
                  resetCompletedAt:
                    type: string
                    format: date-time
        '400':
          description: Invalid token, password mismatch, or weak password
        '401':
          description: Reset token expired or already used
        '500':
          description: Internal server error
  /auth/reset-password-request:
    post:
      tags:
        - Authentication
      summary: Request password reset
      description: Initiates password reset process by sending a secure reset link to the user's email. Includes rate limiting to prevent abuse.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  description: Email address of the account to reset
                  example: john.doe@example.com
                organizationId:
                  type: string
                  description: Organization ID (for multi-tenant users)
                  example: clp1234567890
      responses:
        '200':
          description: Reset email sent (returns success even if email doesn't exist for security)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: If an account with that email exists, a password reset link has been sent.
                  resetTokenExpiresIn:
                    type: integer
                    description: Reset token expiry in minutes
                    example: 60
        '400':
          description: Invalid email format
        '429':
          description: Too many reset requests - rate limited
        '500':
          description: Internal server error
  /auth/verify-email:
    post:
      tags:
        - Authentication
      summary: Verify email address
      description: Verify user email with token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: Email verification token
              required:
                - token
      responses:
        '200':
          description: Email verification successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email verified successfully
        '400':
          description: Invalid or expired verification token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /customers:
    post:
      tags:
        - Customers
      summary: Create a new customer
      description: Creates a new customer record. Requires Admin, Manager, Accountant, or Employee role.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
              properties:
                name:
                  type: string
                  description: Customer name
                  example: John Doe
                email:
                  type: string
                  format: email
                  description: Customer email address
                  example: john@example.com
                phone:
                  type: string
                  description: Customer phone number
                  example: '+1234567890'
                address:
                  type: object
                  properties:
                    street:
                      type: string
                      example: 123 Main St
                    city:
                      type: string
                      example: New York
                    state:
                      type: string
                      example: NY
                    zipCode:
                      type: string
                      example: '10001'
                    country:
                      type: string
                      example: USA
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Customer ID
                  name:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
                  address:
                    type: object
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '500':
          description: Internal server error
    get:
      tags:
        - Customers
      summary: List customers
      description: Retrieves a list of customers with filtering and pagination. Available to all authenticated users.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Number of customers per page
        - in: query
          name: search
          schema:
            type: string
          description: Search term for customer name or email
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - name
              - email
              - createdAt
              - updatedAt
            default: createdAt
          description: Field to sort by
        - in: query
          name: sortOrder
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          description: Sort order
      responses:
        '200':
          description: Customers retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        email:
                          type: string
                        phone:
                          type: string
                        address:
                          type: object
                        createdAt:
                          type: string
                          format: date-time
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      total:
                        type: integer
                      pages:
                        type: integer
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /customers/{id}:
    get:
      tags:
        - Customers
      summary: Get customer by ID
      description: Retrieves a specific customer by their ID. Available to all authenticated users.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Customer ID
          schema:
            type: string
            example: clp1234567890
      responses:
        '200':
          description: Customer retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Customer ID
                  name:
                    type: string
                    example: John Doe
                  email:
                    type: string
                    example: john@example.com
                  phone:
                    type: string
                    example: '+1234567890'
                  address:
                    type: object
                    properties:
                      street:
                        type: string
                      city:
                        type: string
                      state:
                        type: string
                      zipCode:
                        type: string
                      country:
                        type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '404':
          description: Customer not found
        '500':
          description: Internal server error
    put:
      tags:
        - Customers
      summary: Update customer
      description: Updates an existing customer. Requires Admin, Manager, Accountant, or Employee role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Customer ID
          schema:
            type: string
            example: clp1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Customer name
                  example: John Doe Updated
                email:
                  type: string
                  format: email
                  description: Customer email address
                  example: john.updated@example.com
                phone:
                  type: string
                  description: Customer phone number
                  example: '+1234567890'
                address:
                  type: object
                  properties:
                    street:
                      type: string
                      example: 456 Updated St
                    city:
                      type: string
                      example: New York
                    state:
                      type: string
                      example: NY
                    zipCode:
                      type: string
                      example: '10001'
                    country:
                      type: string
                      example: USA
      responses:
        '200':
          description: Customer updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
                  address:
                    type: object
                  updatedAt:
                    type: string
                    format: date-time
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Customer not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Customers
      summary: Delete customer
      description: Deletes a customer. Requires Admin or Manager role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Customer ID
          schema:
            type: string
            example: clp1234567890
      responses:
        '200':
          description: Customer deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Customer deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Customer not found
        '500':
          description: Internal server error
  /customers/{id}/stats:
    get:
      tags:
        - Customers
      summary: Get customer statistics
      description: Retrieves statistics for a specific customer including quotes, invoices, and payments. Available to all authenticated users.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Customer ID
          schema:
            type: string
            example: clp1234567890
      responses:
        '200':
          description: Customer statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  customerId:
                    type: string
                  quotes:
                    type: object
                    properties:
                      total:
                        type: integer
                      pending:
                        type: integer
                      accepted:
                        type: integer
                      rejected:
                        type: integer
                  invoices:
                    type: object
                    properties:
                      total:
                        type: integer
                      paid:
                        type: integer
                      pending:
                        type: integer
                      overdue:
                        type: integer
                  payments:
                    type: object
                    properties:
                      totalAmount:
                        type: number
                        format: float
                      totalCount:
                        type: integer
                      averageAmount:
                        type: number
                        format: float
        '401':
          description: Unauthorized
        '404':
          description: Customer not found
        '500':
          description: Internal server error
  /documents:
    post:
      summary: Upload a new document
      tags:
        - Documents
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The file to upload
                title:
                  type: string
                  description: Document title
                description:
                  type: string
                  description: Document description
                category:
                  type: string
                  enum:
                    - INVOICE
                    - RECEIPT
                    - CONTRACT
                    - QUOTE
                    - TAX_DOCUMENT
                    - PROOF_OF_PAYMENT
                    - IDENTIFICATION
                    - INSURANCE
                    - LEGAL
                    - COMPLIANCE
                    - FINANCIAL_STATEMENT
                    - OTHER
                  description: Document category
                tags:
                  type: array
                  items:
                    type: string
                  description: Document tags
                entityType:
                  type: string
                  description: Entity type the document is attached to
                entityId:
                  type: string
                  description: Entity ID the document is attached to
                isPublic:
                  type: boolean
                  description: Whether the document is public
                isEncrypted:
                  type: boolean
                  description: Whether the document should be encrypted
                accessLevel:
                  type: string
                  enum:
                    - PUBLIC
                    - PRIVATE
                    - RESTRICTED
                  description: Document access level
                retentionDate:
                  type: string
                  format: date-time
                  description: Document retention date
              required:
                - file
                - category
      responses:
        '201':
          description: Document uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '413':
          description: File too large
    get:
      summary: Get list of documents
      tags:
        - Documents
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: category
          schema:
            type: string
            enum:
              - INVOICE
              - RECEIPT
              - CONTRACT
              - QUOTE
              - TAX_DOCUMENT
              - PROOF_OF_PAYMENT
              - IDENTIFICATION
              - INSURANCE
              - LEGAL
              - COMPLIANCE
              - FINANCIAL_STATEMENT
              - OTHER
          description: Filter by document category
        - in: query
          name: entityType
          schema:
            type: string
          description: Filter by entity type
        - in: query
          name: entityId
          schema:
            type: string
          description: Filter by entity ID
        - in: query
          name: tags
          schema:
            type: array
            items:
              type: string
          description: Filter by tags
        - in: query
          name: isPublic
          schema:
            type: boolean
          description: Filter by public status
        - in: query
          name: accessLevel
          schema:
            type: string
            enum:
              - PUBLIC
              - PRIVATE
              - RESTRICTED
          description: Filter by access level
        - in: query
          name: search
          schema:
            type: string
          description: Search in title, description, and filename
        - in: query
          name: startDate
          schema:
            type: string
            format: date-time
          description: Filter documents created after this date
        - in: query
          name: endDate
          schema:
            type: string
            format: date-time
          description: Filter documents created before this date
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
          description: Number of documents to return
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Number of documents to skip
      responses:
        '200':
          description: List of documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  documents:
                    type: array
                    items:
                      $ref: '#/components/schemas/Document'
                  total:
                    type: integer
                    description: Total number of documents
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /documents/bulk:
    post:
      summary: Upload multiple documents
      tags:
        - Documents
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: The files to upload
                category:
                  type: string
                  enum:
                    - INVOICE
                    - RECEIPT
                    - CONTRACT
                    - QUOTE
                    - TAX_DOCUMENT
                    - PROOF_OF_PAYMENT
                    - IDENTIFICATION
                    - INSURANCE
                    - LEGAL
                    - COMPLIANCE
                    - FINANCIAL_STATEMENT
                    - OTHER
                  description: Default category for all documents
                entityType:
                  type: string
                  description: Entity type to attach documents to
                entityId:
                  type: string
                  description: Entity ID to attach documents to
                isPublic:
                  type: boolean
                  description: Whether the documents are public
                isEncrypted:
                  type: boolean
                  description: Whether the documents should be encrypted
                accessLevel:
                  type: string
                  enum:
                    - PUBLIC
                    - PRIVATE
                    - RESTRICTED
                  description: Document access level
              required:
                - files
                - category
      responses:
        '201':
          description: Documents uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    items:
                      $ref: '#/components/schemas/Document'
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        filename:
                          type: string
                        error:
                          type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /documents/stats:
    get:
      summary: Get document statistics
      tags:
        - Documents
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: entityType
          schema:
            type: string
          description: Filter stats by entity type
        - in: query
          name: entityId
          schema:
            type: string
          description: Filter stats by entity ID
      responses:
        '200':
          description: Document statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalDocuments:
                    type: integer
                    description: Total number of documents
                  totalSize:
                    type: integer
                    description: Total size of all documents in bytes
                  averageSize:
                    type: number
                    description: Average document size in bytes
                  categoryCounts:
                    type: array
                    items:
                      type: object
                      properties:
                        category:
                          type: string
                        _count:
                          type: object
                          properties:
                            category:
                              type: integer
                  recentDocuments:
                    type: integer
                    description: Number of documents created in the last 30 days
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /documents/{id}:
    get:
      summary: Get a specific document
      tags:
        - Documents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Document ID
      responses:
        '200':
          description: Document details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Document not found
    put:
      summary: Update a document
      tags:
        - Documents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Document ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Document title
                description:
                  type: string
                  description: Document description
                category:
                  type: string
                  enum:
                    - INVOICE
                    - RECEIPT
                    - CONTRACT
                    - QUOTE
                    - TAX_DOCUMENT
                    - PROOF_OF_PAYMENT
                    - IDENTIFICATION
                    - INSURANCE
                    - LEGAL
                    - COMPLIANCE
                    - FINANCIAL_STATEMENT
                    - OTHER
                  description: Document category
                tags:
                  type: array
                  items:
                    type: string
                  description: Document tags
                isPublic:
                  type: boolean
                  description: Whether the document is public
                accessLevel:
                  type: string
                  enum:
                    - PUBLIC
                    - PRIVATE
                    - RESTRICTED
                  description: Document access level
                retentionDate:
                  type: string
                  format: date-time
                  description: Document retention date
      responses:
        '200':
          description: Document updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Document not found
    delete:
      summary: Delete a document
      tags:
        - Documents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Document ID
        - in: query
          name: permanent
          schema:
            type: boolean
            default: false
          description: Whether to permanently delete the document
      responses:
        '200':
          description: Document deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Document not found
  /documents/{id}/attach:
    post:
      summary: Attach a document to an entity
      tags:
        - Documents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Document ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                entityType:
                  type: string
                  description: Entity type to attach to
                entityId:
                  type: string
                  description: Entity ID to attach to
              required:
                - entityType
                - entityId
      responses:
        '200':
          description: Document attached successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Document not found
  /documents/{id}/download:
    get:
      summary: Download a document file
      tags:
        - Documents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Document ID
      responses:
        '200':
          description: Document file
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Document not found
  /documents/{id}/versions:
    post:
      summary: Create a new version of a document
      tags:
        - Documents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Parent document ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The new version file
                title:
                  type: string
                  description: Document title
                description:
                  type: string
                  description: Document description
                category:
                  type: string
                  enum:
                    - INVOICE
                    - RECEIPT
                    - CONTRACT
                    - QUOTE
                    - TAX_DOCUMENT
                    - PROOF_OF_PAYMENT
                    - IDENTIFICATION
                    - INSURANCE
                    - LEGAL
                    - COMPLIANCE
                    - FINANCIAL_STATEMENT
                    - OTHER
                  description: Document category
                tags:
                  type: array
                  items:
                    type: string
                  description: Document tags
                isPublic:
                  type: boolean
                  description: Whether the document is public
                isEncrypted:
                  type: boolean
                  description: Whether the document should be encrypted
                accessLevel:
                  type: string
                  enum:
                    - PUBLIC
                    - PRIVATE
                    - RESTRICTED
                  description: Document access level
                retentionDate:
                  type: string
                  format: date-time
                  description: Document retention date
              required:
                - file
      responses:
        '201':
          description: Document version created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Parent document not found
    get:
      summary: Get all versions of a document
      tags:
        - Documents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Document ID
      responses:
        '200':
          description: List of document versions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Document not found
  /etransfers:
    post:
      tags:
        - E-Transfers
      summary: Create a new e-transfer
      description: Creates a new electronic transfer for customer payments. Generates unique transfer number and security question for Canadian Interac e-transfer system.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - customerId
                - amount
                - securityQuestion
                - securityAnswer
                - recipientEmail
              properties:
                customerId:
                  type: string
                  description: Customer ID for this e-transfer
                  example: clp1234567890
                amount:
                  type: number
                  format: float
                  description: Transfer amount in CAD
                  example: 1500
                  minimum: 0.01
                  maximum: 3000
                recipientEmail:
                  type: string
                  format: email
                  description: Recipient's email address
                  example: customer@example.com
                recipientName:
                  type: string
                  description: Recipient's full name
                  example: John Doe
                  minLength: 2
                  maxLength: 100
                securityQuestion:
                  type: string
                  description: Security question for e-transfer
                  example: What is your mother's maiden name?
                  minLength: 10
                  maxLength: 200
                securityAnswer:
                  type: string
                  description: Answer to security question (will be hashed)
                  example: Smith
                  minLength: 1
                  maxLength: 100
                expiryDays:
                  type: integer
                  description: Days until e-transfer expires (1-30)
                  example: 7
                  minimum: 1
                  maximum: 30
                  default: 7
                message:
                  type: string
                  description: Message to recipient
                  example: Payment for services rendered
                  maxLength: 500
                invoiceId:
                  type: string
                  description: Related invoice ID (if applicable)
                  example: clp1234567890
                notifyRecipient:
                  type: boolean
                  default: true
                  description: Whether to send email notification to recipient
                autoDeposit:
                  type: boolean
                  default: false
                  description: Whether to enable auto-deposit (if recipient bank supports it)
      responses:
        '201':
          description: E-transfer created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: E-transfer ID
                  etransferNumber:
                    type: string
                    description: Unique e-transfer reference number
                    example: ET-2024-001234
                  amount:
                    type: number
                    format: float
                  recipientEmail:
                    type: string
                  status:
                    type: string
                    enum:
                      - PENDING
                      - SENT
                      - DEPOSITED
                      - EXPIRED
                      - CANCELLED
                    example: PENDING
                  expiresAt:
                    type: string
                    format: date-time
                    description: When the e-transfer expires
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                  createdAt:
                    type: string
                    format: date-time
                  estimatedProcessingTime:
                    type: string
                    description: Estimated time for processing
                    example: 5-10 minutes
        '400':
          description: Invalid input data or amount exceeds limits
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Customer not found
        '422':
          description: Business rule violation (e.g., duplicate active transfer to same email)
        '500':
          description: Internal server error
    get:
      tags:
        - E-Transfers
      summary: List e-transfers
      description: Retrieves a paginated list of e-transfers with filtering and search capabilities. Users can view all e-transfers within their organization.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Number of e-transfers per page
        - in: query
          name: search
          schema:
            type: string
          description: Search term for recipient email or e-transfer number
        - in: query
          name: status
          schema:
            type: string
            enum:
              - PENDING
              - SENT
              - DEPOSITED
              - EXPIRED
              - CANCELLED
          description: Filter by e-transfer status
        - in: query
          name: customerId
          schema:
            type: string
          description: Filter by specific customer
        - in: query
          name: recipientEmail
          schema:
            type: string
            format: email
          description: Filter by recipient email address
        - in: query
          name: dateFrom
          schema:
            type: string
            format: date
          description: Filter e-transfers from this date (YYYY-MM-DD)
        - in: query
          name: dateTo
          schema:
            type: string
            format: date
          description: Filter e-transfers to this date (YYYY-MM-DD)
        - in: query
          name: amountMin
          schema:
            type: number
            format: float
          description: Minimum transfer amount
        - in: query
          name: amountMax
          schema:
            type: number
            format: float
          description: Maximum transfer amount
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - createdAt
              - updatedAt
              - amount
              - expiresAt
              - etransferNumber
            default: createdAt
          description: Field to sort by
        - in: query
          name: sortOrder
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          description: Sort order
      responses:
        '200':
          description: E-transfers retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: E-transfer ID
                        etransferNumber:
                          type: string
                          description: Unique e-transfer reference number
                          example: ET-2024-001234
                        amount:
                          type: number
                          format: float
                          example: 1500
                        recipientEmail:
                          type: string
                          format: email
                          example: customer@example.com
                        recipientName:
                          type: string
                          example: John Doe
                        status:
                          type: string
                          enum:
                            - PENDING
                            - SENT
                            - DEPOSITED
                            - EXPIRED
                            - CANCELLED
                          example: SENT
                        customer:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            email:
                              type: string
                        expiresAt:
                          type: string
                          format: date-time
                        depositedAt:
                          type: string
                          format: date-time
                          description: When the transfer was deposited (if applicable)
                        processingTime:
                          type: number
                          format: float
                          description: Processing time in hours (if completed)
                        message:
                          type: string
                          description: Message to recipient
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                        createdBy:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            role:
                              type: string
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      total:
                        type: integer
                      pages:
                        type: integer
                  summary:
                    type: object
                    properties:
                      totalAmount:
                        type: number
                        format: float
                        description: Total amount of all transfers in the result set
                      averageAmount:
                        type: number
                        format: float
                        description: Average amount of transfers in the result set
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '500':
          description: Internal server error
  /etransfers/maintenance/check-expired:
    post:
      tags:
        - E-Transfers
      summary: Check and process expired e-transfers
      description: Administrative function to check for expired e-transfers and process them according to business rules. This includes automatic refunds and notifications.
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dryRun:
                  type: boolean
                  default: false
                  description: Whether to perform a dry run without making changes
                batchSize:
                  type: integer
                  minimum: 1
                  maximum: 100
                  default: 50
                  description: Number of transfers to process in this batch
                notifyCustomers:
                  type: boolean
                  default: true
                  description: Whether to send expiration notifications to customers
                processRefunds:
                  type: boolean
                  default: true
                  description: Whether to automatically process refunds for expired transfers
                gracePeriodHours:
                  type: integer
                  minimum: 0
                  maximum: 168
                  default: 24
                  description: Grace period in hours after expiry before processing
      responses:
        '200':
          description: Expired transfers processing completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  processedAt:
                    type: string
                    format: date-time
                  dryRun:
                    type: boolean
                    description: Whether this was a dry run
                  summary:
                    type: object
                    properties:
                      totalChecked:
                        type: integer
                        description: Total number of transfers checked
                      expiredFound:
                        type: integer
                        description: Number of expired transfers found
                      processed:
                        type: integer
                        description: Number of transfers processed
                      errors:
                        type: integer
                        description: Number of processing errors
                  expiredTransfers:
                    type: array
                    items:
                      type: object
                      properties:
                        etransferNumber:
                          type: string
                        amount:
                          type: number
                          format: float
                        recipientEmail:
                          type: string
                        expiredAt:
                          type: string
                          format: date-time
                        processedAction:
                          type: string
                          enum:
                            - MARKED_EXPIRED
                            - REFUND_INITIATED
                            - NOTIFICATION_SENT
                            - ERROR
                        refundAmount:
                          type: number
                          format: float
                        errorMessage:
                          type: string
                    description: Details of processed expired transfers
                  refunds:
                    type: object
                    properties:
                      totalRefundAmount:
                        type: number
                        format: float
                        description: Total amount refunded
                      refundsInitiated:
                        type: integer
                        description: Number of refunds initiated
                      estimatedProcessingTime:
                        type: string
                        description: Estimated time for refund completion
                  notifications:
                    type: object
                    properties:
                      customerNotifications:
                        type: integer
                        description: Number of customer notifications sent
                      internalNotifications:
                        type: integer
                        description: Number of internal notifications sent
                  nextScheduledCheck:
                    type: string
                    format: date-time
                    description: When the next automatic check is scheduled
                  recommendations:
                    type: array
                    items:
                      type: string
                    description: System recommendations based on findings
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Requires Admin or Manager role
        '500':
          description: Internal server error
  /etransfers/stats/summary:
    get:
      tags:
        - E-Transfers
      summary: Get e-transfer statistics
      description: Retrieves comprehensive statistics about e-transfers including status distribution, volume trends, and processing metrics for the organization.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: period
          schema:
            type: string
            enum:
              - day
              - week
              - month
              - quarter
              - year
            default: month
          description: Time period for statistics calculation
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: Start date for custom period (YYYY-MM-DD)
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: End date for custom period (YYYY-MM-DD)
        - in: query
          name: customerId
          schema:
            type: string
          description: Filter statistics by specific customer
      responses:
        '200':
          description: E-transfer statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    type: object
                    properties:
                      totalTransfers:
                        type: integer
                        description: Total number of e-transfers
                      totalAmount:
                        type: number
                        format: float
                        description: Total amount of all e-transfers
                      averageAmount:
                        type: number
                        format: float
                        description: Average e-transfer amount
                      successRate:
                        type: number
                        format: float
                        description: Percentage of successfully deposited transfers
                      averageProcessingTime:
                        type: number
                        format: float
                        description: Average processing time in hours
                  statusDistribution:
                    type: object
                    properties:
                      PENDING:
                        type: integer
                      SENT:
                        type: integer
                      DEPOSITED:
                        type: integer
                      EXPIRED:
                        type: integer
                      CANCELLED:
                        type: integer
                  volumeTrends:
                    type: object
                    properties:
                      daily:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              format: date
                            count:
                              type: integer
                            amount:
                              type: number
                              format: float
                      monthlyGrowth:
                        type: number
                        format: float
                        description: Month-over-month growth percentage
                  performance:
                    type: object
                    properties:
                      fastestDeposit:
                        type: number
                        format: float
                        description: Fastest deposit time in minutes
                      slowestDeposit:
                        type: number
                        format: float
                        description: Slowest deposit time in hours
                      expirationRate:
                        type: number
                        format: float
                        description: Percentage of transfers that expired
                      cancellationRate:
                        type: number
                        format: float
                        description: Percentage of transfers that were cancelled
                  topRecipients:
                    type: array
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                        count:
                          type: integer
                        totalAmount:
                          type: number
                          format: float
                    description: Top recipients by transfer count
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '500':
          description: Internal server error
  /etransfers/{etransferNumber}:
    get:
      tags:
        - E-Transfers
      summary: Get e-transfer details
      description: Retrieves detailed information about a specific e-transfer including status, processing history, and recipient information.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: etransferNumber
          required: true
          description: E-transfer reference number
          schema:
            type: string
            example: ET-2024-001234
      responses:
        '200':
          description: E-transfer details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: E-transfer ID
                  etransferNumber:
                    type: string
                    description: Unique e-transfer reference number
                    example: ET-2024-001234
                  amount:
                    type: number
                    format: float
                    example: 1500
                  recipientEmail:
                    type: string
                    format: email
                    example: customer@example.com
                  recipientName:
                    type: string
                    example: John Doe
                  status:
                    type: string
                    enum:
                      - PENDING
                      - SENT
                      - DEPOSITED
                      - EXPIRED
                      - CANCELLED
                    example: SENT
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                        example: Acme Corporation
                      email:
                        type: string
                        example: billing@acme.com
                  securityQuestion:
                    type: string
                    description: Security question for the transfer
                    example: What is your mother's maiden name?
                  message:
                    type: string
                    description: Message to recipient
                    example: Payment for services rendered
                  expiresAt:
                    type: string
                    format: date-time
                    description: When the e-transfer expires
                  sentAt:
                    type: string
                    format: date-time
                    description: When the e-transfer was sent
                  depositedAt:
                    type: string
                    format: date-time
                    description: When the transfer was deposited (if applicable)
                  autoDeposit:
                    type: boolean
                    description: Whether auto-deposit is enabled
                  processingHistory:
                    type: array
                    items:
                      type: object
                      properties:
                        status:
                          type: string
                        timestamp:
                          type: string
                          format: date-time
                        notes:
                          type: string
                        performedBy:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                    description: Status change history
                  relatedInvoice:
                    type: object
                    properties:
                      id:
                        type: string
                      invoiceNumber:
                        type: string
                      amount:
                        type: number
                        format: float
                    description: Related invoice information (if applicable)
                  fees:
                    type: object
                    properties:
                      transferFee:
                        type: number
                        format: float
                        description: E-transfer processing fee
                      bankFee:
                        type: number
                        format: float
                        description: Bank processing fee
                      totalFees:
                        type: number
                        format: float
                        description: Total fees charged
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  createdBy:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '404':
          description: E-transfer not found
        '500':
          description: Internal server error
  /etransfers/{etransferNumber}/cancel:
    put:
      tags:
        - E-Transfers
      summary: Cancel e-transfer
      description: Cancels a pending or sent e-transfer before it has been deposited. Handles refund processing and notifies relevant parties.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: etransferNumber
          required: true
          description: E-transfer reference number
          schema:
            type: string
            example: ET-2024-001234
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  enum:
                    - CLIENT_REQUEST
                    - DUPLICATE_TRANSFER
                    - INCORRECT_AMOUNT
                    - INCORRECT_RECIPIENT
                    - FRAUD_PREVENTION
                    - OTHER
                  description: Reason for cancellation
                  example: CLIENT_REQUEST
                notes:
                  type: string
                  description: Additional notes about the cancellation
                  example: Client requested cancellation due to change in payment method
                  maxLength: 500
                refundMethod:
                  type: string
                  enum:
                    - ORIGINAL_PAYMENT
                    - BANK_TRANSFER
                    - CHECK
                    - CREDIT_NOTE
                  description: How to process the refund
                  example: ORIGINAL_PAYMENT
                notifyRecipient:
                  type: boolean
                  default: true
                  description: Whether to notify the recipient of cancellation
                notifyCustomer:
                  type: boolean
                  default: true
                  description: Whether to notify the customer of cancellation
                processRefundImmediately:
                  type: boolean
                  default: false
                  description: Whether to process refund immediately
      responses:
        '200':
          description: E-transfer cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  etransferNumber:
                    type: string
                  status:
                    type: string
                    example: CANCELLED
                  cancelledAt:
                    type: string
                    format: date-time
                  cancelledBy:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
                  cancellationReason:
                    type: string
                  refund:
                    type: object
                    properties:
                      amount:
                        type: number
                        format: float
                        description: Refund amount
                      method:
                        type: string
                        description: Refund method
                      status:
                        type: string
                        enum:
                          - PENDING
                          - PROCESSED
                          - FAILED
                      estimatedProcessingTime:
                        type: string
                        description: Estimated refund processing time
                      refundId:
                        type: string
                        description: Refund transaction ID
                  fees:
                    type: object
                    properties:
                      cancellationFee:
                        type: number
                        format: float
                        description: Cancellation fee charged
                      refundAmount:
                        type: number
                        format: float
                        description: Net refund amount after fees
                  notifications:
                    type: object
                    properties:
                      recipientNotified:
                        type: boolean
                      customerNotified:
                        type: boolean
                      accountingNotified:
                        type: boolean
                  timeline:
                    type: object
                    properties:
                      createdAt:
                        type: string
                        format: date-time
                      sentAt:
                        type: string
                        format: date-time
                      cancelledAt:
                        type: string
                        format: date-time
                      activeDuration:
                        type: number
                        format: float
                        description: How long the transfer was active (in hours)
        '400':
          description: Invalid input data or e-transfer cannot be cancelled
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: E-transfer not found
        '409':
          description: Conflict - E-transfer already deposited or cannot be cancelled
        '422':
          description: Business rule violation (e.g., too late to cancel)
        '500':
          description: Internal server error
  /etransfers/{etransferNumber}/confirm:
    put:
      tags:
        - E-Transfers
      summary: Confirm e-transfer deposit
      description: Manually confirms that an e-transfer has been deposited by the recipient. Updates status and triggers accounting workflows for payment reconciliation.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: etransferNumber
          required: true
          description: E-transfer reference number
          schema:
            type: string
            example: ET-2024-001234
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - depositedAt
              properties:
                depositedAt:
                  type: string
                  format: date-time
                  description: Date and time when deposit was confirmed
                  example: '2024-01-20T15:30:00Z'
                confirmationMethod:
                  type: string
                  enum:
                    - MANUAL_VERIFICATION
                    - BANK_NOTIFICATION
                    - RECIPIENT_CONFIRMATION
                    - AUTO_DEPOSIT
                  description: How the deposit was confirmed
                  example: MANUAL_VERIFICATION
                bankTransactionId:
                  type: string
                  description: Bank transaction ID (if available)
                  example: TXN-789456123
                notes:
                  type: string
                  description: Additional notes about the confirmation
                  example: Confirmed via bank statement
                  maxLength: 500
                actualAmount:
                  type: number
                  format: float
                  description: Actual deposited amount (if different from transfer amount)
                  example: 1485
                exchangeRate:
                  type: number
                  format: float
                  description: Exchange rate applied (if applicable)
                  example: 1
                fees:
                  type: object
                  properties:
                    transferFee:
                      type: number
                      format: float
                    bankFee:
                      type: number
                      format: float
                    otherFees:
                      type: number
                      format: float
                  description: Fees deducted from the transfer
      responses:
        '200':
          description: E-transfer deposit confirmed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  etransferNumber:
                    type: string
                  status:
                    type: string
                    example: DEPOSITED
                  depositedAt:
                    type: string
                    format: date-time
                  confirmedBy:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
                  processingTime:
                    type: number
                    format: float
                    description: Total processing time in hours
                  finalAmount:
                    type: number
                    format: float
                    description: Final deposited amount after fees
                  reconciliation:
                    type: object
                    properties:
                      invoiceUpdated:
                        type: boolean
                        description: Whether related invoice was updated
                      paymentRecorded:
                        type: boolean
                        description: Whether payment was recorded in accounting
                      balanceUpdated:
                        type: boolean
                        description: Whether customer balance was updated
                  notifications:
                    type: object
                    properties:
                      customerNotified:
                        type: boolean
                        description: Whether customer was notified of confirmation
                      accountingNotified:
                        type: boolean
                        description: Whether accounting team was notified
        '400':
          description: Invalid input data or e-transfer cannot be confirmed
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: E-transfer not found
        '409':
          description: Conflict - E-transfer already confirmed or in invalid state
        '500':
          description: Internal server error
  /health:
    get:
      tags:
        - Health
      summary: Basic health check
      description: Check if the API is running and responsive
      security: []
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - healthy
                  timestamp:
                    $ref: '#/components/schemas/Timestamp'
                  environment:
                    type: string
                    example: production
                  version:
                    type: string
                    example: 1.0.0
                required:
                  - status
                  - timestamp
  /health/db:
    get:
      tags:
        - Health
      summary: Database health check
      description: Check database connectivity and performance
      security: []
      responses:
        '200':
          description: Database is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - healthy
                  database:
                    type: string
                    enum:
                      - connected
                  responseTime:
                    type: number
                    description: Database response time in milliseconds
                required:
                  - status
                  - database
        '503':
          description: Database is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /invoices:
    post:
      tags:
        - Invoices
      summary: Create a new invoice
      description: Creates a new invoice for a customer. Supports manual creation or generation from quote. Requires Admin, Manager, Accountant, or Employee role.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - customerId
                - items
                - dueDate
              properties:
                customerId:
                  type: string
                  description: Customer ID for the invoice
                  example: clp1234567890
                quoteId:
                  type: string
                  description: Optional quote ID if creating from quote
                  example: quo_1234567890
                items:
                  type: array
                  description: Array of invoice items
                  items:
                    type: object
                    required:
                      - description
                      - quantity
                      - unitPrice
                    properties:
                      description:
                        type: string
                        example: Professional Website Development
                      quantity:
                        type: number
                        example: 1
                      unitPrice:
                        type: number
                        format: float
                        example: 2500
                      notes:
                        type: string
                        example: Includes responsive design and SEO optimization
                dueDate:
                  type: string
                  format: date
                  description: Invoice due date
                  example: '2024-02-15'
                issueDate:
                  type: string
                  format: date
                  description: Invoice issue date (defaults to today)
                  example: '2024-01-15'
                paymentTerms:
                  type: string
                  description: Payment terms for the invoice
                  enum:
                    - NET_15
                    - NET_30
                    - NET_45
                    - NET_60
                    - DUE_ON_RECEIPT
                  example: NET_30
                notes:
                  type: string
                  description: Additional notes for the invoice
                  example: Thank you for your business. Payment due within 30 days.
                lateFeePercent:
                  type: number
                  format: float
                  description: Late fee percentage (optional)
                  example: 1.5
                discountPercent:
                  type: number
                  format: float
                  description: Discount percentage (optional)
                  example: 5
      responses:
        '201':
          description: Invoice created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Invoice ID
                    example: inv_1234567890
                  customerId:
                    type: string
                    example: clp1234567890
                  quoteId:
                    type: string
                    example: quo_1234567890
                  invoiceNumber:
                    type: string
                    example: INV-2024-001
                  items:
                    type: array
                    items:
                      type: object
                  subtotal:
                    type: number
                    format: float
                    example: 2500
                  tax:
                    type: number
                    format: float
                    example: 200
                  total:
                    type: number
                    format: float
                    example: 2700
                  status:
                    type: string
                    enum:
                      - DRAFT
                      - SENT
                      - VIEWED
                      - PAID
                      - OVERDUE
                      - CANCELLED
                    example: DRAFT
                  dueDate:
                    type: string
                    format: date
                  issueDate:
                    type: string
                    format: date
                  paymentTerms:
                    type: string
                    example: NET_30
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '500':
          description: Internal server error
    get:
      tags:
        - Invoices
      summary: List invoices
      description: Retrieves a list of invoices with filtering, sorting, and pagination. Available to all authenticated users.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Number of invoices per page
        - in: query
          name: search
          schema:
            type: string
          description: Search term for invoice number, customer name, or description
        - in: query
          name: status
          schema:
            type: string
            enum:
              - DRAFT
              - SENT
              - VIEWED
              - PAID
              - OVERDUE
              - CANCELLED
          description: Filter by invoice status
        - in: query
          name: customerId
          schema:
            type: string
          description: Filter by customer ID
        - in: query
          name: dateFrom
          schema:
            type: string
            format: date
          description: Filter invoices created from this date
        - in: query
          name: dateTo
          schema:
            type: string
            format: date
          description: Filter invoices created until this date
        - in: query
          name: dueDateFrom
          schema:
            type: string
            format: date
          description: Filter invoices due from this date
        - in: query
          name: dueDateTo
          schema:
            type: string
            format: date
          description: Filter invoices due until this date
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - invoiceNumber
              - total
              - status
              - createdAt
              - dueDate
              - issueDate
            default: createdAt
          description: Field to sort by
        - in: query
          name: sortOrder
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          description: Sort order
      responses:
        '200':
          description: Invoices retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: inv_1234567890
                        invoiceNumber:
                          type: string
                          example: INV-2024-001
                        customerId:
                          type: string
                          example: clp1234567890
                        customerName:
                          type: string
                          example: John Doe
                        total:
                          type: number
                          format: float
                          example: 2700
                        status:
                          type: string
                          example: SENT
                        dueDate:
                          type: string
                          format: date
                        issueDate:
                          type: string
                          format: date
                        paymentTerms:
                          type: string
                          example: NET_30
                        createdAt:
                          type: string
                          format: date-time
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      total:
                        type: integer
                      pages:
                        type: integer
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /invoices/from-quote:
    post:
      tags:
        - Invoices
      summary: Create invoice from quote
      description: Creates a new invoice based on an accepted quote. Automatically copies items, pricing, and customer information from the quote. Requires Admin, Manager, Accountant, or Employee role.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - quoteId
              properties:
                quoteId:
                  type: string
                  description: ID of the accepted quote to convert
                  example: quo_1234567890
                dueDate:
                  type: string
                  format: date
                  description: Custom due date (optional, defaults based on payment terms)
                  example: '2024-02-15'
                paymentTerms:
                  type: string
                  description: Payment terms for the invoice
                  enum:
                    - NET_15
                    - NET_30
                    - NET_45
                    - NET_60
                    - DUE_ON_RECEIPT
                  example: NET_30
                notes:
                  type: string
                  description: Additional notes for the invoice
                  example: Invoice generated from accepted quote QTE-2024-001
                lateFeePercent:
                  type: number
                  format: float
                  description: Late fee percentage (optional)
                  example: 1.5
      responses:
        '201':
          description: Invoice created from quote successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invoice created from quote successfully
                  quoteId:
                    type: string
                    example: quo_1234567890
                  invoice:
                    type: object
                    properties:
                      id:
                        type: string
                        example: inv_1234567890
                      invoiceNumber:
                        type: string
                        example: INV-2024-001
                      customerId:
                        type: string
                        example: clp1234567890
                      quoteId:
                        type: string
                        example: quo_1234567890
                      total:
                        type: number
                        format: float
                        example: 2700
                      status:
                        type: string
                        example: DRAFT
                      dueDate:
                        type: string
                        format: date
                      createdAt:
                        type: string
                        format: date-time
        '400':
          description: Invalid quote ID or quote not in accepted status
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Quote not found
        '500':
          description: Internal server error
  /invoices/stats/summary:
    get:
      tags:
        - Invoices
      summary: Get invoice statistics summary
      description: Retrieves comprehensive invoice statistics including totals, status breakdown, payment analytics, and revenue metrics. Available to all authenticated users.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Invoice statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalInvoices:
                    type: integer
                    description: Total number of invoices
                    example: 250
                  statusBreakdown:
                    type: object
                    properties:
                      draft:
                        type: integer
                        example: 15
                      sent:
                        type: integer
                        example: 45
                      viewed:
                        type: integer
                        example: 25
                      paid:
                        type: integer
                        example: 150
                      overdue:
                        type: integer
                        example: 12
                      cancelled:
                        type: integer
                        example: 3
                  revenueMetrics:
                    type: object
                    properties:
                      totalInvoiceValue:
                        type: number
                        format: float
                        example: 675000
                      paidInvoiceValue:
                        type: number
                        format: float
                        example: 450000
                      pendingInvoiceValue:
                        type: number
                        format: float
                        example: 180000
                      overdueInvoiceValue:
                        type: number
                        format: float
                        example: 35000
                      averageInvoiceValue:
                        type: number
                        format: float
                        example: 2700
                      averagePaymentTime:
                        type: number
                        description: Average days to payment
                        example: 23.5
                  paymentMetrics:
                    type: object
                    properties:
                      onTimePayments:
                        type: integer
                        example: 135
                      latePayments:
                        type: integer
                        example: 15
                      onTimePaymentRate:
                        type: number
                        format: float
                        example: 0.9
                      totalLateFees:
                        type: number
                        format: float
                        example: 2500
                  trends:
                    type: object
                    properties:
                      thisMonth:
                        type: object
                        properties:
                          count:
                            type: integer
                            example: 25
                          value:
                            type: number
                            format: float
                            example: 67500
                      lastMonth:
                        type: object
                        properties:
                          count:
                            type: integer
                            example: 20
                          value:
                            type: number
                            format: float
                            example: 54000
                      monthlyGrowth:
                        type: object
                        properties:
                          count:
                            type: number
                            format: float
                            example: 0.25
                          value:
                            type: number
                            format: float
                            example: 0.25
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /invoices/{id}:
    get:
      tags:
        - Invoices
      summary: Get invoice by ID
      description: Retrieves a specific invoice by its ID with full details including items, customer information, and payment history. Available to all authenticated users.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Invoice ID
          schema:
            type: string
            example: inv_1234567890
      responses:
        '200':
          description: Invoice retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: inv_1234567890
                  invoiceNumber:
                    type: string
                    example: INV-2024-001
                  customerId:
                    type: string
                    example: clp1234567890
                  quoteId:
                    type: string
                    example: quo_1234567890
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                        example: John Doe
                      email:
                        type: string
                        example: john@example.com
                      billingAddress:
                        type: object
                        properties:
                          street:
                            type: string
                            example: 123 Main St
                          city:
                            type: string
                            example: New York
                          state:
                            type: string
                            example: NY
                          zipCode:
                            type: string
                            example: '10001'
                          country:
                            type: string
                            example: USA
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                          example: Professional Website Development
                        quantity:
                          type: number
                          example: 1
                        unitPrice:
                          type: number
                          format: float
                          example: 2500
                        lineTotal:
                          type: number
                          format: float
                          example: 2500
                        notes:
                          type: string
                  subtotal:
                    type: number
                    format: float
                    example: 2500
                  tax:
                    type: number
                    format: float
                    example: 200
                  discountAmount:
                    type: number
                    format: float
                    example: 0
                  total:
                    type: number
                    format: float
                    example: 2700
                  status:
                    type: string
                    enum:
                      - DRAFT
                      - SENT
                      - VIEWED
                      - PAID
                      - OVERDUE
                      - CANCELLED
                    example: SENT
                  dueDate:
                    type: string
                    format: date
                  issueDate:
                    type: string
                    format: date
                  paymentTerms:
                    type: string
                    example: NET_30
                  notes:
                    type: string
                  lateFeePercent:
                    type: number
                    format: float
                    example: 1.5
                  payments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        amount:
                          type: number
                          format: float
                        paymentDate:
                          type: string
                          format: date-time
                        method:
                          type: string
                          example: BANK_TRANSFER
                        reference:
                          type: string
                  amountPaid:
                    type: number
                    format: float
                    example: 0
                  amountDue:
                    type: number
                    format: float
                    example: 2700
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  sentAt:
                    type: string
                    format: date-time
                  viewedAt:
                    type: string
                    format: date-time
                  paidAt:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized
        '404':
          description: Invoice not found
        '500':
          description: Internal server error
    put:
      tags:
        - Invoices
      summary: Update invoice
      description: Updates an existing invoice. Only invoices in DRAFT status can be updated. Requires Admin, Manager, Accountant, or Employee role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Invoice ID
          schema:
            type: string
            example: inv_1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  description: Array of invoice items
                  items:
                    type: object
                    required:
                      - description
                      - quantity
                      - unitPrice
                    properties:
                      description:
                        type: string
                        example: Updated Website Development with CMS
                      quantity:
                        type: number
                        example: 1
                      unitPrice:
                        type: number
                        format: float
                        example: 3000
                      notes:
                        type: string
                        example: Includes CMS integration and training
                dueDate:
                  type: string
                  format: date
                  description: Invoice due date
                  example: '2024-03-15'
                paymentTerms:
                  type: string
                  description: Payment terms for the invoice
                  enum:
                    - NET_15
                    - NET_30
                    - NET_45
                    - NET_60
                    - DUE_ON_RECEIPT
                  example: NET_45
                notes:
                  type: string
                  description: Additional notes for the invoice
                  example: Updated invoice with additional CMS functionality
                lateFeePercent:
                  type: number
                  format: float
                  description: Late fee percentage
                  example: 2
                discountPercent:
                  type: number
                  format: float
                  description: Discount percentage
                  example: 5
      responses:
        '200':
          description: Invoice updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  invoiceNumber:
                    type: string
                  customerId:
                    type: string
                  items:
                    type: array
                    items:
                      type: object
                  subtotal:
                    type: number
                    format: float
                  tax:
                    type: number
                    format: float
                  total:
                    type: number
                    format: float
                  status:
                    type: string
                  dueDate:
                    type: string
                    format: date
                  updatedAt:
                    type: string
                    format: date-time
        '400':
          description: Invalid input data or invoice cannot be updated (not in DRAFT status)
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Invoice not found
        '500':
          description: Internal server error
  /invoices/{id}/cancel:
    post:
      tags:
        - Invoices
      summary: Cancel invoice
      description: Cancels an invoice and updates status to CANCELLED. Only invoices that are not yet paid can be cancelled. Requires Admin or Manager role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Invoice ID
          schema:
            type: string
            example: inv_1234567890
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: Reason for cancellation (optional)
                  example: Customer requested cancellation due to changed requirements
                notifyCustomer:
                  type: boolean
                  description: Whether to send cancellation notification to customer
                  example: true
      responses:
        '200':
          description: Invoice cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invoice cancelled successfully
                  invoice:
                    type: object
                    properties:
                      id:
                        type: string
                      invoiceNumber:
                        type: string
                        example: INV-2024-001
                      status:
                        type: string
                        example: CANCELLED
                      cancelledAt:
                        type: string
                        format: date-time
                      cancellationReason:
                        type: string
                        example: Customer requested cancellation
                      updatedAt:
                        type: string
                        format: date-time
                  notificationSent:
                    type: boolean
                    description: Whether cancellation notification was sent to customer
                    example: true
        '400':
          description: Invoice cannot be cancelled (already paid or invalid status)
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Invoice not found
        '500':
          description: Internal server error
  /invoices/{id}/payment:
    post:
      tags:
        - Invoices
      summary: Record payment for invoice
      description: Records a payment against an invoice. Supports partial and full payments. Automatically updates invoice status to PAID when fully paid. Requires Admin, Manager, Accountant, or Employee role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Invoice ID
          schema:
            type: string
            example: inv_1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - paymentDate
                - method
              properties:
                amount:
                  type: number
                  format: float
                  description: Payment amount (must be positive and not exceed amount due)
                  example: 2700
                paymentDate:
                  type: string
                  format: date
                  description: Date when payment was received
                  example: '2024-02-10'
                method:
                  type: string
                  description: Payment method
                  enum:
                    - CASH
                    - CHECK
                    - BANK_TRANSFER
                    - CREDIT_CARD
                    - PAYPAL
                    - OTHER
                  example: BANK_TRANSFER
                reference:
                  type: string
                  description: Payment reference or transaction ID
                  example: TXN-20240210-001
                notes:
                  type: string
                  description: Additional notes about the payment
                  example: Payment received via bank transfer
                applyLateFee:
                  type: boolean
                  description: Whether to apply late fees if payment is overdue
                  default: true
      responses:
        '201':
          description: Payment recorded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Payment recorded successfully
                  payment:
                    type: object
                    properties:
                      id:
                        type: string
                        example: pay_1234567890
                      invoiceId:
                        type: string
                        example: inv_1234567890
                      amount:
                        type: number
                        format: float
                        example: 2700
                      paymentDate:
                        type: string
                        format: date
                      method:
                        type: string
                        example: BANK_TRANSFER
                      reference:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                  invoice:
                    type: object
                    properties:
                      id:
                        type: string
                      invoiceNumber:
                        type: string
                        example: INV-2024-001
                      status:
                        type: string
                        example: PAID
                      amountPaid:
                        type: number
                        format: float
                        example: 2700
                      amountDue:
                        type: number
                        format: float
                        example: 0
                      paidAt:
                        type: string
                        format: date-time
                  lateFeesApplied:
                    type: number
                    format: float
                    description: Amount of late fees applied (if any)
                    example: 0
        '400':
          description: Invalid payment data (amount exceeds due amount, invalid date, etc.)
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Invoice not found
        '409':
          description: Invoice is already fully paid or cancelled
        '500':
          description: Internal server error
  /invoices/{id}/send:
    post:
      tags:
        - Invoices
      summary: Send invoice to customer
      description: Sends an invoice to the customer via email and updates status to SENT. Generates PDF invoice and includes payment instructions. Requires Admin, Manager, Accountant, or Employee role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Invoice ID
          schema:
            type: string
            example: inv_1234567890
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                emailSubject:
                  type: string
                  description: Custom email subject (optional)
                  example: Invoice INV-2024-001 from Your Company
                emailMessage:
                  type: string
                  description: Custom email message (optional)
                  example: Please find attached your invoice. Payment is due within 30 days.
                sendCopy:
                  type: boolean
                  description: Send copy to invoice creator
                  example: true
      responses:
        '200':
          description: Invoice sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invoice sent successfully to customer
                  invoice:
                    type: object
                    properties:
                      id:
                        type: string
                      invoiceNumber:
                        type: string
                        example: INV-2024-001
                      status:
                        type: string
                        example: SENT
                      sentAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                  emailSent:
                    type: boolean
                    example: true
                  recipientEmail:
                    type: string
                    example: john@example.com
        '400':
          description: Invoice cannot be sent (invalid status, missing customer email, or already sent)
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Invoice not found
        '500':
          description: Internal server error or email sending failure
  /invoices/{id}/viewed:
    post:
      tags:
        - Invoices
      summary: Mark invoice as viewed
      description: Marks an invoice as viewed by the customer. This is typically called when the customer views the invoice through a public link or email. Available to all authenticated users.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Invoice ID
          schema:
            type: string
            example: inv_1234567890
      responses:
        '200':
          description: Invoice marked as viewed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invoice marked as viewed
                  invoice:
                    type: object
                    properties:
                      id:
                        type: string
                      invoiceNumber:
                        type: string
                        example: INV-2024-001
                      status:
                        type: string
                        example: VIEWED
                      viewedAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '400':
          description: Invoice cannot be marked as viewed (invalid status)
        '401':
          description: Unauthorized
        '404':
          description: Invoice not found
        '500':
          description: Internal server error
  /manual-payments:
    post:
      tags:
        - Manual Payments
      summary: Create a manual payment
      description: Records a manual payment received outside of electronic payment systems (e.g., cash, cheque, bank transfer). Essential for offline payment tracking and reconciliation.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - customerId
                - amount
                - paymentMethod
                - receivedDate
              properties:
                customerId:
                  type: string
                  description: Customer ID making the payment
                  example: clp1234567890
                amount:
                  type: number
                  format: float
                  description: Payment amount
                  example: 1250
                  minimum: 0.01
                paymentMethod:
                  type: string
                  enum:
                    - CASH
                    - CHEQUE
                    - BANK_TRANSFER
                    - MONEY_ORDER
                    - WIRE_TRANSFER
                    - OTHER
                  description: Method of payment
                  example: CHEQUE
                receivedDate:
                  type: string
                  format: date
                  description: Date payment was received (YYYY-MM-DD)
                  example: '2024-01-20'
                referenceNumber:
                  type: string
                  description: Reference number (cheque number, transfer ID, etc.)
                  example: CHQ-789456
                  maxLength: 50
                bankDetails:
                  type: object
                  properties:
                    bankName:
                      type: string
                      example: TD Canada Trust
                    accountNumber:
                      type: string
                      description: Last 4 digits of account number
                      example: '****1234'
                    transitNumber:
                      type: string
                      example: '12345'
                    sortCode:
                      type: string
                      example: '001'
                  description: Banking details (for cheques and transfers)
                currency:
                  type: string
                  enum:
                    - CAD
                    - USD
                    - EUR
                    - GBP
                  default: CAD
                  description: Payment currency
                exchangeRate:
                  type: number
                  format: float
                  description: Exchange rate if different from base currency
                  example: 1.35
                invoiceAllocations:
                  type: array
                  items:
                    type: object
                    properties:
                      invoiceId:
                        type: string
                      amount:
                        type: number
                        format: float
                  description: How to allocate payment across invoices
                notes:
                  type: string
                  description: Additional notes about the payment
                  example: Received via mail, cheque dated Jan 18
                  maxLength: 1000
                depositedDate:
                  type: string
                  format: date
                  description: Date payment was deposited (if different from received date)
                depositAccount:
                  type: string
                  description: Account where payment was deposited
                  example: Business Checking - ****5678
                verificationRequired:
                  type: boolean
                  default: false
                  description: Whether payment requires additional verification
      responses:
        '201':
          description: Manual payment created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Payment ID
                  paymentNumber:
                    type: string
                    description: Unique payment reference number
                    example: MP-2024-001234
                  amount:
                    type: number
                    format: float
                  paymentMethod:
                    type: string
                  status:
                    type: string
                    enum:
                      - PENDING
                      - VERIFIED
                      - DEPOSITED
                      - CLEARED
                      - BOUNCED
                      - CANCELLED
                    example: PENDING
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                  allocations:
                    type: array
                    items:
                      type: object
                      properties:
                        invoiceId:
                          type: string
                        invoiceNumber:
                          type: string
                        amount:
                          type: number
                          format: float
                        remainingBalance:
                          type: number
                          format: float
                    description: Invoice payment allocations
                  verification:
                    type: object
                    properties:
                      required:
                        type: boolean
                      status:
                        type: string
                        enum:
                          - PENDING
                          - IN_PROGRESS
                          - VERIFIED
                          - REJECTED
                      estimatedClearingTime:
                        type: string
                        description: Estimated time for payment to clear
                  createdAt:
                    type: string
                    format: date-time
                  createdBy:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
        '400':
          description: Invalid input data or allocation errors
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Customer or invoice not found
        '422':
          description: Business rule violation (e.g., payment exceeds outstanding balance)
        '500':
          description: Internal server error
  /manual-payments/allocate:
    post:
      tags:
        - Manual Payments
      summary: Allocate partial payment across invoices
      description: Distributes a partial payment amount across multiple outstanding invoices according to specified allocation rules or business priorities.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - paymentId
                - allocations
              properties:
                paymentId:
                  type: string
                  description: ID of the payment to allocate
                  example: clp1234567890
                customerId:
                  type: string
                  description: Customer ID (for validation)
                  example: clp1234567890
                totalAmount:
                  type: number
                  format: float
                  description: Total payment amount to allocate
                  example: 2500
                allocationMethod:
                  type: string
                  enum:
                    - MANUAL
                    - OLDEST_FIRST
                    - LARGEST_FIRST
                    - PROPORTIONAL
                    - HIGHEST_INTEREST
                  description: Method for allocating payment
                  example: OLDEST_FIRST
                allocations:
                  type: array
                  items:
                    type: object
                    required:
                      - invoiceId
                      - amount
                    properties:
                      invoiceId:
                        type: string
                        description: Invoice ID to allocate payment to
                      invoiceNumber:
                        type: string
                        description: Invoice number (for reference)
                      amount:
                        type: number
                        format: float
                        description: Amount to allocate to this invoice
                        minimum: 0.01
                      priority:
                        type: integer
                        description: Allocation priority (1 = highest)
                        minimum: 1
                      notes:
                        type: string
                        description: Notes about this allocation
                        maxLength: 200
                  minItems: 1
                  description: Array of invoice allocations
                applyCredits:
                  type: boolean
                  default: false
                  description: Whether to apply existing customer credits first
                minimumPaymentAmount:
                  type: number
                  format: float
                  description: Minimum amount to allocate per invoice
                  example: 1
                roundingMethod:
                  type: string
                  enum:
                    - ROUND_UP
                    - ROUND_DOWN
                    - ROUND_NEAREST
                    - NO_ROUNDING
                  default: ROUND_NEAREST
                  description: How to handle rounding for allocation amounts
                notes:
                  type: string
                  description: Additional notes about the allocation
                  maxLength: 500
                notifyCustomer:
                  type: boolean
                  default: true
                  description: Whether to notify customer of payment allocation
      responses:
        '200':
          description: Payment allocated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  allocationId:
                    type: string
                    description: Unique allocation transaction ID
                  paymentId:
                    type: string
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                  allocationSummary:
                    type: object
                    properties:
                      totalAmount:
                        type: number
                        format: float
                        description: Total payment amount
                      allocatedAmount:
                        type: number
                        format: float
                        description: Amount successfully allocated
                      remainingAmount:
                        type: number
                        format: float
                        description: Unallocated amount (customer credit)
                      invoicesAffected:
                        type: integer
                        description: Number of invoices affected
                      invoicesPaid:
                        type: integer
                        description: Number of invoices fully paid
                  allocations:
                    type: array
                    items:
                      type: object
                      properties:
                        invoiceId:
                          type: string
                        invoiceNumber:
                          type: string
                        previousBalance:
                          type: number
                          format: float
                        allocatedAmount:
                          type: number
                          format: float
                        newBalance:
                          type: number
                          format: float
                        status:
                          type: string
                          enum:
                            - PAID
                            - PARTIALLY_PAID
                            - OVERPAID
                        paidInFull:
                          type: boolean
                    description: Detailed allocation results per invoice
                  customerAccount:
                    type: object
                    properties:
                      previousBalance:
                        type: number
                        format: float
                      newBalance:
                        type: number
                        format: float
                      creditBalance:
                        type: number
                        format: float
                        description: Available customer credit after allocation
                      outstandingInvoices:
                        type: integer
                        description: Number of remaining unpaid invoices
                  notifications:
                    type: object
                    properties:
                      customerNotified:
                        type: boolean
                      accountingNotified:
                        type: boolean
                      managementNotified:
                        type: boolean
                  auditTrail:
                    type: object
                    properties:
                      allocatedBy:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          role:
                            type: string
                      allocatedAt:
                        type: string
                        format: date-time
                      allocationMethod:
                        type: string
                      processingTime:
                        type: number
                        format: float
                        description: Processing time in seconds
        '400':
          description: Invalid allocation data or amounts don't match
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Payment, customer, or invoice not found
        '409':
          description: Conflict - Payment already allocated or invoice statuses changed
        '422':
          description: Business rule violations (e.g., allocation exceeds invoice balance)
        '500':
          description: Internal server error
  /manual-payments/batch:
    post:
      tags:
        - Manual Payments
      summary: Process batch payments
      description: Processes multiple manual payments in a single operation. Useful for importing bank statement data or processing multiple cheques received together.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - payments
                - batchReference
              properties:
                batchReference:
                  type: string
                  description: Reference identifier for this batch
                  example: BATCH-2024-001
                  maxLength: 50
                batchDate:
                  type: string
                  format: date
                  description: Date of batch processing
                  example: '2024-01-20'
                batchType:
                  type: string
                  enum:
                    - BANK_STATEMENT_IMPORT
                    - CHEQUE_DEPOSIT
                    - CASH_DEPOSIT
                    - WIRE_TRANSFERS
                    - MIXED
                  description: Type of batch processing
                  example: CHEQUE_DEPOSIT
                payments:
                  type: array
                  items:
                    type: object
                    required:
                      - customerId
                      - amount
                      - paymentMethod
                      - receivedDate
                    properties:
                      customerId:
                        type: string
                        description: Customer ID or customer identifier
                      customerEmail:
                        type: string
                        format: email
                        description: Customer email (alternative to ID)
                      amount:
                        type: number
                        format: float
                        minimum: 0.01
                      paymentMethod:
                        type: string
                        enum:
                          - CASH
                          - CHEQUE
                          - BANK_TRANSFER
                          - MONEY_ORDER
                          - WIRE_TRANSFER
                          - OTHER
                      receivedDate:
                        type: string
                        format: date
                      referenceNumber:
                        type: string
                        maxLength: 50
                      bankDetails:
                        type: object
                      notes:
                        type: string
                        maxLength: 500
                      invoiceAllocations:
                        type: array
                        items:
                          type: object
                          properties:
                            invoiceId:
                              type: string
                            amount:
                              type: number
                              format: float
                  minItems: 1
                  maxItems: 100
                  description: Array of payments to process
                validateCustomers:
                  type: boolean
                  default: true
                  description: Whether to validate customer existence before processing
                autoAllocate:
                  type: boolean
                  default: true
                  description: Whether to automatically allocate payments to oldest invoices
                continueOnError:
                  type: boolean
                  default: false
                  description: Whether to continue processing if individual payments fail
                notifyCustomers:
                  type: boolean
                  default: false
                  description: Whether to send payment confirmation emails to customers
      responses:
        '200':
          description: Batch processing completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  batchId:
                    type: string
                    description: Unique batch processing ID
                  batchReference:
                    type: string
                  processedAt:
                    type: string
                    format: date-time
                  summary:
                    type: object
                    properties:
                      totalPayments:
                        type: integer
                        description: Total number of payments in batch
                      successfulPayments:
                        type: integer
                        description: Number of successfully processed payments
                      failedPayments:
                        type: integer
                        description: Number of failed payments
                      totalAmount:
                        type: number
                        format: float
                        description: Total amount processed
                      processingTime:
                        type: number
                        format: float
                        description: Processing time in seconds
                  successfulPayments:
                    type: array
                    items:
                      type: object
                      properties:
                        paymentId:
                          type: string
                        paymentNumber:
                          type: string
                        customerId:
                          type: string
                        amount:
                          type: number
                          format: float
                        status:
                          type: string
                  failedPayments:
                    type: array
                    items:
                      type: object
                      properties:
                        rowIndex:
                          type: integer
                          description: Index in the original batch array
                        customerId:
                          type: string
                        amount:
                          type: number
                          format: float
                        errorCode:
                          type: string
                        errorMessage:
                          type: string
                        suggestions:
                          type: array
                          items:
                            type: string
                  recommendations:
                    type: array
                    items:
                      type: string
                    description: System recommendations for failed payments
        '400':
          description: Invalid batch data or validation errors
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '413':
          description: Batch too large - exceeds maximum allowed size
        '422':
          description: Business rule violations in batch data
        '500':
          description: Internal server error
  /manual-payments/cheque/{paymentId}/status:
    put:
      tags:
        - Manual Payments
      summary: Update cheque payment status
      description: Updates the status of a cheque payment as it progresses through the clearing process, from received to cleared or bounced.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: paymentId
          required: true
          description: Payment ID of the cheque
          schema:
            type: string
            example: clp1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum:
                    - RECEIVED
                    - DEPOSITED
                    - CLEARING
                    - CLEARED
                    - BOUNCED
                    - STOPPED
                    - CANCELLED
                  description: New status of the cheque
                  example: CLEARED
                statusDate:
                  type: string
                  format: date-time
                  description: Date and time of status change
                  example: '2024-01-25T10:30:00Z'
                bankConfirmation:
                  type: object
                  properties:
                    confirmationNumber:
                      type: string
                      description: Bank confirmation number
                      example: BNK-789456123
                    clearingDate:
                      type: string
                      format: date
                      description: Date cheque cleared
                    depositSlipNumber:
                      type: string
                      description: Deposit slip reference number
                    bankCharges:
                      type: number
                      format: float
                      description: Bank processing charges
                      example: 2.5
                  description: Bank confirmation details (for cleared status)
                bounceReason:
                  type: string
                  enum:
                    - INSUFFICIENT_FUNDS
                    - ACCOUNT_CLOSED
                    - STOP_PAYMENT
                    - SIGNATURE_MISMATCH
                    - STALE_DATED
                    - OTHER
                  description: Reason for bounce (if status is BOUNCED)
                nsfFee:
                  type: number
                  format: float
                  description: NSF fee charged (if applicable)
                  example: 45
                notes:
                  type: string
                  description: Additional notes about the status change
                  example: Confirmed cleared via online banking
                  maxLength: 500
                notifyCustomer:
                  type: boolean
                  default: true
                  description: Whether to notify customer of status change
                requiresFollowUp:
                  type: boolean
                  default: false
                  description: Whether this status requires follow-up action
                followUpDate:
                  type: string
                  format: date
                  description: Date for follow-up action (if required)
                replacementPayment:
                  type: object
                  properties:
                    requested:
                      type: boolean
                      description: Whether replacement payment was requested
                    method:
                      type: string
                      enum:
                        - CASH
                        - NEW_CHEQUE
                        - BANK_TRANSFER
                        - CREDIT_CARD
                    dueDate:
                      type: string
                      format: date
                    amount:
                      type: number
                      format: float
                  description: Replacement payment details (for bounced cheques)
      responses:
        '200':
          description: Cheque status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  paymentId:
                    type: string
                  paymentNumber:
                    type: string
                  previousStatus:
                    type: string
                  newStatus:
                    type: string
                  statusChangedAt:
                    type: string
                    format: date-time
                  statusChangedBy:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
                  paymentDetails:
                    type: object
                    properties:
                      amount:
                        type: number
                        format: float
                      chequeNumber:
                        type: string
                      receivedDate:
                        type: string
                        format: date
                      customer:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          email:
                            type: string
                  statusHistory:
                    type: array
                    items:
                      type: object
                      properties:
                        status:
                          type: string
                        date:
                          type: string
                          format: date-time
                        changedBy:
                          type: string
                        notes:
                          type: string
                    description: Complete status change history
                  accountingImpact:
                    type: object
                    properties:
                      invoicesAffected:
                        type: array
                        items:
                          type: object
                          properties:
                            invoiceId:
                              type: string
                            action:
                              type: string
                              enum:
                                - PAYMENT_CONFIRMED
                                - PAYMENT_REVERSED
                                - BALANCE_UPDATED
                      customerBalanceChange:
                        type: number
                        format: float
                      feesApplied:
                        type: number
                        format: float
                  notifications:
                    type: object
                    properties:
                      customerNotified:
                        type: boolean
                      accountingNotified:
                        type: boolean
                      managementNotified:
                        type: boolean
                  nextActions:
                    type: array
                    items:
                      type: object
                      properties:
                        action:
                          type: string
                        dueDate:
                          type: string
                          format: date
                        assignedTo:
                          type: string
                        priority:
                          type: string
                          enum:
                            - LOW
                            - MEDIUM
                            - HIGH
                            - URGENT
                    description: Required follow-up actions
        '400':
          description: Invalid status transition or missing required data
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Payment not found or not a cheque payment
        '409':
          description: Conflict - Invalid status transition or concurrent update
        '422':
          description: Business rule violations (e.g., cannot clear already bounced cheque)
        '500':
          description: Internal server error
  /manual-payments/payment-plan:
    post:
      tags:
        - Manual Payments
      summary: Create payment plan
      description: Creates a structured payment plan for customers with outstanding balances, allowing them to pay in installments over time with defined terms and conditions.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - customerId
                - totalAmount
                - installments
                - startDate
              properties:
                customerId:
                  type: string
                  description: Customer ID for the payment plan
                  example: clp1234567890
                totalAmount:
                  type: number
                  format: float
                  description: Total amount to be paid under the plan
                  example: 5000
                  minimum: 1
                invoiceIds:
                  type: array
                  items:
                    type: string
                  description: Invoice IDs included in the payment plan
                  example:
                    - inv1
                    - inv2
                    - inv3
                planType:
                  type: string
                  enum:
                    - EQUAL_INSTALLMENTS
                    - DECLINING_BALANCE
                    - CUSTOM_SCHEDULE
                  description: Type of payment plan structure
                  example: EQUAL_INSTALLMENTS
                installments:
                  type: integer
                  description: Number of installment payments
                  example: 6
                  minimum: 2
                  maximum: 24
                installmentAmount:
                  type: number
                  format: float
                  description: Amount per installment (for equal installments)
                  example: 833.33
                startDate:
                  type: string
                  format: date
                  description: Date of first payment
                  example: '2024-02-01'
                frequency:
                  type: string
                  enum:
                    - WEEKLY
                    - BIWEEKLY
                    - MONTHLY
                    - QUARTERLY
                  default: MONTHLY
                  description: Payment frequency
                paymentMethod:
                  type: string
                  enum:
                    - AUTO_DEBIT
                    - MANUAL_PAYMENT
                    - CHEQUE
                    - BANK_TRANSFER
                  description: Preferred payment method
                  example: AUTO_DEBIT
                interestRate:
                  type: number
                  format: float
                  description: Annual interest rate (if applicable)
                  example: 6.5
                  minimum: 0
                  maximum: 30
                lateFeeAmount:
                  type: number
                  format: float
                  description: Late fee for missed payments
                  example: 25
                  minimum: 0
                gracePeriodDays:
                  type: integer
                  description: Grace period in days before late fees apply
                  example: 5
                  minimum: 0
                  maximum: 30
                terms:
                  type: object
                  properties:
                    requiresApproval:
                      type: boolean
                      default: true
                      description: Whether plan requires management approval
                    autoTerminateOnDefault:
                      type: boolean
                      default: true
                      description: Whether to auto-terminate on missed payments
                    maxMissedPayments:
                      type: integer
                      default: 2
                      description: Maximum missed payments before termination
                    earlyPaymentDiscount:
                      type: number
                      format: float
                      description: Discount percentage for early full payment
                customSchedule:
                  type: array
                  items:
                    type: object
                    properties:
                      dueDate:
                        type: string
                        format: date
                      amount:
                        type: number
                        format: float
                      description:
                        type: string
                  description: Custom payment schedule (if planType is CUSTOM_SCHEDULE)
                notes:
                  type: string
                  description: Additional notes about the payment plan
                  maxLength: 1000
                customerAgreement:
                  type: object
                  properties:
                    agreed:
                      type: boolean
                      description: Whether customer has agreed to terms
                    agreedDate:
                      type: string
                      format: date-time
                    signatureRequired:
                      type: boolean
                      default: false
                    documentUrl:
                      type: string
                      format: uri
                      description: URL to signed agreement document
      responses:
        '201':
          description: Payment plan created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Payment plan ID
                  planNumber:
                    type: string
                    description: Unique payment plan reference number
                    example: PP-2024-001234
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                  planDetails:
                    type: object
                    properties:
                      totalAmount:
                        type: number
                        format: float
                      installments:
                        type: integer
                      installmentAmount:
                        type: number
                        format: float
                      frequency:
                        type: string
                      startDate:
                        type: string
                        format: date
                      endDate:
                        type: string
                        format: date
                  status:
                    type: string
                    enum:
                      - DRAFT
                      - PENDING_APPROVAL
                      - ACTIVE
                      - COMPLETED
                      - TERMINATED
                      - DEFAULTED
                    example: PENDING_APPROVAL
                  paymentSchedule:
                    type: array
                    items:
                      type: object
                      properties:
                        installmentNumber:
                          type: integer
                        dueDate:
                          type: string
                          format: date
                        amount:
                          type: number
                          format: float
                        principal:
                          type: number
                          format: float
                        interest:
                          type: number
                          format: float
                        remainingBalance:
                          type: number
                          format: float
                        status:
                          type: string
                          enum:
                            - PENDING
                            - PAID
                            - LATE
                            - MISSED
                    description: Complete payment schedule
                  approvalRequired:
                    type: boolean
                    description: Whether management approval is required
                  nextAction:
                    type: string
                    description: Next required action
                    example: Awaiting management approval
                  createdAt:
                    type: string
                    format: date-time
                  createdBy:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
        '400':
          description: Invalid payment plan data or parameters
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Customer or invoice not found
        '422':
          description: Business rule violations (e.g., customer already has active plan)
        '500':
          description: Internal server error
  /manual-payments/reconcile:
    post:
      tags:
        - Manual Payments
      summary: Reconcile payments with bank statement
      description: Matches recorded manual payments with actual bank statement transactions to ensure accurate financial records and identify discrepancies.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - statementDate
                - accountNumber
                - transactions
              properties:
                statementDate:
                  type: string
                  format: date
                  description: Bank statement date
                  example: '2024-01-31'
                accountNumber:
                  type: string
                  description: Bank account number (last 4 digits)
                  example: '****1234'
                statementPeriod:
                  type: object
                  properties:
                    startDate:
                      type: string
                      format: date
                    endDate:
                      type: string
                      format: date
                  description: Statement period for reconciliation
                openingBalance:
                  type: number
                  format: float
                  description: Opening balance from bank statement
                  example: 15750
                closingBalance:
                  type: number
                  format: float
                  description: Closing balance from bank statement
                  example: 18925
                transactions:
                  type: array
                  items:
                    type: object
                    required:
                      - date
                      - amount
                      - description
                    properties:
                      date:
                        type: string
                        format: date
                        description: Transaction date
                      amount:
                        type: number
                        format: float
                        description: Transaction amount (positive for deposits)
                      description:
                        type: string
                        description: Bank transaction description
                        example: 'DEP CHQ #123456'
                      referenceNumber:
                        type: string
                        description: Bank reference number
                      transactionType:
                        type: string
                        enum:
                          - DEPOSIT
                          - WITHDRAWAL
                          - TRANSFER
                          - FEE
                          - INTEREST
                          - OTHER
                      balanceAfter:
                        type: number
                        format: float
                        description: Account balance after transaction
                  minItems: 1
                  description: Bank statement transactions
                reconciliationRules:
                  type: object
                  properties:
                    matchTolerance:
                      type: number
                      format: float
                      default: 0.01
                      description: Amount tolerance for matching (in currency units)
                    dateTolerance:
                      type: integer
                      default: 3
                      description: Date tolerance for matching (in days)
                    autoMatch:
                      type: boolean
                      default: true
                      description: Whether to automatically match obvious matches
                    requireExactAmount:
                      type: boolean
                      default: false
                      description: Whether to require exact amount matches
      responses:
        '200':
          description: Reconciliation completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  reconciliationId:
                    type: string
                    description: Unique reconciliation session ID
                  reconciledAt:
                    type: string
                    format: date-time
                  statementSummary:
                    type: object
                    properties:
                      accountNumber:
                        type: string
                      statementDate:
                        type: string
                        format: date
                      openingBalance:
                        type: number
                        format: float
                      closingBalance:
                        type: number
                        format: float
                      totalTransactions:
                        type: integer
                      totalDeposits:
                        type: number
                        format: float
                  matchingSummary:
                    type: object
                    properties:
                      totalRecordedPayments:
                        type: integer
                        description: Total manual payments in system for period
                      totalBankTransactions:
                        type: integer
                        description: Total bank transactions analyzed
                      automaticMatches:
                        type: integer
                        description: Number of automatic matches found
                      manualReviewRequired:
                        type: integer
                        description: Number of transactions requiring manual review
                      unmatchedPayments:
                        type: integer
                        description: Recorded payments without bank matches
                      unmatchedTransactions:
                        type: integer
                        description: Bank transactions without payment matches
                  matches:
                    type: array
                    items:
                      type: object
                      properties:
                        paymentId:
                          type: string
                        paymentNumber:
                          type: string
                        bankTransaction:
                          type: object
                          properties:
                            date:
                              type: string
                              format: date
                            amount:
                              type: number
                              format: float
                            description:
                              type: string
                            referenceNumber:
                              type: string
                        matchConfidence:
                          type: number
                          format: float
                          description: Confidence score (0-1) for the match
                        matchType:
                          type: string
                          enum:
                            - EXACT
                            - AMOUNT_DATE
                            - REFERENCE
                            - MANUAL
                        discrepancies:
                          type: array
                          items:
                            type: object
                            properties:
                              field:
                                type: string
                              recorded:
                                type: string
                              actual:
                                type: string
                    description: Successfully matched payments and transactions
                  unmatchedPayments:
                    type: array
                    items:
                      type: object
                      properties:
                        paymentId:
                          type: string
                        paymentNumber:
                          type: string
                        amount:
                          type: number
                          format: float
                        receivedDate:
                          type: string
                          format: date
                        customer:
                          type: string
                        possibleMatches:
                          type: array
                          items:
                            type: object
                    description: Recorded payments without bank matches
                  unmatchedTransactions:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        amount:
                          type: number
                          format: float
                        description:
                          type: string
                        referenceNumber:
                          type: string
                        suggestions:
                          type: array
                          items:
                            type: string
                    description: Bank transactions without payment matches
                  recommendations:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - CREATE_PAYMENT
                            - INVESTIGATE_DUPLICATE
                            - CHECK_DEPOSIT_DATE
                            - VERIFY_AMOUNT
                        description:
                          type: string
                        priority:
                          type: string
                          enum:
                            - LOW
                            - MEDIUM
                            - HIGH
                            - URGENT
                    description: System recommendations for unmatched items
        '400':
          description: Invalid reconciliation data or parameters
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '422':
          description: Business rule violations in reconciliation data
        '500':
          description: Internal server error
  /organizations:
    get:
      tags:
        - Organizations
      summary: List all organizations
      description: Retrieves a paginated list of all organizations in the system. Only accessible to Super Administrators for system-wide oversight.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Number of organizations per page
        - in: query
          name: search
          schema:
            type: string
          description: Search term for organization name or domain
        - in: query
          name: status
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
              - SUSPENDED
          description: Filter by organization status
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - name
              - createdAt
              - updatedAt
              - status
            default: createdAt
          description: Field to sort by
        - in: query
          name: sortOrder
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          description: Sort order
      responses:
        '200':
          description: Organizations retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Organization ID
                        name:
                          type: string
                          example: Acme Corporation
                        domain:
                          type: string
                          example: acme.com
                        status:
                          type: string
                          enum:
                            - ACTIVE
                            - INACTIVE
                            - SUSPENDED
                          example: ACTIVE
                        settings:
                          type: object
                          description: Organization configuration settings
                        userCount:
                          type: integer
                          description: Number of users in the organization
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      total:
                        type: integer
                      pages:
                        type: integer
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Requires Super Admin role
        '500':
          description: Internal server error
    post:
      tags:
        - Organizations
      summary: Create a new organization
      description: Creates a new organization with multi-tenant isolation. Only Super Administrators can create organizations to maintain system integrity and control tenant provisioning.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - domain
                - adminEmail
              properties:
                name:
                  type: string
                  description: Organization name
                  example: Acme Corporation
                  minLength: 2
                  maxLength: 100
                domain:
                  type: string
                  description: Organization domain (must be unique)
                  example: acme.com
                  pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]\.[a-zA-Z]{2,}$
                adminEmail:
                  type: string
                  format: email
                  description: Email address for the organization administrator
                  example: admin@acme.com
                description:
                  type: string
                  description: Optional organization description
                  example: Leading provider of innovative solutions
                  maxLength: 500
                address:
                  type: object
                  properties:
                    street:
                      type: string
                      example: 123 Business Ave
                    city:
                      type: string
                      example: New York
                    state:
                      type: string
                      example: NY
                    zipCode:
                      type: string
                      example: '10001'
                    country:
                      type: string
                      example: USA
                settings:
                  type: object
                  description: Initial organization settings
                  properties:
                    timezone:
                      type: string
                      example: America/New_York
                    currency:
                      type: string
                      example: USD
                    dateFormat:
                      type: string
                      example: MM/DD/YYYY
      responses:
        '201':
          description: Organization created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Organization ID
                  name:
                    type: string
                  domain:
                    type: string
                  status:
                    type: string
                    enum:
                      - ACTIVE
                      - INACTIVE
                      - SUSPENDED
                  adminUser:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                        example: ADMIN
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        '400':
          description: Invalid input data or domain already exists
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Requires Super Admin role
        '409':
          description: Conflict - Organization domain already exists
        '500':
          description: Internal server error
  /organizations/{id}:
    get:
      tags:
        - Organizations
      summary: Get organization details
      description: Retrieves detailed information about a specific organization. Users can only access their own organization's details unless they are Super Administrators.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Organization ID
          schema:
            type: string
            example: clp1234567890
      responses:
        '200':
          description: Organization details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Organization ID
                  name:
                    type: string
                    example: Acme Corporation
                  domain:
                    type: string
                    example: acme.com
                  description:
                    type: string
                    example: Leading provider of innovative solutions
                  status:
                    type: string
                    enum:
                      - ACTIVE
                      - INACTIVE
                      - SUSPENDED
                    example: ACTIVE
                  address:
                    type: object
                    properties:
                      street:
                        type: string
                      city:
                        type: string
                      state:
                        type: string
                      zipCode:
                        type: string
                      country:
                        type: string
                  settings:
                    type: object
                    description: Organization configuration settings
                    properties:
                      timezone:
                        type: string
                        example: America/New_York
                      currency:
                        type: string
                        example: USD
                      dateFormat:
                        type: string
                        example: MM/DD/YYYY
                      features:
                        type: object
                        description: Enabled features for the organization
                  subscription:
                    type: object
                    description: Subscription details
                    properties:
                      plan:
                        type: string
                        example: PROFESSIONAL
                      status:
                        type: string
                        example: ACTIVE
                      expiresAt:
                        type: string
                        format: date-time
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Cannot access organization outside your tenant
        '404':
          description: Organization not found
        '500':
          description: Internal server error
    put:
      tags:
        - Organizations
      summary: Update organization
      description: Updates organization information. Admins can update their own organization, while Super Admins can update any organization.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Organization ID
          schema:
            type: string
            example: clp1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Organization name
                  example: Acme Corporation Updated
                  minLength: 2
                  maxLength: 100
                description:
                  type: string
                  description: Organization description
                  example: Updated description of our services
                  maxLength: 500
                address:
                  type: object
                  properties:
                    street:
                      type: string
                      example: 456 Updated Business Ave
                    city:
                      type: string
                      example: New York
                    state:
                      type: string
                      example: NY
                    zipCode:
                      type: string
                      example: '10002'
                    country:
                      type: string
                      example: USA
                status:
                  type: string
                  enum:
                    - ACTIVE
                    - INACTIVE
                    - SUSPENDED
                  description: Organization status (Super Admin only)
                  example: ACTIVE
      responses:
        '200':
          description: Organization updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  status:
                    type: string
                    enum:
                      - ACTIVE
                      - INACTIVE
                      - SUSPENDED
                  address:
                    type: object
                  updatedAt:
                    type: string
                    format: date-time
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions or cannot update organization outside your tenant
        '404':
          description: Organization not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Organizations
      summary: Deactivate organization
      description: Deactivates an organization and all associated users. This is a soft delete that preserves data for compliance. Only Super Administrators can perform this critical operation.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Organization ID
          schema:
            type: string
            example: clp1234567890
      responses:
        '200':
          description: Organization deactivated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Organization deactivated successfully
                  organizationId:
                    type: string
                    description: ID of the deactivated organization
                  deactivatedAt:
                    type: string
                    format: date-time
                    description: Timestamp when organization was deactivated
                  affectedUsers:
                    type: integer
                    description: Number of users that were deactivated
                  dataRetention:
                    type: object
                    properties:
                      retainUntil:
                        type: string
                        format: date-time
                        description: Date when data will be permanently deleted
                      backupLocation:
                        type: string
                        description: Location of data backup for compliance
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Requires Super Admin role
        '404':
          description: Organization not found
        '409':
          description: Conflict - Organization already deactivated or has active dependencies
        '500':
          description: Internal server error
  /organizations/{id}/settings:
    get:
      tags:
        - Organizations
      summary: Get organization settings
      description: Retrieves organization configuration settings including preferences, integrations, and feature flags. Only accessible to Admins and Super Admins for configuration management.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Organization ID
          schema:
            type: string
            example: clp1234567890
      responses:
        '200':
          description: Organization settings retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizationId:
                    type: string
                  general:
                    type: object
                    properties:
                      timezone:
                        type: string
                        example: America/New_York
                      currency:
                        type: string
                        example: USD
                      dateFormat:
                        type: string
                        example: MM/DD/YYYY
                      timeFormat:
                        type: string
                        example: 12h
                      language:
                        type: string
                        example: en
                  financial:
                    type: object
                    properties:
                      defaultPaymentTerms:
                        type: string
                        enum:
                          - NET_15
                          - NET_30
                          - NET_45
                          - NET_60
                          - DUE_ON_RECEIPT
                        example: NET_30
                      taxRate:
                        type: number
                        format: float
                        example: 8.25
                      lateFeePercentage:
                        type: number
                        format: float
                        example: 1.5
                      autoReminders:
                        type: boolean
                        example: true
                  integrations:
                    type: object
                    properties:
                      stripe:
                        type: object
                        properties:
                          enabled:
                            type: boolean
                          webhookEndpoint:
                            type: string
                      email:
                        type: object
                        properties:
                          provider:
                            type: string
                            example: sendgrid
                          fromAddress:
                            type: string
                            example: noreply@acme.com
                  features:
                    type: object
                    properties:
                      advancedReporting:
                        type: boolean
                      customBranding:
                        type: boolean
                      apiAccess:
                        type: boolean
                      multiCurrency:
                        type: boolean
                  security:
                    type: object
                    properties:
                      enforceStrongPasswords:
                        type: boolean
                      sessionTimeout:
                        type: integer
                        description: Session timeout in minutes
                      ipWhitelist:
                        type: array
                        items:
                          type: string
                        description: Allowed IP addresses/ranges
                  notifications:
                    type: object
                    properties:
                      email:
                        type: boolean
                      sms:
                        type: boolean
                      inApp:
                        type: boolean
                  updatedAt:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Requires Admin or Super Admin role
        '404':
          description: Organization not found
        '500':
          description: Internal server error
    put:
      tags:
        - Organizations
      summary: Update organization settings
      description: Updates organization configuration settings. Changes to critical settings like security and integrations are audit logged for compliance tracking.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Organization ID
          schema:
            type: string
            example: clp1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                general:
                  type: object
                  properties:
                    timezone:
                      type: string
                      example: America/Los_Angeles
                    currency:
                      type: string
                      example: USD
                    dateFormat:
                      type: string
                      enum:
                        - MM/DD/YYYY
                        - DD/MM/YYYY
                        - YYYY-MM-DD
                      example: MM/DD/YYYY
                    timeFormat:
                      type: string
                      enum:
                        - 12h
                        - 24h
                      example: 12h
                    language:
                      type: string
                      example: en
                financial:
                  type: object
                  properties:
                    defaultPaymentTerms:
                      type: string
                      enum:
                        - NET_15
                        - NET_30
                        - NET_45
                        - NET_60
                        - DUE_ON_RECEIPT
                      example: NET_30
                    taxRate:
                      type: number
                      format: float
                      minimum: 0
                      maximum: 100
                      example: 8.25
                    lateFeePercentage:
                      type: number
                      format: float
                      minimum: 0
                      maximum: 50
                      example: 1.5
                    autoReminders:
                      type: boolean
                      example: true
                integrations:
                  type: object
                  properties:
                    stripe:
                      type: object
                      properties:
                        enabled:
                          type: boolean
                        publicKey:
                          type: string
                          description: Stripe publishable key
                        webhookSecret:
                          type: string
                          description: Stripe webhook secret (encrypted)
                    email:
                      type: object
                      properties:
                        provider:
                          type: string
                          enum:
                            - sendgrid
                            - mailgun
                            - ses
                        fromAddress:
                          type: string
                          format: email
                        apiKey:
                          type: string
                          description: Email provider API key (encrypted)
                features:
                  type: object
                  properties:
                    advancedReporting:
                      type: boolean
                    customBranding:
                      type: boolean
                    apiAccess:
                      type: boolean
                    multiCurrency:
                      type: boolean
                security:
                  type: object
                  properties:
                    enforceStrongPasswords:
                      type: boolean
                    sessionTimeout:
                      type: integer
                      minimum: 15
                      maximum: 1440
                      description: Session timeout in minutes
                    ipWhitelist:
                      type: array
                      items:
                        type: string
                      description: Allowed IP addresses/ranges
                notifications:
                  type: object
                  properties:
                    email:
                      type: boolean
                    sms:
                      type: boolean
                    inApp:
                      type: boolean
      responses:
        '200':
          description: Organization settings updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Organization settings updated successfully
                  organizationId:
                    type: string
                  changes:
                    type: array
                    items:
                      type: object
                      properties:
                        setting:
                          type: string
                        previousValue:
                          type: string
                        newValue:
                          type: string
                  updatedAt:
                    type: string
                    format: date-time
        '400':
          description: Invalid input data or settings validation failed
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Requires Admin or Super Admin role
        '404':
          description: Organization not found
        '500':
          description: Internal server error
  /organizations/{id}/stats:
    get:
      tags:
        - Organizations
      summary: Get organization statistics
      description: Retrieves comprehensive statistics and metrics for an organization including user counts, financial summaries, and activity metrics. Available to management roles for business intelligence.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Organization ID
          schema:
            type: string
            example: clp1234567890
        - in: query
          name: period
          schema:
            type: string
            enum:
              - day
              - week
              - month
              - quarter
              - year
            default: month
          description: Time period for statistics calculation
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: Start date for custom period (YYYY-MM-DD)
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: End date for custom period (YYYY-MM-DD)
      responses:
        '200':
          description: Organization statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  organizationId:
                    type: string
                  period:
                    type: object
                    properties:
                      type:
                        type: string
                        example: month
                      startDate:
                        type: string
                        format: date
                      endDate:
                        type: string
                        format: date
                  users:
                    type: object
                    properties:
                      total:
                        type: integer
                        description: Total number of users
                      active:
                        type: integer
                        description: Active users in the period
                      byRole:
                        type: object
                        description: User count breakdown by role
                        properties:
                          ADMIN:
                            type: integer
                          MANAGER:
                            type: integer
                          ACCOUNTANT:
                            type: integer
                          EMPLOYEE:
                            type: integer
                          VIEWER:
                            type: integer
                  financial:
                    type: object
                    properties:
                      revenue:
                        type: object
                        properties:
                          total:
                            type: number
                            format: float
                          invoiced:
                            type: number
                            format: float
                          received:
                            type: number
                            format: float
                          outstanding:
                            type: number
                            format: float
                      customers:
                        type: object
                        properties:
                          total:
                            type: integer
                          new:
                            type: integer
                          active:
                            type: integer
                      transactions:
                        type: object
                        properties:
                          quotes:
                            type: integer
                          invoices:
                            type: integer
                          payments:
                            type: integer
                  activity:
                    type: object
                    properties:
                      loginCount:
                        type: integer
                      apiCalls:
                        type: integer
                      documentsCreated:
                        type: integer
                      lastActivity:
                        type: string
                        format: date-time
                  storage:
                    type: object
                    properties:
                      used:
                        type: number
                        description: Storage used in bytes
                      limit:
                        type: number
                        description: Storage limit in bytes
                      percentage:
                        type: number
                        description: Percentage of storage used
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions or cannot access organization outside your tenant
        '404':
          description: Organization not found
        '500':
          description: Internal server error
  /organizations/{organizationId}/customers:
    post:
      tags:
        - Customers
      summary: Create a new customer
      description: |
        Create a new customer for the organization. Supports both person and business customers
        with proper multi-tenant isolation and audit logging.
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - PERSON
                    - BUSINESS
                  description: Customer type
                  example: PERSON
                tier:
                  $ref: '#/components/schemas/CustomerTier'
                status:
                  $ref: '#/components/schemas/CustomerStatus'
                creditLimit:
                  type: number
                  format: decimal
                  description: Customer credit limit
                  example: 5000
                paymentTerms:
                  type: integer
                  description: Payment terms in days
                  example: 15
                taxExempt:
                  type: boolean
                  description: Tax exemption status
                  default: false
                preferredCurrency:
                  $ref: '#/components/schemas/Currency'
                notes:
                  type: string
                  description: Internal notes
                  example: Preferred customer
                person:
                  type: object
                  description: Person details (required if type is PERSON)
                  properties:
                    firstName:
                      type: string
                      example: John
                    lastName:
                      type: string
                      example: Doe
                    email:
                      type: string
                      format: email
                      example: john.doe@email.com
                    phone:
                      type: string
                      example: +1-555-123-4567
                    dateOfBirth:
                      type: string
                      format: date
                      example: '1985-06-15'
                business:
                  type: object
                  description: Business details (required if type is BUSINESS)
                  properties:
                    legalName:
                      type: string
                      example: Acme Corp Inc.
                    tradingName:
                      type: string
                      example: Acme Corp
                    businessNumber:
                      type: string
                      example: 123456789RC0001
                    email:
                      type: string
                      format: email
                      example: info@acme.com
                    phone:
                      type: string
                      example: +1-555-987-6543
              required:
                - type
            examples:
              PersonCustomer:
                summary: Person customer example
                value:
                  type: PERSON
                  tier: PERSONAL
                  person:
                    firstName: John
                    lastName: Doe
                    email: john.doe@email.com
                    phone: +1-555-123-4567
                  creditLimit: 2000
                  paymentTerms: 15
              BusinessCustomer:
                summary: Business customer example
                value:
                  type: BUSINESS
                  tier: SMALL_BUSINESS
                  business:
                    legalName: Smith Construction Ltd.
                    businessNumber: 987654321RC0001
                    email: info@smithconstruction.com
                    phone: +1-555-987-6543
                  creditLimit: 10000
                  paymentTerms: 30
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  customer:
                    $ref: '#/components/schemas/Customer'
                  message:
                    type: string
                    example: Customer created successfully
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/AuthorizationError'
        '409':
          description: Customer already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      tags:
        - Customers
      summary: List customers with filtering and pagination
      description: |
        Retrieve a paginated list of customers for the organization with support for
        filtering by type, tier, status, and text search. Results are sorted by creation date.
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Search'
        - name: type
          in: query
          description: Filter by customer type
          schema:
            type: string
            enum:
              - PERSON
              - BUSINESS
        - name: tier
          in: query
          description: Filter by customer tier
          schema:
            $ref: '#/components/schemas/CustomerTier'
        - name: status
          in: query
          description: Filter by customer status
          schema:
            $ref: '#/components/schemas/CustomerStatus'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Customers retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  customers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Customer'
                  pagination:
                    $ref: '#/components/schemas/PaginationMeta'
                  filters:
                    type: object
                    description: Applied filters
                    properties:
                      type:
                        type: string
                      tier:
                        type: string
                      status:
                        type: string
                      search:
                        type: string
              example:
                customers:
                  - id: cust_123
                    customerNumber: CUST-2023-001
                    type: PERSON
                    tier: PERSONAL
                    status: ACTIVE
                    person:
                      firstName: John
                      lastName: Doe
                      email: john.doe@email.com
                    createdAt: '2023-12-01T10:30:00.000Z'
                pagination:
                  page: 1
                  limit: 20
                  total: 150
                  totalPages: 8
                  hasNext: true
                  hasPrev: false
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/AuthorizationError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /organizations/{organizationId}/customers/{id}:
    get:
      tags:
        - Customers
      summary: Get customer details
      description: |
        Retrieve detailed information for a specific customer including person/business
        details, addresses, and customer statistics with proper multi-tenant isolation.
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
        - name: id
          in: path
          required: true
          description: Customer ID
          schema:
            type: string
            format: uuid
            example: 550e8400-e29b-41d4-a716-446655440000
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Customer details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  customer:
                    allOf:
                      - $ref: '#/components/schemas/Customer'
                      - type: object
                        properties:
                          stats:
                            type: object
                            description: Customer statistics
                            properties:
                              quotes:
                                type: integer
                                description: Number of quotes
                              invoices:
                                type: integer
                                description: Number of invoices
                              payments:
                                type: integer
                                description: Number of payments
                              projects:
                                type: integer
                                description: Number of projects
              examples:
                PersonCustomer:
                  summary: Person customer details
                  value:
                    customer:
                      id: 550e8400-e29b-41d4-a716-446655440000
                      customerNumber: CUST-001
                      type: PERSON
                      tier: PERSONAL
                      status: ACTIVE
                      person:
                        firstName: John
                        lastName: Doe
                        email: john.doe@email.com
                        phone: +1-555-123-4567
                      stats:
                        quotes: 3
                        invoices: 2
                        payments: 2
                        projects: 1
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/AuthorizationError'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Customers
      summary: Update customer details
      description: |
        Update customer information including person/business details, tier, status,
        and billing preferences with comprehensive audit logging and multi-tenant isolation.
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
        - name: id
          in: path
          required: true
          description: Customer ID
          schema:
            type: string
            format: uuid
            example: 550e8400-e29b-41d4-a716-446655440000
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tier:
                  $ref: '#/components/schemas/CustomerTier'
                status:
                  $ref: '#/components/schemas/CustomerStatus'
                creditLimit:
                  type: number
                  format: decimal
                  description: Customer credit limit
                  example: 7500
                paymentTerms:
                  type: integer
                  description: Payment terms in days
                  example: 30
                taxExempt:
                  type: boolean
                  description: Tax exemption status
                preferredCurrency:
                  $ref: '#/components/schemas/Currency'
                notes:
                  type: string
                  description: Internal notes
                  example: Updated credit limit due to good payment history
                person:
                  type: object
                  description: Person details (for PERSON type customers)
                  properties:
                    firstName:
                      type: string
                      example: Jane
                    lastName:
                      type: string
                      example: Smith
                    email:
                      type: string
                      format: email
                      example: jane.smith@email.com
                    phone:
                      type: string
                      example: +1-555-987-6543
                business:
                  type: object
                  description: Business details (for BUSINESS type customers)
                  properties:
                    legalName:
                      type: string
                      example: Smith Enterprises Inc.
                    tradingName:
                      type: string
                      example: Smith Co.
                    email:
                      type: string
                      format: email
                      example: contact@smithenterprises.com
                    phone:
                      type: string
                      example: +1-555-111-2222
            examples:
              UpdatePersonCustomer:
                summary: Update person customer
                value:
                  tier: SMALL_BUSINESS
                  creditLimit: 7500
                  paymentTerms: 30
                  person:
                    email: jane.smith@newdomain.com
                    phone: +1-555-987-6543
              UpdateBusinessCustomer:
                summary: Update business customer
                value:
                  status: ACTIVE
                  creditLimit: 25000
                  business:
                    email: billing@smithenterprises.com
      responses:
        '200':
          description: Customer updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Customer updated successfully
                  customer:
                    $ref: '#/components/schemas/Customer'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/AuthorizationError'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Customers
      summary: Delete customer (soft delete)
      description: |
        Perform a soft delete on a customer record, setting deletedAt timestamp while
        preserving all associated data for audit and historical purposes with multi-tenant isolation.
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
        - name: id
          in: path
          required: true
          description: Customer ID
          schema:
            type: string
            format: uuid
            example: 550e8400-e29b-41d4-a716-446655440000
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Customer deleted successfully (soft delete)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Customer deleted successfully
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: Customer ID
                        example: 550e8400-e29b-41d4-a716-446655440000
                      status:
                        type: string
                        enum:
                          - INACTIVE
                        description: Customer status after deletion
                        example: INACTIVE
                      deletedAt:
                        type: string
                        format: date-time
                        description: Soft deletion timestamp
                        example: '2024-01-15T10:30:00.000Z'
              example:
                message: Customer deleted successfully
                customer:
                  id: 550e8400-e29b-41d4-a716-446655440000
                  status: INACTIVE
                  deletedAt: '2024-01-15T10:30:00.000Z'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/AuthorizationError'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '409':
          description: Customer cannot be deleted (has active dependencies)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Cannot delete customer with active invoices or projects
                  code:
                    type: string
                    example: CUSTOMER_HAS_DEPENDENCIES
                  dependencies:
                    type: object
                    properties:
                      activeInvoices:
                        type: integer
                        example: 2
                      activeProjects:
                        type: integer
                        example: 1
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /organizations/{organizationId}/payments:
    post:
      tags:
        - Payments
      summary: Create a new payment
      description: |
        Create a new payment record for invoices with support for multiple payment methods
        including credit cards (Stripe), e-Transfer, cash, and bank transfers with automatic reconciliation.
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - invoiceId
                - amount
                - method
              properties:
                invoiceId:
                  type: string
                  format: uuid
                  description: Invoice ID for payment
                  example: 550e8400-e29b-41d4-a716-446655440000
                amount:
                  type: number
                  format: decimal
                  minimum: 0.01
                  description: Payment amount
                  example: 1500
                method:
                  $ref: '#/components/schemas/PaymentMethod'
                reference:
                  type: string
                  description: Payment reference (transaction ID, check number, etc.)
                  example: CHK-123456
                notes:
                  type: string
                  description: Payment notes
                  example: Partial payment - balance due in 30 days
                receivedDate:
                  type: string
                  format: date
                  description: Date payment was received (defaults to today)
                  example: '2024-01-15'
            examples:
              CashPayment:
                summary: Cash payment example
                value:
                  invoiceId: 550e8400-e29b-41d4-a716-446655440000
                  amount: 1500
                  method: CASH
                  reference: CASH-001
                  notes: Payment received in person
              ETransferPayment:
                summary: e-Transfer payment example
                value:
                  invoiceId: 550e8400-e29b-41d4-a716-446655440000
                  amount: 2500
                  method: E_TRANSFER
                  reference: ET-987654321
                  notes: Auto-deposited e-Transfer
      responses:
        '201':
          description: Payment created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Payment created successfully
                  payment:
                    $ref: '#/components/schemas/Payment'
              example:
                message: Payment created successfully
                payment:
                  id: 123e4567-e89b-12d3-a456-426614174000
                  amount: 1500
                  method: CASH
                  status: COMPLETED
                  reference: CASH-001
                  receivedDate: '2024-01-15'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/AuthorizationError'
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '409':
          description: Payment validation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Payment amount exceeds outstanding balance
                  code:
                    type: string
                    example: PAYMENT_EXCEEDS_BALANCE
                  details:
                    type: object
                    properties:
                      requestedAmount:
                        type: number
                        example: 2000
                      outstandingBalance:
                        type: number
                        example: 1500
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /organizations/{organizationId}/quotes:
    post:
      tags:
        - Quotes
      summary: Create a new quote
      description: |
        Create a new quote for a customer with line items, calculations, and business terms.
        This is the first step in the 8-stage customer lifecycle pipeline for project quotes.
      parameters:
        - $ref: '#/components/parameters/OrganizationId'
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - customerId
                - description
                - items
              properties:
                customerId:
                  type: string
                  format: uuid
                  description: Customer ID for the quote
                  example: 550e8400-e29b-41d4-a716-446655440000
                description:
                  type: string
                  description: Quote description/title
                  example: Website redesign and development
                validUntil:
                  type: string
                  format: date
                  description: Quote expiration date (default 30 days)
                  example: '2024-02-15'
                notes:
                  type: string
                  description: Internal notes
                  example: Customer requested modern design
                terms:
                  type: string
                  description: Quote terms and conditions
                  example: 25% deposit required, 15-day payment terms
                items:
                  type: array
                  minItems: 1
                  description: Quote line items
                  items:
                    type: object
                    required:
                      - description
                      - quantity
                      - unitPrice
                      - taxRate
                    properties:
                      description:
                        type: string
                        description: Item description
                        example: Frontend development
                      quantity:
                        type: number
                        format: decimal
                        minimum: 0.01
                        description: Item quantity
                        example: 40
                      unitPrice:
                        type: number
                        format: decimal
                        minimum: 0
                        description: Price per unit
                        example: 125
                      taxRate:
                        type: number
                        format: decimal
                        minimum: 0
                        maximum: 100
                        description: Tax rate percentage
                        example: 13
                      discountPercent:
                        type: number
                        format: decimal
                        minimum: 0
                        maximum: 100
                        description: Discount percentage
                        example: 5
            examples:
              WebsiteDevelopmentQuote:
                summary: Website development quote
                value:
                  customerId: 550e8400-e29b-41d4-a716-446655440000
                  description: E-commerce website development
                  validUntil: '2024-02-15'
                  terms: 25% deposit required, 15-day payment terms
                  items:
                    - description: Frontend development
                      quantity: 40
                      unitPrice: 125
                      taxRate: 13
                    - description: Backend API development
                      quantity: 30
                      unitPrice: 150
                      taxRate: 13
                      discountPercent: 10
      responses:
        '201':
          description: Quote created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Quote created successfully
                  quote:
                    $ref: '#/components/schemas/Quote'
              example:
                message: Quote created successfully
                quote:
                  id: 123e4567-e89b-12d3-a456-426614174000
                  quoteNumber: QUO-2024-001
                  status: DRAFT
                  description: E-commerce website development
                  subtotal: 9500
                  taxAmount: 1235
                  total: 10735
                  validUntil: '2024-02-15'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/AuthorizationError'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /payment-analytics/aging:
    get:
      tags:
        - Payment Analytics
      summary: Get payment aging report
      description: Generates accounts receivable aging report showing outstanding invoices categorized by days overdue, essential for collections management and financial reporting.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: asOfDate
          schema:
            type: string
            format: date
          description: Date for aging calculation (defaults to current date)
        - in: query
          name: customerId
          schema:
            type: string
          description: Filter by specific customer
        - in: query
          name: includeCredits
          schema:
            type: boolean
            default: true
          description: Whether to include customer credits in calculations
        - in: query
          name: agingBuckets
          schema:
            type: string
            enum:
              - standard
              - detailed
              - custom
            default: standard
          description: Aging bucket configuration (0-30, 31-60, 61-90, 90+)
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - customer_name
              - total_outstanding
              - days_overdue
              - last_payment
            default: total_outstanding
          description: Sort order for results
        - in: query
          name: minAmount
          schema:
            type: number
            format: float
            default: 0.01
          description: Minimum outstanding amount to include
      responses:
        '200':
          description: Payment aging report generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  reportMetadata:
                    type: object
                    properties:
                      asOfDate:
                        type: string
                        format: date
                        description: Date as of which aging is calculated
                      generatedAt:
                        type: string
                        format: date-time
                      totalCustomers:
                        type: integer
                        description: Total customers with outstanding balances
                      totalInvoices:
                        type: integer
                        description: Total outstanding invoices
                      reportCurrency:
                        type: string
                        example: CAD
                  agingSummary:
                    type: object
                    properties:
                      totalOutstanding:
                        type: number
                        format: float
                        description: Total outstanding receivables
                      current:
                        type: object
                        properties:
                          amount:
                            type: number
                            format: float
                          percentage:
                            type: number
                            format: float
                          invoiceCount:
                            type: integer
                        description: Current (0-30 days)
                      days31to60:
                        type: object
                        properties:
                          amount:
                            type: number
                            format: float
                          percentage:
                            type: number
                            format: float
                          invoiceCount:
                            type: integer
                        description: 31-60 days overdue
                      days61to90:
                        type: object
                        properties:
                          amount:
                            type: number
                            format: float
                          percentage:
                            type: number
                            format: float
                          invoiceCount:
                            type: integer
                        description: 61-90 days overdue
                      over90Days:
                        type: object
                        properties:
                          amount:
                            type: number
                            format: float
                          percentage:
                            type: number
                            format: float
                          invoiceCount:
                            type: integer
                        description: Over 90 days overdue
                  customerAging:
                    type: array
                    items:
                      type: object
                      properties:
                        customerId:
                          type: string
                        customerName:
                          type: string
                        customerEmail:
                          type: string
                        totalOutstanding:
                          type: number
                          format: float
                        current:
                          type: number
                          format: float
                        days31to60:
                          type: number
                          format: float
                        days61to90:
                          type: number
                          format: float
                        over90Days:
                          type: number
                          format: float
                        lastPaymentDate:
                          type: string
                          format: date
                        lastPaymentAmount:
                          type: number
                          format: float
                        oldestInvoiceDate:
                          type: string
                          format: date
                        daysSinceOldest:
                          type: integer
                        paymentHistory:
                          type: object
                          properties:
                            averagePaymentDays:
                              type: number
                              format: float
                            onTimePaymentRate:
                              type: number
                              format: float
                        creditLimit:
                          type: number
                          format: float
                        availableCredit:
                          type: number
                          format: float
                        riskLevel:
                          type: string
                          enum:
                            - LOW
                            - MEDIUM
                            - HIGH
                            - CRITICAL
                    description: Customer-by-customer aging breakdown
                  invoiceDetails:
                    type: array
                    items:
                      type: object
                      properties:
                        invoiceId:
                          type: string
                        invoiceNumber:
                          type: string
                        customerId:
                          type: string
                        customerName:
                          type: string
                        invoiceDate:
                          type: string
                          format: date
                        dueDate:
                          type: string
                          format: date
                        originalAmount:
                          type: number
                          format: float
                        outstandingAmount:
                          type: number
                          format: float
                        daysOverdue:
                          type: integer
                        agingBucket:
                          type: string
                          enum:
                            - CURRENT
                            - DAYS_31_60
                            - DAYS_61_90
                            - OVER_90
                        lastPaymentDate:
                          type: string
                          format: date
                        paymentTerms:
                          type: string
                        status:
                          type: string
                          enum:
                            - PENDING
                            - SENT
                            - VIEWED
                            - PAID
                            - OVERDUE
                            - CANCELLED
                    description: Individual invoice aging details
                  collectionsAnalysis:
                    type: object
                    properties:
                      urgentActions:
                        type: array
                        items:
                          type: object
                          properties:
                            customerId:
                              type: string
                            customerName:
                              type: string
                            amount:
                              type: number
                              format: float
                            daysOverdue:
                              type: integer
                            recommendedAction:
                              type: string
                            priority:
                              type: string
                              enum:
                                - LOW
                                - MEDIUM
                                - HIGH
                                - URGENT
                        description: Customers requiring immediate attention
                      collectionOpportunities:
                        type: object
                        properties:
                          high90Plus:
                            type: number
                            format: float
                            description: High-value accounts over 90 days
                          frequentLate:
                            type: integer
                            description: Customers with pattern of late payments
                          potentialWriteOffs:
                            type: number
                            format: float
                            description: Amount at risk of write-off
                      recommendations:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - FOLLOW_UP
                                - PAYMENT_PLAN
                                - COLLECTION_AGENCY
                                - WRITE_OFF
                                - CREDIT_HOLD
                            description:
                              type: string
                            priority:
                              type: string
                            estimatedImpact:
                              type: number
                              format: float
                  trendAnalysis:
                    type: object
                    properties:
                      monthOverMonth:
                        type: object
                        properties:
                          totalChange:
                            type: number
                            format: float
                          percentageChange:
                            type: number
                            format: float
                          trendDirection:
                            type: string
                            enum:
                              - IMPROVING
                              - WORSENING
                              - STABLE
                      yearOverYear:
                        type: object
                      dsoTrend:
                        type: object
                        properties:
                          currentDSO:
                            type: number
                            format: float
                            description: Current Days Sales Outstanding
                          previousDSO:
                            type: number
                            format: float
                          targetDSO:
                            type: number
                            format: float
                          variance:
                            type: number
                            format: float
        '400':
          description: Invalid query parameters
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '500':
          description: Internal server error
  /payment-analytics/cash-flow:
    get:
      tags:
        - Payment Analytics
      summary: Get cash flow projection
      description: Generates detailed cash flow projections based on outstanding invoices, payment patterns, and expected receipts for financial planning and liquidity management.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: projectionPeriod
          schema:
            type: string
            enum:
              - daily
              - weekly
              - monthly
            default: weekly
          description: Granularity of cash flow projection
        - in: query
          name: horizonDays
          schema:
            type: integer
            minimum: 7
            maximum: 365
            default: 90
          description: Number of days to project into the future
        - in: query
          name: includeOverdueInvoices
          schema:
            type: boolean
            default: true
          description: Whether to include overdue invoices in projections
        - in: query
          name: confidenceLevel
          schema:
            type: string
            enum:
              - conservative
              - moderate
              - optimistic
            default: moderate
          description: Confidence level for collection assumptions
        - in: query
          name: includeSeasonalAdjustments
          schema:
            type: boolean
            default: true
          description: Whether to apply seasonal adjustments
        - in: query
          name: accountForHolidays
          schema:
            type: boolean
            default: true
          description: Whether to account for holidays and business days
      responses:
        '200':
          description: Cash flow projection generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  projectionMetadata:
                    type: object
                    properties:
                      generatedAt:
                        type: string
                        format: date-time
                      projectionPeriod:
                        type: string
                      horizonDays:
                        type: integer
                      confidenceLevel:
                        type: string
                      lastUpdated:
                        type: string
                        format: date-time
                      dataQuality:
                        type: string
                        enum:
                          - HIGH
                          - MEDIUM
                          - LOW
                  currentPosition:
                    type: object
                    properties:
                      currentCashBalance:
                        type: number
                        format: float
                        description: Current available cash
                      outstandingReceivables:
                        type: number
                        format: float
                        description: Total outstanding receivables
                      overdueAmount:
                        type: number
                        format: float
                        description: Total overdue amount
                      nextExpectedReceipt:
                        type: object
                        properties:
                          amount:
                            type: number
                            format: float
                          expectedDate:
                            type: string
                            format: date
                          probability:
                            type: number
                            format: float
                  projectionSummary:
                    type: object
                    properties:
                      totalExpectedInflows:
                        type: number
                        format: float
                        description: Total expected cash inflows
                      projectedEndBalance:
                        type: number
                        format: float
                        description: Projected cash balance at end of period
                      minimumBalance:
                        type: number
                        format: float
                        description: Lowest projected balance during period
                      maximumBalance:
                        type: number
                        format: float
                        description: Highest projected balance during period
                      averageWeeklyInflow:
                        type: number
                        format: float
                  weeklyProjections:
                    type: array
                    items:
                      type: object
                      properties:
                        weekStarting:
                          type: string
                          format: date
                        weekEnding:
                          type: string
                          format: date
                        expectedInflows:
                          type: number
                          format: float
                        projectedBalance:
                          type: number
                          format: float
                        confidenceRange:
                          type: object
                          properties:
                            lower:
                              type: number
                              format: float
                            upper:
                              type: number
                              format: float
                        majorReceipts:
                          type: array
                          items:
                            type: object
                            properties:
                              customerId:
                                type: string
                              customerName:
                                type: string
                              amount:
                                type: number
                                format: float
                              expectedDate:
                                type: string
                                format: date
                              probability:
                                type: number
                                format: float
                              invoiceId:
                                type: string
                        riskFactors:
                          type: array
                          items:
                            type: string
                    description: Week-by-week cash flow projections
                  paymentPatternAnalysis:
                    type: object
                    properties:
                      averageCollectionDays:
                        type: number
                        format: float
                        description: Average days to collect payment
                      collectionEfficiency:
                        type: number
                        format: float
                        description: Collection efficiency percentage
                      seasonalFactors:
                        type: object
                        properties:
                          Q1Factor:
                            type: number
                            format: float
                          Q2Factor:
                            type: number
                            format: float
                          Q3Factor:
                            type: number
                            format: float
                          Q4Factor:
                            type: number
                            format: float
                      holidayImpact:
                        type: object
                        properties:
                          delayDays:
                            type: integer
                          affectedPeriods:
                            type: array
                            items:
                              type: string
                              format: date
                  riskAnalysis:
                    type: object
                    properties:
                      cashFlowRisks:
                        type: array
                        items:
                          type: object
                          properties:
                            riskType:
                              type: string
                              enum:
                                - CUSTOMER_DEFAULT
                                - SEASONAL_DOWNTURN
                                - ECONOMIC_FACTORS
                                - COLLECTION_DELAYS
                            impact:
                              type: string
                              enum:
                                - LOW
                                - MEDIUM
                                - HIGH
                                - CRITICAL
                            probability:
                              type: number
                              format: float
                            description:
                              type: string
                            mitigation:
                              type: string
                      stressTestScenarios:
                        type: object
                        properties:
                          bearCase:
                            type: object
                            properties:
                              projectedBalance:
                                type: number
                                format: float
                              shortfall:
                                type: number
                                format: float
                              description:
                                type: string
                          worstCase:
                            type: object
                  recommendations:
                    type: object
                    properties:
                      liquidityManagement:
                        type: array
                        items:
                          type: object
                          properties:
                            action:
                              type: string
                            priority:
                              type: string
                              enum:
                                - LOW
                                - MEDIUM
                                - HIGH
                                - URGENT
                            description:
                              type: string
                            estimatedImpact:
                              type: number
                              format: float
                      collectionActions:
                        type: array
                        items:
                          type: object
                      financingOptions:
                        type: array
                        items:
                          type: object
                          properties:
                            option:
                              type: string
                            amount:
                              type: number
                              format: float
                            cost:
                              type: number
                              format: float
                            timeframe:
                              type: string
                  alerts:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - LOW_BALANCE_WARNING
                            - NEGATIVE_PROJECTION
                            - LARGE_RECEIPT_DELAY
                            - SEASONAL_IMPACT
                        severity:
                          type: string
                          enum:
                            - INFO
                            - WARNING
                            - CRITICAL
                        date:
                          type: string
                          format: date
                        description:
                          type: string
                        recommendedAction:
                          type: string
                    description: Cash flow alerts and warnings
        '400':
          description: Invalid query parameters
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '422':
          description: Insufficient data for accurate projection
        '500':
          description: Internal server error
  /payment-analytics/customer-behavior:
    get:
      tags:
        - Payment Analytics
      summary: Get customer payment behavior analysis
      description: Analyzes customer payment patterns, timing, preferences, and risk factors to improve collections and customer relationship management.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: customerId
          schema:
            type: string
          description: Analyze specific customer (if not provided, analyzes all customers)
        - in: query
          name: period
          schema:
            type: string
            enum:
              - month
              - quarter
              - year
              - all
            default: year
          description: Analysis period
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: Start date for analysis (YYYY-MM-DD)
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: End date for analysis (YYYY-MM-DD)
        - in: query
          name: segmentBy
          schema:
            type: string
            enum:
              - PAYMENT_BEHAVIOR
              - AMOUNT_RANGE
              - FREQUENCY
              - RISK_LEVEL
            default: PAYMENT_BEHAVIOR
          description: How to segment customers
        - in: query
          name: includeRiskScoring
          schema:
            type: boolean
            default: true
          description: Whether to include risk scoring analysis
        - in: query
          name: minTransactions
          schema:
            type: integer
            default: 3
          description: Minimum transactions required for analysis
      responses:
        '200':
          description: Customer payment behavior analysis retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  analysisOverview:
                    type: object
                    properties:
                      totalCustomers:
                        type: integer
                        description: Total customers analyzed
                      analysisDate:
                        type: string
                        format: date-time
                      averageCustomerLifetime:
                        type: number
                        format: float
                        description: Average customer lifetime in months
                      totalTransactions:
                        type: integer
                      totalAmount:
                        type: number
                        format: float
                  behaviorSegments:
                    type: object
                    properties:
                      earlyPayers:
                        type: object
                        properties:
                          customerCount:
                            type: integer
                          percentage:
                            type: number
                            format: float
                          avgPaymentDays:
                            type: number
                            format: float
                          revenue:
                            type: number
                            format: float
                          riskScore:
                            type: string
                            enum:
                              - LOW
                              - MEDIUM
                              - HIGH
                      onTimePayers:
                        type: object
                      latePayers:
                        type: object
                        properties:
                          customerCount:
                            type: integer
                          percentage:
                            type: number
                            format: float
                          avgDelayDays:
                            type: number
                            format: float
                          revenue:
                            type: number
                            format: float
                          riskScore:
                            type: string
                      defaultRisk:
                        type: object
                      dormantCustomers:
                        type: object
                  paymentPatterns:
                    type: object
                    properties:
                      averagePaymentTime:
                        type: number
                        format: float
                        description: Average days to payment
                      paymentFrequency:
                        type: object
                        properties:
                          weekly:
                            type: integer
                          monthly:
                            type: integer
                          quarterly:
                            type: integer
                          irregular:
                            type: integer
                      preferredPaymentDays:
                        type: array
                        items:
                          type: object
                          properties:
                            day:
                              type: string
                            count:
                              type: integer
                            percentage:
                              type: number
                              format: float
                      seasonalBehavior:
                        type: object
                        properties:
                          Q1:
                            type: object
                            properties:
                              avgPaymentDays:
                                type: number
                                format: float
                              volume:
                                type: integer
                          Q2:
                            type: object
                          Q3:
                            type: object
                          Q4:
                            type: object
                  riskAnalysis:
                    type: object
                    properties:
                      riskDistribution:
                        type: object
                        properties:
                          LOW:
                            type: integer
                          MEDIUM:
                            type: integer
                          HIGH:
                            type: integer
                      riskFactors:
                        type: array
                        items:
                          type: object
                          properties:
                            factor:
                              type: string
                            weight:
                              type: number
                              format: float
                            description:
                              type: string
                      defaultProbability:
                        type: number
                        format: float
                        description: Overall default probability percentage
                  customerInsights:
                    type: array
                    items:
                      type: object
                      properties:
                        customerId:
                          type: string
                        customerName:
                          type: string
                        behaviorSegment:
                          type: string
                        riskScore:
                          type: string
                        avgPaymentDays:
                          type: number
                          format: float
                        totalPaid:
                          type: number
                          format: float
                        paymentCount:
                          type: integer
                        lastPaymentDate:
                          type: string
                          format: date
                        paymentReliability:
                          type: number
                          format: float
                          description: Reliability score (0-1)
                        preferredMethod:
                          type: string
                        recommendations:
                          type: array
                          items:
                            type: string
                    description: Individual customer insights (limited to top/problematic customers)
                  actionableInsights:
                    type: object
                    properties:
                      improvementOpportunities:
                        type: array
                        items:
                          type: object
                          properties:
                            opportunity:
                              type: string
                            impact:
                              type: string
                              enum:
                                - LOW
                                - MEDIUM
                                - HIGH
                            effort:
                              type: string
                              enum:
                                - LOW
                                - MEDIUM
                                - HIGH
                            description:
                              type: string
                      collectionsStrategy:
                        type: array
                        items:
                          type: string
                      customerRetention:
                        type: array
                        items:
                          type: string
        '400':
          description: Invalid query parameters
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '500':
          description: Internal server error
  /payment-analytics/forecast:
    get:
      tags:
        - Payment Analytics
      summary: Get payment forecast
      description: Generates predictive analytics for future payment expectations based on historical data, customer behavior, and market trends for financial planning.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: forecastPeriod
          schema:
            type: string
            enum:
              - week
              - month
              - quarter
              - year
            default: quarter
          description: Period to forecast
        - in: query
          name: forecastHorizon
          schema:
            type: integer
            minimum: 1
            maximum: 24
            default: 3
          description: Number of periods to forecast
        - in: query
          name: modelType
          schema:
            type: string
            enum:
              - LINEAR
              - EXPONENTIAL
              - SEASONAL
              - ARIMA
              - ENSEMBLE
            default: ENSEMBLE
          description: Forecasting model to use
        - in: query
          name: includeScenarios
          schema:
            type: boolean
            default: true
          description: Whether to include optimistic/pessimistic scenarios
        - in: query
          name: segmentBy
          schema:
            type: string
            enum:
              - TOTAL
              - CUSTOMER
              - PAYMENT_METHOD
              - INVOICE_TYPE
            default: TOTAL
          description: How to segment the forecast
        - in: query
          name: includeConfidenceIntervals
          schema:
            type: boolean
            default: true
          description: Whether to include confidence intervals
      responses:
        '200':
          description: Payment forecast generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  forecastMetadata:
                    type: object
                    properties:
                      generatedAt:
                        type: string
                        format: date-time
                      modelUsed:
                        type: string
                      accuracy:
                        type: number
                        format: float
                        description: Model accuracy based on historical validation
                      dataPoints:
                        type: integer
                        description: Number of historical data points used
                      lastUpdated:
                        type: string
                        format: date-time
                  baseForecast:
                    type: object
                    properties:
                      totalExpectedPayments:
                        type: number
                        format: float
                        description: Total expected payment amount
                      expectedTransactionCount:
                        type: integer
                        description: Expected number of transactions
                      averagePaymentAmount:
                        type: number
                        format: float
                      growthRate:
                        type: number
                        format: float
                        description: Expected growth rate percentage
                  periodForecasts:
                    type: array
                    items:
                      type: object
                      properties:
                        period:
                          type: string
                          description: Forecast period (e.g., "2024-Q2")
                        startDate:
                          type: string
                          format: date
                        endDate:
                          type: string
                          format: date
                        expectedAmount:
                          type: number
                          format: float
                        expectedTransactions:
                          type: integer
                        confidence:
                          type: number
                          format: float
                          description: Confidence level (0-1)
                        confidenceInterval:
                          type: object
                          properties:
                            lower:
                              type: number
                              format: float
                            upper:
                              type: number
                              format: float
                        seasonalFactor:
                          type: number
                          format: float
                          description: Seasonal adjustment factor
                    description: Period-by-period forecast details
                  scenarios:
                    type: object
                    properties:
                      optimistic:
                        type: object
                        properties:
                          totalAmount:
                            type: number
                            format: float
                          growthRate:
                            type: number
                            format: float
                          probability:
                            type: number
                            format: float
                          assumptions:
                            type: array
                            items:
                              type: string
                      pessimistic:
                        type: object
                        properties:
                          totalAmount:
                            type: number
                            format: float
                          growthRate:
                            type: number
                            format: float
                          probability:
                            type: number
                            format: float
                          riskFactors:
                            type: array
                            items:
                              type: string
                      mostLikely:
                        type: object
                        description: Most probable scenario
                  segmentForecasts:
                    type: object
                    properties:
                      byPaymentMethod:
                        type: object
                        properties:
                          CASH:
                            type: object
                            properties:
                              expectedAmount:
                                type: number
                                format: float
                              expectedTransactions:
                                type: integer
                              trend:
                                type: string
                                enum:
                                  - GROWING
                                  - STABLE
                                  - DECLINING
                          CHEQUE:
                            type: object
                          BANK_TRANSFER:
                            type: object
                          CREDIT_CARD:
                            type: object
                          STRIPE:
                            type: object
                      byCustomerSegment:
                        type: object
                        properties:
                          enterprise:
                            type: object
                          smallBusiness:
                            type: object
                          individual:
                            type: object
                  riskFactors:
                    type: array
                    items:
                      type: object
                      properties:
                        factor:
                          type: string
                        impact:
                          type: string
                          enum:
                            - LOW
                            - MEDIUM
                            - HIGH
                        probability:
                          type: number
                          format: float
                        description:
                          type: string
                    description: Identified risk factors that could affect forecast
                  recommendations:
                    type: object
                    properties:
                      cashFlowManagement:
                        type: array
                        items:
                          type: string
                      collectionStrategies:
                        type: array
                        items:
                          type: string
                      businessPlanning:
                        type: array
                        items:
                          type: string
                  modelPerformance:
                    type: object
                    properties:
                      historicalAccuracy:
                        type: number
                        format: float
                        description: Historical forecasting accuracy
                      lastValidation:
                        type: string
                        format: date
                      meanAbsoluteError:
                        type: number
                        format: float
                      nextModelUpdate:
                        type: string
                        format: date
        '400':
          description: Invalid query parameters
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '422':
          description: Insufficient historical data for forecasting
        '500':
          description: Internal server error
  /payment-analytics/fraud-alerts:
    get:
      tags:
        - Payment Analytics
      summary: Detect fraud alerts
      description: Analyzes payment patterns and transactions to identify potential fraudulent activities, suspicious behavior, and security risks for proactive fraud prevention.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: period
          schema:
            type: string
            enum:
              - day
              - week
              - month
            default: week
          description: Time period for fraud detection analysis
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: Start date for analysis (YYYY-MM-DD)
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: End date for analysis (YYYY-MM-DD)
        - in: query
          name: severityLevel
          schema:
            type: string
            enum:
              - LOW
              - MEDIUM
              - HIGH
              - CRITICAL
            default: MEDIUM
          description: Minimum severity level to include
        - in: query
          name: alertTypes
          schema:
            type: array
            items:
              type: string
              enum:
                - UNUSUAL_AMOUNT
                - RAPID_FREQUENCY
                - GEOGRAPHIC_ANOMALY
                - TIME_ANOMALY
                - PAYMENT_METHOD_ABUSE
                - DUPLICATE_DETECTION
          description: Specific types of fraud alerts to check
        - in: query
          name: includeResolved
          schema:
            type: boolean
            default: false
          description: Whether to include previously resolved alerts
        - in: query
          name: customerId
          schema:
            type: string
          description: Focus analysis on specific customer
      responses:
        '200':
          description: Fraud detection analysis completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  detectionMetadata:
                    type: object
                    properties:
                      analysisDate:
                        type: string
                        format: date-time
                      analysisRange:
                        type: object
                        properties:
                          startDate:
                            type: string
                            format: date
                          endDate:
                            type: string
                            format: date
                      transactionsAnalyzed:
                        type: integer
                        description: Total transactions analyzed
                      modelsUsed:
                        type: array
                        items:
                          type: string
                        description: Fraud detection models applied
                      lastModelUpdate:
                        type: string
                        format: date-time
                  alertSummary:
                    type: object
                    properties:
                      totalAlerts:
                        type: integer
                        description: Total fraud alerts detected
                      newAlerts:
                        type: integer
                        description: New alerts since last check
                      criticalAlerts:
                        type: integer
                        description: Critical severity alerts
                      averageRiskScore:
                        type: number
                        format: float
                        description: Average risk score (0-100)
                      estimatedExposure:
                        type: number
                        format: float
                        description: Estimated financial exposure
                  activeAlerts:
                    type: array
                    items:
                      type: object
                      properties:
                        alertId:
                          type: string
                          description: Unique alert identifier
                        alertType:
                          type: string
                          enum:
                            - UNUSUAL_AMOUNT
                            - RAPID_FREQUENCY
                            - GEOGRAPHIC_ANOMALY
                            - TIME_ANOMALY
                            - PAYMENT_METHOD_ABUSE
                            - DUPLICATE_DETECTION
                            - VELOCITY_CHECK
                            - BEHAVIORAL_ANOMALY
                          description: Type of fraud detected
                        severity:
                          type: string
                          enum:
                            - LOW
                            - MEDIUM
                            - HIGH
                            - CRITICAL
                        riskScore:
                          type: number
                          format: float
                          description: Risk score (0-100)
                        detectedAt:
                          type: string
                          format: date-time
                        customerId:
                          type: string
                        customerName:
                          type: string
                        transactionId:
                          type: string
                        paymentMethod:
                          type: string
                        amount:
                          type: number
                          format: float
                        suspiciousIndicators:
                          type: array
                          items:
                            type: object
                            properties:
                              indicator:
                                type: string
                              value:
                                type: string
                              threshold:
                                type: string
                              severity:
                                type: string
                        description:
                          type: string
                          description: Detailed description of the alert
                        recommendedActions:
                          type: array
                          items:
                            type: string
                        status:
                          type: string
                          enum:
                            - NEW
                            - INVESTIGATING
                            - CONFIRMED
                            - FALSE_POSITIVE
                            - RESOLVED
                        assignedTo:
                          type: string
                          description: User assigned to investigate
                        relatedAlerts:
                          type: array
                          items:
                            type: string
                          description: Related alert IDs
                    description: Active fraud alerts requiring attention
                  patternAnalysis:
                    type: object
                    properties:
                      suspiciousPatterns:
                        type: array
                        items:
                          type: object
                          properties:
                            patternType:
                              type: string
                              enum:
                                - CARD_TESTING
                                - ACCOUNT_TAKEOVER
                                - SYNTHETIC_IDENTITY
                                - FRIENDLY_FRAUD
                                - MERCHANT_FRAUD
                            frequency:
                              type: integer
                            confidence:
                              type: number
                              format: float
                            description:
                              type: string
                            affectedCustomers:
                              type: integer
                            totalAmount:
                              type: number
                              format: float
                      geographicAnomalies:
                        type: array
                        items:
                          type: object
                          properties:
                            location:
                              type: string
                            unusualActivity:
                              type: string
                            riskLevel:
                              type: string
                      timeAnomalies:
                        type: array
                        items:
                          type: object
                          properties:
                            timePattern:
                              type: string
                            deviation:
                              type: string
                            frequency:
                              type: integer
                  riskMetrics:
                    type: object
                    properties:
                      overallRiskLevel:
                        type: string
                        enum:
                          - LOW
                          - MEDIUM
                          - HIGH
                          - CRITICAL
                      fraudRate:
                        type: number
                        format: float
                        description: Fraud rate percentage
                      falsePositiveRate:
                        type: number
                        format: float
                        description: False positive rate percentage
                      detectionAccuracy:
                        type: number
                        format: float
                        description: Model detection accuracy
                      averageDetectionTime:
                        type: number
                        format: float
                        description: Average time to detect fraud (hours)
                  preventionMetrics:
                    type: object
                    properties:
                      blockedTransactions:
                        type: integer
                        description: Transactions blocked due to fraud detection
                      savedAmount:
                        type: number
                        format: float
                        description: Estimated amount saved from fraud prevention
                      falseBlocks:
                        type: integer
                        description: Legitimate transactions incorrectly blocked
                      customerImpact:
                        type: object
                        properties:
                          affectedCustomers:
                            type: integer
                          customerComplaints:
                            type: integer
                          resolutionTime:
                            type: number
                            format: float
                            description: Average resolution time in hours
                  recommendations:
                    type: object
                    properties:
                      immediate:
                        type: array
                        items:
                          type: object
                          properties:
                            action:
                              type: string
                            priority:
                              type: string
                              enum:
                                - LOW
                                - MEDIUM
                                - HIGH
                                - URGENT
                            description:
                              type: string
                            estimatedImpact:
                              type: string
                        description: Immediate actions required
                      preventive:
                        type: array
                        items:
                          type: object
                        description: Preventive measures to implement
                      systemImprovements:
                        type: array
                        items:
                          type: object
                        description: System and process improvements
                  compliance:
                    type: object
                    properties:
                      reportingRequired:
                        type: boolean
                        description: Whether regulatory reporting is required
                      regulatoryAlerts:
                        type: array
                        items:
                          type: object
                          properties:
                            regulation:
                              type: string
                            requirement:
                              type: string
                            deadline:
                              type: string
                              format: date
                      auditTrail:
                        type: object
                        properties:
                          documented:
                            type: boolean
                          retentionPeriod:
                            type: string
                          accessLog:
                            type: array
                            items:
                              type: object
        '400':
          description: Invalid query parameters
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Requires Admin or Manager role
        '500':
          description: Internal server error
  /payment-analytics/methods:
    get:
      tags:
        - Payment Analytics
      summary: Get payment method analytics
      description: Analyzes payment method usage patterns, preferences, success rates, and processing costs to optimize payment acceptance strategies.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: period
          schema:
            type: string
            enum:
              - week
              - month
              - quarter
              - year
            default: month
          description: Analysis period
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: Start date for analysis (YYYY-MM-DD)
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: End date for analysis (YYYY-MM-DD)
        - in: query
          name: customerId
          schema:
            type: string
          description: Filter for specific customer
        - in: query
          name: includeProcessingCosts
          schema:
            type: boolean
            default: true
          description: Whether to include processing cost analysis
        - in: query
          name: includeFailureAnalysis
          schema:
            type: boolean
            default: true
          description: Whether to include failure rate analysis
      responses:
        '200':
          description: Payment method analytics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    type: object
                    properties:
                      totalTransactions:
                        type: integer
                        description: Total payment transactions analyzed
                      totalAmount:
                        type: number
                        format: float
                        description: Total payment amount
                      uniquePaymentMethods:
                        type: integer
                        description: Number of different payment methods used
                      analysisComplete:
                        type: boolean
                        description: Whether analysis completed successfully
                  methodBreakdown:
                    type: object
                    properties:
                      CASH:
                        type: object
                        properties:
                          transactions:
                            type: integer
                          amount:
                            type: number
                            format: float
                          percentage:
                            type: number
                            format: float
                          averageAmount:
                            type: number
                            format: float
                          successRate:
                            type: number
                            format: float
                          processingCost:
                            type: number
                            format: float
                          processingTime:
                            type: number
                            format: float
                            description: Average processing time in hours
                          customerPreference:
                            type: number
                            format: float
                            description: Customer preference score (0-1)
                      CHEQUE:
                        type: object
                        properties:
                          transactions:
                            type: integer
                          amount:
                            type: number
                            format: float
                          percentage:
                            type: number
                            format: float
                          averageAmount:
                            type: number
                            format: float
                          successRate:
                            type: number
                            format: float
                          bounceRate:
                            type: number
                            format: float
                          processingCost:
                            type: number
                            format: float
                          clearingTime:
                            type: number
                            format: float
                            description: Average clearing time in days
                      BANK_TRANSFER:
                        type: object
                      CREDIT_CARD:
                        type: object
                      PAYPAL:
                        type: object
                      STRIPE:
                        type: object
                        properties:
                          transactions:
                            type: integer
                          amount:
                            type: number
                            format: float
                          percentage:
                            type: number
                            format: float
                          averageAmount:
                            type: number
                            format: float
                          successRate:
                            type: number
                            format: float
                          declineRate:
                            type: number
                            format: float
                          chargebackRate:
                            type: number
                            format: float
                          processingFee:
                            type: number
                            format: float
                          settlementTime:
                            type: number
                            format: float
                            description: Settlement time in days
                      OTHER:
                        type: object
                  trends:
                    type: object
                    properties:
                      growingMethods:
                        type: array
                        items:
                          type: object
                          properties:
                            method:
                              type: string
                            growthRate:
                              type: number
                              format: float
                      decliningMethods:
                        type: array
                        items:
                          type: object
                      seasonalPatterns:
                        type: object
                        description: Seasonal usage patterns by method
                  costAnalysis:
                    type: object
                    properties:
                      totalProcessingCosts:
                        type: number
                        format: float
                      costByMethod:
                        type: object
                      costPerTransaction:
                        type: number
                        format: float
                      costOptimizationPotential:
                        type: number
                        format: float
                        description: Potential cost savings from optimization
                  performanceMetrics:
                    type: object
                    properties:
                      overallSuccessRate:
                        type: number
                        format: float
                      averageProcessingTime:
                        type: number
                        format: float
                      customerSatisfactionScore:
                        type: number
                        format: float
                      disputeRate:
                        type: number
                        format: float
                  recommendations:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - PROMOTE_METHOD
                            - DISCOURAGE_METHOD
                            - OPTIMIZE_PROCESSING
                            - REDUCE_COSTS
                        method:
                          type: string
                        description:
                          type: string
                        potentialImpact:
                          type: string
                          enum:
                            - LOW
                            - MEDIUM
                            - HIGH
                        estimatedSavings:
                          type: number
                          format: float
        '400':
          description: Invalid query parameters
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '500':
          description: Internal server error
  /payment-analytics/trends:
    get:
      tags:
        - Payment Analytics
      summary: Get payment trends analysis
      description: Retrieves comprehensive payment trends data including volume, amounts, seasonality patterns, and growth metrics for business intelligence and forecasting.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: period
          schema:
            type: string
            enum:
              - day
              - week
              - month
              - quarter
              - year
            default: month
          description: Time period granularity for trend analysis
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: Start date for analysis (YYYY-MM-DD)
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: End date for analysis (YYYY-MM-DD)
        - in: query
          name: customerId
          schema:
            type: string
          description: Filter trends for specific customer
        - in: query
          name: paymentMethod
          schema:
            type: string
            enum:
              - CASH
              - CHEQUE
              - BANK_TRANSFER
              - CREDIT_CARD
              - PAYPAL
              - STRIPE
              - OTHER
          description: Filter by payment method
        - in: query
          name: includeForecasting
          schema:
            type: boolean
            default: false
          description: Whether to include forecasting data
        - in: query
          name: compareToBaseline
          schema:
            type: boolean
            default: true
          description: Whether to compare to baseline/previous period
      responses:
        '200':
          description: Payment trends retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  analysisMetadata:
                    type: object
                    properties:
                      period:
                        type: string
                      startDate:
                        type: string
                        format: date
                      endDate:
                        type: string
                        format: date
                      dataPoints:
                        type: integer
                        description: Number of data points in analysis
                      lastUpdated:
                        type: string
                        format: date-time
                  overallTrends:
                    type: object
                    properties:
                      totalPayments:
                        type: integer
                        description: Total number of payments in period
                      totalAmount:
                        type: number
                        format: float
                        description: Total payment amount
                      averagePayment:
                        type: number
                        format: float
                        description: Average payment amount
                      growthRate:
                        type: number
                        format: float
                        description: Period-over-period growth rate percentage
                      trendDirection:
                        type: string
                        enum:
                          - UPWARD
                          - DOWNWARD
                          - STABLE
                          - VOLATILE
                        description: Overall trend direction
                  timeSeries:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        paymentCount:
                          type: integer
                        paymentAmount:
                          type: number
                          format: float
                        averageAmount:
                          type: number
                          format: float
                        cumulativeAmount:
                          type: number
                          format: float
                    description: Time series data points
                  seasonalityAnalysis:
                    type: object
                    properties:
                      hasSeasonality:
                        type: boolean
                        description: Whether seasonal patterns were detected
                      peakPeriods:
                        type: array
                        items:
                          type: object
                          properties:
                            period:
                              type: string
                            avgIncrease:
                              type: number
                              format: float
                      lowPeriods:
                        type: array
                        items:
                          type: object
                      seasonalityStrength:
                        type: number
                        format: float
                        description: Strength of seasonal pattern (0-1)
                  paymentMethodBreakdown:
                    type: object
                    properties:
                      CASH:
                        type: object
                        properties:
                          count:
                            type: integer
                          amount:
                            type: number
                            format: float
                          percentage:
                            type: number
                            format: float
                          trend:
                            type: string
                      CHEQUE:
                        type: object
                      BANK_TRANSFER:
                        type: object
                      CREDIT_CARD:
                        type: object
                      STRIPE:
                        type: object
                      OTHER:
                        type: object
                  insights:
                    type: object
                    properties:
                      keyFindings:
                        type: array
                        items:
                          type: string
                        description: Key insights from the analysis
                      recommendations:
                        type: array
                        items:
                          type: string
                        description: Business recommendations
                      anomalies:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              format: date
                            description:
                              type: string
                            severity:
                              type: string
                              enum:
                                - LOW
                                - MEDIUM
                                - HIGH
                        description: Detected anomalies in payment patterns
                  forecasting:
                    type: object
                    properties:
                      nextPeriodPrediction:
                        type: object
                        properties:
                          expectedPayments:
                            type: integer
                          expectedAmount:
                            type: number
                            format: float
                          confidenceInterval:
                            type: object
                            properties:
                              lower:
                                type: number
                                format: float
                              upper:
                                type: number
                                format: float
                      modelAccuracy:
                        type: number
                        format: float
                        description: Forecasting model accuracy percentage
        '400':
          description: Invalid query parameters
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '500':
          description: Internal server error
  /payments:
    post:
      tags:
        - Payments
      summary: Create a manual payment record
      description: |
        Creates a manual payment record for cash, check, bank transfer, or other non-Stripe payment methods.
        Automatically updates related invoice status and handles payment allocation. Requires Admin, Manager,
        Accountant, or Employee role.

        **Payment Processing Workflow:**
        - Validates payment method and amount against invoice
        - Creates payment record with transaction reference
        - Updates invoice status (PAID if full payment, PARTIAL if partial)
        - Generates audit trail for payment transaction
        - Handles currency conversion if needed
        - Calculates and records processing fees

        **Supported Payment Methods:**
        - CASH: Physical cash payments
        - CHECK: Bank checks with check number
        - BANK_TRANSFER: Wire transfers and ACH
        - CREDIT_CARD: Manual card processing
        - PAYPAL: PayPal transactions
        - OTHER: Custom payment methods

        **Security Measures:**
        - Role-based access control
        - Payment amount validation
        - Transaction reference verification
        - Audit logging for compliance
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - invoiceId
                - amount
                - method
              properties:
                invoiceId:
                  type: string
                  description: Invoice ID this payment is for
                  example: inv_1234567890
                amount:
                  type: number
                  format: float
                  description: Payment amount (must be positive)
                  minimum: 0.01
                  example: 2500
                method:
                  type: string
                  enum:
                    - CASH
                    - CHECK
                    - BANK_TRANSFER
                    - CREDIT_CARD
                    - PAYPAL
                    - STRIPE
                    - OTHER
                  description: Payment method used
                  example: CHECK
                transactionId:
                  type: string
                  description: External transaction reference (check number, transfer ID, etc.)
                  example: CHK-001234
                notes:
                  type: string
                  description: Additional payment notes
                  example: 'Check #1234 deposited on 2024-01-15'
                currency:
                  type: string
                  description: Payment currency (defaults to USD)
                  default: USD
                  example: USD
                processingFee:
                  type: number
                  format: float
                  description: Processing fee charged (optional)
                  example: 25
                exchangeRate:
                  type: number
                  format: float
                  description: Exchange rate if different currency
                  example: 1
                paymentDate:
                  type: string
                  format: date
                  description: Date payment was received (defaults to today)
                  example: '2024-01-15'
      responses:
        '201':
          description: Payment created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Payment ID
                    example: pay_1234567890
                  invoiceId:
                    type: string
                    example: inv_1234567890
                  amount:
                    type: number
                    format: float
                    example: 2500
                  method:
                    type: string
                    example: CHECK
                  status:
                    type: string
                    enum:
                      - PENDING
                      - PROCESSING
                      - COMPLETED
                      - FAILED
                      - REFUNDED
                      - CANCELLED
                    example: COMPLETED
                  transactionId:
                    type: string
                    example: CHK-001234
                  currency:
                    type: string
                    example: USD
                  processingFee:
                    type: number
                    format: float
                    example: 0
                  paymentDate:
                    type: string
                    format: date
                    example: '2024-01-15'
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  invoice:
                    type: object
                    description: Updated invoice information
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                        example: PAID
                      remainingBalance:
                        type: number
                        format: float
                        example: 0
        '400':
          description: Invalid payment data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Payment amount exceeds invoice balance
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Invoice not found
        '422':
          description: Invalid payment method or amount
        '500':
          description: Internal server error
    get:
      tags:
        - Payments
      summary: List payments with filtering and pagination
      description: |
        Retrieves a paginated list of payments with comprehensive filtering options.
        Supports filtering by status, method, date range, customer, and invoice.
        Available to all authenticated users with role-based data access.

        **Filtering Capabilities:**
        - Filter by payment status (PENDING, COMPLETED, FAILED, etc.)
        - Filter by payment method (CASH, CHECK, STRIPE, etc.)
        - Date range filtering for payment dates
        - Customer-specific payment history
        - Invoice-related payments
        - Amount range filtering
        - Currency-based filtering

        **Business Use Cases:**
        - Daily payment reconciliation reports
        - Customer payment history analysis
        - Payment method performance tracking
        - Failed payment investigation
        - Financial reporting and analytics
        - Compliance audit trail generation

        **Security Features:**
        - Role-based data filtering
        - Pagination to prevent data overload
        - Sensitive data protection
        - Audit logging for access tracking
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
          example: 1
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Number of payments per page
          example: 25
        - in: query
          name: status
          schema:
            type: string
            enum:
              - PENDING
              - PROCESSING
              - COMPLETED
              - FAILED
              - REFUNDED
              - CANCELLED
          description: Filter by payment status
          example: COMPLETED
        - in: query
          name: method
          schema:
            type: string
            enum:
              - CASH
              - CHECK
              - BANK_TRANSFER
              - CREDIT_CARD
              - PAYPAL
              - STRIPE
              - OTHER
          description: Filter by payment method
          example: STRIPE
        - in: query
          name: customerId
          schema:
            type: string
          description: Filter by customer ID
          example: cus_1234567890
        - in: query
          name: invoiceId
          schema:
            type: string
          description: Filter by invoice ID
          example: inv_1234567890
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: Start date for payment date range filter
          example: '2024-01-01'
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: End date for payment date range filter
          example: '2024-01-31'
        - in: query
          name: minAmount
          schema:
            type: number
            format: float
            minimum: 0
          description: Minimum payment amount filter
          example: 100
        - in: query
          name: maxAmount
          schema:
            type: number
            format: float
          description: Maximum payment amount filter
          example: 5000
        - in: query
          name: currency
          schema:
            type: string
          description: Filter by payment currency
          example: USD
        - in: query
          name: search
          schema:
            type: string
          description: Search in transaction IDs, notes, and references
          example: CHK-001
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - paymentDate
              - amount
              - createdAt
              - updatedAt
              - status
            default: createdAt
          description: Field to sort by
          example: paymentDate
        - in: query
          name: sortOrder
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          description: Sort order (ascending or descending)
          example: desc
        - in: query
          name: includeRefunds
          schema:
            type: boolean
            default: true
          description: Include refund information in response
          example: true
      responses:
        '200':
          description: Payments retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: pay_1234567890
                        invoiceId:
                          type: string
                          example: inv_1234567890
                        amount:
                          type: number
                          format: float
                          example: 2500
                        method:
                          type: string
                          example: STRIPE
                        status:
                          type: string
                          example: COMPLETED
                        transactionId:
                          type: string
                          example: txn_1234567890
                        currency:
                          type: string
                          example: USD
                        paymentDate:
                          type: string
                          format: date
                          example: '2024-01-15'
                        processingFee:
                          type: number
                          format: float
                          example: 72.55
                        createdAt:
                          type: string
                          format: date-time
                        customer:
                          type: object
                          properties:
                            id:
                              type: string
                              example: cus_1234567890
                            name:
                              type: string
                              example: John Doe
                            email:
                              type: string
                              example: john@example.com
                        invoice:
                          type: object
                          properties:
                            id:
                              type: string
                              example: inv_1234567890
                            invoiceNumber:
                              type: string
                              example: INV-2024-001
                            total:
                              type: number
                              format: float
                              example: 2700
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                        example: 1
                      limit:
                        type: integer
                        example: 25
                      total:
                        type: integer
                        example: 156
                      pages:
                        type: integer
                        example: 7
                      hasNext:
                        type: boolean
                        example: true
                      hasPrev:
                        type: boolean
                        example: false
                  summary:
                    type: object
                    description: Summary statistics for filtered payments
                    properties:
                      totalAmount:
                        type: number
                        format: float
                        example: 125000
                      averageAmount:
                        type: number
                        format: float
                        example: 2500
                      count:
                        type: integer
                        example: 50
                      byStatus:
                        type: object
                        properties:
                          COMPLETED:
                            type: integer
                            example: 45
                          PENDING:
                            type: integer
                            example: 3
                          FAILED:
                            type: integer
                            example: 2
                      byMethod:
                        type: object
                        properties:
                          STRIPE:
                            type: integer
                            example: 30
                          CHECK:
                            type: integer
                            example: 15
                          CASH:
                            type: integer
                            example: 5
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid date range: startDate must be before endDate'
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '500':
          description: Internal server error
  /payments/stats/summary:
    get:
      tags:
        - Payments
      summary: Get payment statistics and analytics
      description: |
        Retrieves comprehensive payment statistics and analytics including totals, averages,
        trends, and breakdowns by various dimensions. Available to all authenticated users
        with data filtered based on role permissions.

        **Statistical Analysis Includes:**
        - Total payment volume and count over specified periods
        - Payment method distribution and performance metrics
        - Payment status breakdowns and success rates
        - Geographic and currency analysis
        - Processing fee analysis and optimization insights
        - Monthly/quarterly trend analysis
        - Customer payment behavior patterns

        **Business Intelligence Features:**
        - Revenue trend analysis for financial planning
        - Payment method optimization recommendations
        - Failed payment analysis for process improvement
        - Seasonal payment pattern identification
        - Customer segment payment preferences
        - Processing cost optimization insights

        **Reporting Capabilities:**
        - Export-ready summary data
        - Dashboard-compatible metrics
        - Compliance reporting data
        - Performance benchmarking
        - Forecasting data points

        **Security & Privacy:**
        - Role-based data aggregation
        - Anonymized customer data in statistics
        - Secure statistical computation
        - Audit trail for data access
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          description: Start date for statistics period
          example: '2024-01-01'
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          description: End date for statistics period
          example: '2024-01-31'
        - in: query
          name: groupBy
          schema:
            type: string
            enum:
              - day
              - week
              - month
              - quarter
              - year
            default: month
          description: Time period grouping for trend analysis
          example: month
        - in: query
          name: currency
          schema:
            type: string
          description: Filter statistics by currency
          example: USD
        - in: query
          name: includeRefunds
          schema:
            type: boolean
            default: true
          description: Include refund data in statistics
          example: true
        - in: query
          name: includeProcessingFees
          schema:
            type: boolean
            default: true
          description: Include processing fee analysis
          example: true
        - in: query
          name: customerId
          schema:
            type: string
          description: Filter statistics for specific customer
          example: cus_1234567890
      responses:
        '200':
          description: Payment statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  period:
                    type: object
                    description: Statistics period information
                    properties:
                      startDate:
                        type: string
                        format: date
                        example: '2024-01-01'
                      endDate:
                        type: string
                        format: date
                        example: '2024-01-31'
                      groupBy:
                        type: string
                        example: month
                  totals:
                    type: object
                    description: Overall payment totals
                    properties:
                      totalAmount:
                        type: number
                        format: float
                        description: Total payment amount in base currency
                        example: 2500000
                      totalCount:
                        type: integer
                        description: Total number of payments
                        example: 1250
                      averageAmount:
                        type: number
                        format: float
                        description: Average payment amount
                        example: 2000
                      medianAmount:
                        type: number
                        format: float
                        description: Median payment amount
                        example: 1500
                      totalProcessingFees:
                        type: number
                        format: float
                        description: Total processing fees
                        example: 67500
                      netAmount:
                        type: number
                        format: float
                        description: Net amount after fees
                        example: 2432500
                  byStatus:
                    type: object
                    description: Payment breakdown by status
                    properties:
                      COMPLETED:
                        type: object
                        properties:
                          count:
                            type: integer
                            example: 1150
                          amount:
                            type: number
                            format: float
                            example: 2300000
                          percentage:
                            type: number
                            format: float
                            example: 92
                      PENDING:
                        type: object
                        properties:
                          count:
                            type: integer
                            example: 50
                          amount:
                            type: number
                            format: float
                            example: 100000
                          percentage:
                            type: number
                            format: float
                            example: 4
                      FAILED:
                        type: object
                        properties:
                          count:
                            type: integer
                            example: 30
                          amount:
                            type: number
                            format: float
                            example: 60000
                          percentage:
                            type: number
                            format: float
                            example: 2.4
                      REFUNDED:
                        type: object
                        properties:
                          count:
                            type: integer
                            example: 20
                          amount:
                            type: number
                            format: float
                            example: 40000
                          percentage:
                            type: number
                            format: float
                            example: 1.6
                  byMethod:
                    type: object
                    description: Payment breakdown by method
                    properties:
                      STRIPE:
                        type: object
                        properties:
                          count:
                            type: integer
                            example: 800
                          amount:
                            type: number
                            format: float
                            example: 1800000
                          averageAmount:
                            type: number
                            format: float
                            example: 2250
                          successRate:
                            type: number
                            format: float
                            example: 95.5
                      CHECK:
                        type: object
                        properties:
                          count:
                            type: integer
                            example: 250
                          amount:
                            type: number
                            format: float
                            example: 500000
                          averageAmount:
                            type: number
                            format: float
                            example: 2000
                          successRate:
                            type: number
                            format: float
                            example: 98
                      CASH:
                        type: object
                        properties:
                          count:
                            type: integer
                            example: 150
                          amount:
                            type: number
                            format: float
                            example: 150000
                          averageAmount:
                            type: number
                            format: float
                            example: 1000
                          successRate:
                            type: number
                            format: float
                            example: 100
                      BANK_TRANSFER:
                        type: object
                        properties:
                          count:
                            type: integer
                            example: 50
                          amount:
                            type: number
                            format: float
                            example: 50000
                          averageAmount:
                            type: number
                            format: float
                            example: 1000
                          successRate:
                            type: number
                            format: float
                            example: 96
                  trends:
                    type: array
                    description: Time-based payment trends
                    items:
                      type: object
                      properties:
                        period:
                          type: string
                          description: Time period (format depends on groupBy)
                          example: 2024-01
                        count:
                          type: integer
                          example: 125
                        amount:
                          type: number
                          format: float
                          example: 250000
                        averageAmount:
                          type: number
                          format: float
                          example: 2000
                        successRate:
                          type: number
                          format: float
                          example: 94.5
                  topCustomers:
                    type: array
                    description: Top customers by payment volume
                    items:
                      type: object
                      properties:
                        customerId:
                          type: string
                          example: cus_1234567890
                        customerName:
                          type: string
                          example: John Doe
                        totalAmount:
                          type: number
                          format: float
                          example: 50000
                        paymentCount:
                          type: integer
                          example: 25
                        averageAmount:
                          type: number
                          format: float
                          example: 2000
                  processingFees:
                    type: object
                    description: Processing fee analysis
                    properties:
                      totalFees:
                        type: number
                        format: float
                        example: 67500
                      averageFeeRate:
                        type: number
                        format: float
                        description: Average fee rate as percentage
                        example: 2.7
                      feesByMethod:
                        type: object
                        properties:
                          STRIPE:
                            type: number
                            format: float
                            example: 54000
                          PAYPAL:
                            type: number
                            format: float
                            example: 13500
                  insights:
                    type: object
                    description: AI-generated insights and recommendations
                    properties:
                      recommendations:
                        type: array
                        items:
                          type: string
                        example:
                          - Consider promoting bank transfers to reduce processing fees
                          - Investigate high failure rate for credit card payments
                      trends:
                        type: array
                        items:
                          type: string
                        example:
                          - Payment volume increased 15% compared to previous period
                          - Stripe adoption growing 25% month-over-month
                  generatedAt:
                    type: string
                    format: date-time
                    description: Statistics generation timestamp
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Invalid date range: endDate must be after startDate'
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '500':
          description: Internal server error
  /payments/stripe:
    post:
      tags:
        - Payments
      summary: Create Stripe payment intent
      description: |
        Creates a Stripe payment intent for credit card processing. This enables secure card payments
        through Stripe's payment gateway with PCI compliance. Requires Admin, Manager, Accountant, or Employee role.

        **Stripe Integration Features:**
        - Creates secure payment intent with client secret
        - Supports 3D Secure authentication when required
        - Handles payment method attachment and confirmation
        - Automatic webhook processing for status updates
        - PCI compliant payment processing
        - Multi-currency support through Stripe

        **Payment Flow:**
        1. Create payment intent with invoice metadata
        2. Return client secret for frontend processing
        3. Customer completes payment on frontend
        4. Stripe webhook confirms payment status
        5. Invoice status automatically updated

        **Security & Compliance:**
        - PCI DSS Level 1 compliance through Stripe
        - No sensitive card data stored locally
        - Secure payment intent validation
        - Fraud detection and prevention
        - Transaction monitoring and alerts
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - invoiceId
                - amount
              properties:
                invoiceId:
                  type: string
                  description: Invoice ID for payment intent
                  example: inv_1234567890
                amount:
                  type: number
                  format: float
                  description: Payment amount in dollars
                  minimum: 0.5
                  example: 2500
                currency:
                  type: string
                  description: Payment currency (defaults to USD)
                  default: USD
                  enum:
                    - USD
                    - EUR
                    - GBP
                    - CAD
                    - AUD
                  example: USD
                paymentMethodTypes:
                  type: array
                  description: Allowed payment methods
                  items:
                    type: string
                    enum:
                      - card
                      - us_bank_account
                      - link
                  default:
                    - card
                  example:
                    - card
                automaticPaymentMethods:
                  type: boolean
                  description: Enable automatic payment method detection
                  default: true
                  example: true
                captureMethod:
                  type: string
                  enum:
                    - automatic
                    - manual
                  description: When to capture the payment
                  default: automatic
                  example: automatic
                confirmationMethod:
                  type: string
                  enum:
                    - automatic
                    - manual
                  description: How to confirm the payment
                  default: manual
                  example: manual
                description:
                  type: string
                  description: Payment description for Stripe dashboard
                  example: Payment for Invoice INV-2024-001
                metadata:
                  type: object
                  description: Additional metadata for the payment
                  properties:
                    customerId:
                      type: string
                      example: cus_1234567890
                    orderNumber:
                      type: string
                      example: ORD-001
      responses:
        '201':
          description: Payment intent created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  paymentIntentId:
                    type: string
                    description: Stripe payment intent ID
                    example: pi_1234567890abcdef
                  clientSecret:
                    type: string
                    description: Client secret for frontend confirmation
                    example: pi_1234567890abcdef_secret_xyz
                  amount:
                    type: number
                    format: float
                    example: 2500
                  currency:
                    type: string
                    example: usd
                  status:
                    type: string
                    enum:
                      - requires_payment_method
                      - requires_confirmation
                      - requires_action
                      - processing
                      - requires_capture
                      - canceled
                      - succeeded
                    example: requires_payment_method
                  invoiceId:
                    type: string
                    example: inv_1234567890
                  paymentId:
                    type: string
                    description: Internal payment record ID
                    example: pay_1234567890
                  nextAction:
                    type: object
                    description: Next action required (if any)
                  ephemeralKey:
                    type: string
                    description: Ephemeral key for mobile SDK (if requested)
                  customer:
                    type: string
                    description: Stripe customer ID
                    example: cus_1234567890
        '400':
          description: Invalid payment intent data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Amount must be at least $0.50
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Invoice not found
        '422':
          description: Payment intent creation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invoice already paid
        '500':
          description: Stripe API error or internal server error
  /payments/webhook/stripe:
    post:
      tags:
        - Payments
      summary: Handle Stripe webhook events
      description: |
        Processes Stripe webhook events for payment status updates. This endpoint does not require authentication
        as it uses Stripe's signature validation for security. Handles payment intents status changes,
        automatic invoice updates, and payment reconciliation.

        **Security Features:**
        - Webhook signature validation using Stripe's signing secret
        - Request payload verification and timestamp checking
        - Idempotency handling for duplicate events
        - Secure processing of payment status changes

        **Supported Webhook Events:**
        - payment_intent.succeeded: Payment completed successfully
        - payment_intent.payment_failed: Payment failed
        - payment_intent.requires_action: Additional action required
        - payment_intent.canceled: Payment was canceled
        - charge.dispute.created: Chargeback/dispute initiated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Stripe webhook event payload
              properties:
                id:
                  type: string
                  description: Stripe event ID
                  example: evt_1234567890
                object:
                  type: string
                  enum:
                    - event
                  example: event
                type:
                  type: string
                  description: Webhook event type
                  example: payment_intent.succeeded
                data:
                  type: object
                  properties:
                    object:
                      type: object
                      description: Payment intent or charge object
                      properties:
                        id:
                          type: string
                          example: pi_1234567890
                        amount:
                          type: integer
                          description: Amount in cents
                          example: 250000
                        currency:
                          type: string
                          example: usd
                        status:
                          type: string
                          example: succeeded
                        metadata:
                          type: object
                          properties:
                            invoiceId:
                              type: string
                              example: inv_1234567890
      responses:
        '200':
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  received:
                    type: boolean
                    example: true
                  eventId:
                    type: string
                    example: evt_1234567890
                  processed:
                    type: boolean
                    example: true
        '400':
          description: Invalid webhook payload or signature
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid signature
        '500':
          description: Webhook processing error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to process webhook event
  /payments/{id}:
    get:
      tags:
        - Payments
      summary: Get payment by ID
      description: |
        Retrieves detailed information about a specific payment including transaction details,
        related invoice information, and payment status. Available to all authenticated users.

        **Payment Information Includes:**
        - Payment amount, method, and status
        - Transaction references and processing fees
        - Related invoice and customer details
        - Stripe payment intent details (if applicable)
        - Payment processing timeline and audit trail
        - Refund information (if applicable)

        **Security Features:**
        - Role-based data filtering
        - Sensitive data masking for non-authorized users
        - Audit logging for payment access
        - PCI compliant data handling
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Payment ID
          schema:
            type: string
            example: pay_1234567890
      responses:
        '200':
          description: Payment retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Payment ID
                    example: pay_1234567890
                  invoiceId:
                    type: string
                    description: Related invoice ID
                    example: inv_1234567890
                  amount:
                    type: number
                    format: float
                    description: Payment amount
                    example: 2500
                  method:
                    type: string
                    enum:
                      - CASH
                      - CHECK
                      - BANK_TRANSFER
                      - CREDIT_CARD
                      - PAYPAL
                      - STRIPE
                      - OTHER
                    description: Payment method used
                    example: STRIPE
                  status:
                    type: string
                    enum:
                      - PENDING
                      - PROCESSING
                      - COMPLETED
                      - FAILED
                      - REFUNDED
                      - CANCELLED
                    description: Current payment status
                    example: COMPLETED
                  transactionId:
                    type: string
                    description: External transaction reference
                    example: txn_1234567890
                  stripePaymentIntentId:
                    type: string
                    description: Stripe payment intent ID (if Stripe payment)
                    example: pi_1234567890abcdef
                  currency:
                    type: string
                    description: Payment currency
                    example: USD
                  processingFee:
                    type: number
                    format: float
                    description: Processing fee charged
                    example: 72.55
                  exchangeRate:
                    type: number
                    format: float
                    description: Exchange rate used (if applicable)
                    example: 1
                  paymentDate:
                    type: string
                    format: date
                    description: Date payment was received
                    example: '2024-01-15'
                  notes:
                    type: string
                    description: Payment notes
                    example: Payment processed via Stripe
                  createdAt:
                    type: string
                    format: date-time
                    description: Payment creation timestamp
                  updatedAt:
                    type: string
                    format: date-time
                    description: Last update timestamp
                  invoice:
                    type: object
                    description: Related invoice information
                    properties:
                      id:
                        type: string
                        example: inv_1234567890
                      invoiceNumber:
                        type: string
                        example: INV-2024-001
                      total:
                        type: number
                        format: float
                        example: 2700
                      status:
                        type: string
                        example: PAID
                      customerId:
                        type: string
                        example: cus_1234567890
                  refunds:
                    type: array
                    description: Refund history (if any)
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: ref_1234567890
                        amount:
                          type: number
                          format: float
                          example: 500
                        reason:
                          type: string
                          example: Customer request
                        refundDate:
                          type: string
                          format: date
                  metadata:
                    type: object
                    description: Additional payment metadata
                    properties:
                      ipAddress:
                        type: string
                        example: 192.168.1.1
                      userAgent:
                        type: string
                        example: Mozilla/5.0...
                      riskScore:
                        type: number
                        example: 25
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '404':
          description: Payment not found
        '500':
          description: Internal server error
  /payments/{id}/refund:
    post:
      tags:
        - Payments
      summary: Process payment refund
      description: |
        Initiates a refund for a completed payment. Supports both full and partial refunds
        with automatic accounting adjustments and customer notifications. Requires Admin or Manager role.

        **Refund Processing:**
        - Validates refund eligibility and amount
        - Processes refund through payment gateway (Stripe) or marks for manual processing
        - Updates payment status to REFUNDED (full) or creates separate refund record (partial)
        - Adjusts invoice status and remaining balance
        - Creates accounting entries for refund transaction
        - Triggers customer notification workflows

        **Refund Types:**
        - **Full Refund**: Complete refund of original payment amount
        - **Partial Refund**: Refund of specific amount less than original payment
        - **Stripe Refund**: Automatic processing through Stripe gateway
        - **Manual Refund**: Marked for manual processing (cash, check, etc.)

        **Business Impact:**
        - Invoice status updates (PAID → REFUNDED/PARTIAL)
        - Accounting reconciliation entries
        - Customer relationship management
        - Financial reporting adjustments
        - Compliance and audit trail creation

        **Security & Authorization:**
        - Restricted to Admin and Manager roles only
        - Refund reason requirement for audit compliance
        - Multi-step approval workflow for large refunds
        - Comprehensive audit logging
        - Fraud prevention checks
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Payment ID to refund
          schema:
            type: string
            example: pay_1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                amount:
                  type: number
                  format: float
                  description: Refund amount (defaults to full payment amount)
                  minimum: 0.01
                  example: 1250
                reason:
                  type: string
                  description: Reason for refund (required for audit trail)
                  enum:
                    - CUSTOMER_REQUEST
                    - DUPLICATE_PAYMENT
                    - SERVICE_NOT_DELIVERED
                    - BILLING_ERROR
                    - FRAUD_PREVENTION
                    - DISPUTE_RESOLUTION
                    - OTHER
                  example: CUSTOMER_REQUEST
                description:
                  type: string
                  description: Detailed description of refund reason
                  example: Customer cancelled order within refund policy period
                notifyCustomer:
                  type: boolean
                  description: Whether to send refund notification to customer
                  default: true
                  example: true
                refundToOriginalMethod:
                  type: boolean
                  description: Refund to original payment method (if possible)
                  default: true
                  example: true
                metadata:
                  type: object
                  description: Additional refund metadata
                  properties:
                    approvedBy:
                      type: string
                      description: User ID who approved the refund
                      example: user_1234567890
                    supportTicketId:
                      type: string
                      description: Related support ticket ID
                      example: TICKET-001234
                    externalRefundId:
                      type: string
                      description: External refund reference
                      example: EXT-REF-001
      responses:
        '200':
          description: Refund processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  refundId:
                    type: string
                    description: Refund transaction ID
                    example: ref_1234567890
                  paymentId:
                    type: string
                    description: Original payment ID
                    example: pay_1234567890
                  amount:
                    type: number
                    format: float
                    description: Refunded amount
                    example: 1250
                  currency:
                    type: string
                    description: Refund currency
                    example: USD
                  status:
                    type: string
                    enum:
                      - PENDING
                      - PROCESSING
                      - COMPLETED
                      - FAILED
                    description: Refund processing status
                    example: COMPLETED
                  method:
                    type: string
                    description: Refund method
                    example: STRIPE
                  reason:
                    type: string
                    example: CUSTOMER_REQUEST
                  gatewayRefundId:
                    type: string
                    description: Gateway refund ID (Stripe refund ID)
                    example: re_1234567890abcdef
                  estimatedArrival:
                    type: string
                    format: date
                    description: Estimated refund arrival date
                    example: '2024-01-20'
                  refundDate:
                    type: string
                    format: date-time
                    description: Refund processing timestamp
                  originalPayment:
                    type: object
                    description: Original payment information
                    properties:
                      id:
                        type: string
                        example: pay_1234567890
                      amount:
                        type: number
                        format: float
                        example: 2500
                      remainingRefundable:
                        type: number
                        format: float
                        description: Remaining amount that can be refunded
                        example: 1250
                      status:
                        type: string
                        description: Updated payment status
                        example: PARTIALLY_REFUNDED
                  invoice:
                    type: object
                    description: Updated invoice information
                    properties:
                      id:
                        type: string
                        example: inv_1234567890
                      status:
                        type: string
                        description: Updated invoice status
                        example: PARTIALLY_PAID
                      remainingBalance:
                        type: number
                        format: float
                        description: Updated remaining balance
                        example: 1250
                  notifications:
                    type: object
                    description: Notification status
                    properties:
                      customerNotified:
                        type: boolean
                        example: true
                      emailSent:
                        type: boolean
                        example: true
                      smsNotification:
                        type: boolean
                        example: false
        '400':
          description: Invalid refund request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Refund amount exceeds available refundable amount
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions (requires Admin/Manager role)
        '404':
          description: Payment not found
        '422':
          description: Refund processing failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Payment cannot be refunded in current status
                  details:
                    type: object
                    properties:
                      paymentStatus:
                        type: string
                        example: FAILED
                      refundableAmount:
                        type: number
                        format: float
                        example: 0
        '500':
          description: Gateway error or internal server error
  /payments/{id}/status:
    put:
      tags:
        - Payments
      summary: Update payment status
      description: |
        Updates the status of a payment record. This endpoint allows authorized users to manually
        change payment status for reconciliation, corrections, or administrative purposes.
        Requires Admin, Manager, or Accountant role.

        **Status Update Scenarios:**
        - Mark PENDING payments as COMPLETED when manually verified
        - Set payments to FAILED when transactions are declined
        - Update to PROCESSING during manual verification
        - Cancel payments with CANCELLED status
        - Handle refund processing status updates

        **Business Impact:**
        - Automatic invoice status updates based on payment status
        - Accounting reconciliation triggers
        - Customer notification workflows
        - Financial reporting updates
        - Audit trail creation for compliance

        **Security Controls:**
        - Role-based authorization (Admin/Manager/Accountant only)
        - Status transition validation rules
        - Comprehensive audit logging
        - Prevention of unauthorized status changes
        - Workflow integrity protection
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Payment ID
          schema:
            type: string
            example: pay_1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum:
                    - PENDING
                    - PROCESSING
                    - COMPLETED
                    - FAILED
                    - REFUNDED
                    - CANCELLED
                  description: New payment status
                  example: COMPLETED
                reason:
                  type: string
                  description: Reason for status change (required for FAILED, CANCELLED, REFUNDED)
                  example: Manual verification completed
                notes:
                  type: string
                  description: Additional notes about the status change
                  example: Verified payment receipt via bank statement
                failureReason:
                  type: string
                  description: Specific failure reason (required if status is FAILED)
                  enum:
                    - INSUFFICIENT_FUNDS
                    - CARD_DECLINED
                    - EXPIRED_CARD
                    - FRAUD_SUSPECTED
                    - TECHNICAL_ERROR
                    - OTHER
                  example: CARD_DECLINED
                refundAmount:
                  type: number
                  format: float
                  description: Refund amount (required if status is REFUNDED)
                  example: 2500
                externalTransactionId:
                  type: string
                  description: External transaction ID for reference
                  example: ext_txn_1234567890
      responses:
        '200':
          description: Payment status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Payment ID
                    example: pay_1234567890
                  status:
                    type: string
                    description: Updated payment status
                    example: COMPLETED
                  previousStatus:
                    type: string
                    description: Previous payment status
                    example: PENDING
                  updatedAt:
                    type: string
                    format: date-time
                    description: Status update timestamp
                  updatedBy:
                    type: string
                    description: User who updated the status
                    example: user_1234567890
                  invoice:
                    type: object
                    description: Updated invoice information
                    properties:
                      id:
                        type: string
                        example: inv_1234567890
                      status:
                        type: string
                        description: Updated invoice status
                        example: PAID
                      remainingBalance:
                        type: number
                        format: float
                        description: Remaining invoice balance
                        example: 0
                  notifications:
                    type: object
                    description: Triggered notifications
                    properties:
                      customerNotified:
                        type: boolean
                        example: true
                      emailSent:
                        type: boolean
                        example: true
        '400':
          description: Invalid status update request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid status transition from COMPLETED to PENDING
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions (requires Admin/Manager/Accountant role)
        '404':
          description: Payment not found
        '422':
          description: Invalid status transition or missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failure reason required when setting status to FAILED
        '500':
          description: Internal server error
  /projects:
    post:
      tags:
        - Projects
      summary: Create a new project
      description: Creates a new project with specified details, timeline, and budget. Projects serve as containers for tracking work, time, and resources.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - customerId
                - description
              properties:
                name:
                  type: string
                  description: Project name
                  example: Website Redesign
                  minLength: 2
                  maxLength: 100
                customerId:
                  type: string
                  description: Customer ID this project belongs to
                  example: clp1234567890
                description:
                  type: string
                  description: Detailed project description
                  example: Complete overhaul of company website with modern design
                  maxLength: 2000
                budget:
                  type: number
                  format: float
                  description: Project budget in organization currency
                  example: 15000
                  minimum: 0
                estimatedHours:
                  type: number
                  format: float
                  description: Estimated project duration in hours
                  example: 120.5
                  minimum: 0
                startDate:
                  type: string
                  format: date
                  description: Project start date (YYYY-MM-DD)
                  example: '2024-01-15'
                endDate:
                  type: string
                  format: date
                  description: Project end date (YYYY-MM-DD)
                  example: '2024-03-15'
                priority:
                  type: string
                  enum:
                    - LOW
                    - MEDIUM
                    - HIGH
                    - URGENT
                  default: MEDIUM
                  description: Project priority level
                tags:
                  type: array
                  items:
                    type: string
                  description: Project tags for categorization
                  example:
                    - web-development
                    - design
                    - responsive
                assignedTo:
                  type: array
                  items:
                    type: string
                  description: Array of user IDs assigned to the project
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Project ID
                  name:
                    type: string
                  description:
                    type: string
                  status:
                    type: string
                    enum:
                      - DRAFT
                      - ACTIVE
                      - ON_HOLD
                      - COMPLETED
                      - CANCELLED
                    example: DRAFT
                  budget:
                    type: number
                    format: float
                  customerId:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Customer not found
        '500':
          description: Internal server error
    get:
      tags:
        - Projects
      summary: List projects
      description: Retrieves a paginated list of projects with filtering and search capabilities. Users can only see projects within their organization.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Number of projects per page
        - in: query
          name: search
          schema:
            type: string
          description: Search term for project name or description
        - in: query
          name: status
          schema:
            type: string
            enum:
              - DRAFT
              - ACTIVE
              - ON_HOLD
              - COMPLETED
              - CANCELLED
          description: Filter by project status
        - in: query
          name: customerId
          schema:
            type: string
          description: Filter by specific customer
        - in: query
          name: assignedTo
          schema:
            type: string
          description: Filter by assigned user ID
        - in: query
          name: priority
          schema:
            type: string
            enum:
              - LOW
              - MEDIUM
              - HIGH
              - URGENT
          description: Filter by project priority
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - name
              - createdAt
              - updatedAt
              - startDate
              - endDate
              - budget
              - priority
            default: createdAt
          description: Field to sort by
        - in: query
          name: sortOrder
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          description: Sort order
      responses:
        '200':
          description: Projects retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Project ID
                        name:
                          type: string
                          example: Website Redesign
                        description:
                          type: string
                        status:
                          type: string
                          enum:
                            - DRAFT
                            - ACTIVE
                            - ON_HOLD
                            - COMPLETED
                            - CANCELLED
                        priority:
                          type: string
                          enum:
                            - LOW
                            - MEDIUM
                            - HIGH
                            - URGENT
                        budget:
                          type: number
                          format: float
                        estimatedHours:
                          type: number
                          format: float
                        actualHours:
                          type: number
                          format: float
                        startDate:
                          type: string
                          format: date
                        endDate:
                          type: string
                          format: date
                        customer:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                        assignedUsers:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                              role:
                                type: string
                        progress:
                          type: number
                          format: float
                          description: Project completion percentage
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      total:
                        type: integer
                      pages:
                        type: integer
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '500':
          description: Internal server error
  /projects/authorize:
    post:
      tags:
        - Projects
      summary: Authorize work on projects
      description: Authorizes work to begin on one or multiple projects. This creates an audit trail for work authorization and can trigger billing processes.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - projectIds
                - authorizationType
              properties:
                projectIds:
                  type: array
                  items:
                    type: string
                  description: Array of project IDs to authorize
                  example:
                    - clp1234567890
                    - clp0987654321
                  minItems: 1
                authorizationType:
                  type: string
                  enum:
                    - START_WORK
                    - ADDITIONAL_HOURS
                    - SCOPE_CHANGE
                    - BUDGET_INCREASE
                  description: Type of work authorization
                  example: START_WORK
                authorizedAmount:
                  type: number
                  format: float
                  description: Additional budget authorized (if applicable)
                  example: 5000
                  minimum: 0
                authorizedHours:
                  type: number
                  format: float
                  description: Additional hours authorized (if applicable)
                  example: 40
                  minimum: 0
                notes:
                  type: string
                  description: Authorization notes or comments
                  example: Approved additional scope for mobile responsiveness
                  maxLength: 1000
                expiresAt:
                  type: string
                  format: date-time
                  description: When this authorization expires
      responses:
        '200':
          description: Work authorization completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  authorizationId:
                    type: string
                    description: Unique authorization ID
                  authorizedProjects:
                    type: array
                    items:
                      type: object
                      properties:
                        projectId:
                          type: string
                        projectName:
                          type: string
                        previousStatus:
                          type: string
                        newStatus:
                          type: string
                        authorizedAmount:
                          type: number
                          format: float
                        authorizedHours:
                          type: number
                          format: float
                  totalAuthorizedAmount:
                    type: number
                    format: float
                    description: Total amount authorized across all projects
                  totalAuthorizedHours:
                    type: number
                    format: float
                    description: Total hours authorized across all projects
                  authorizedBy:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
                  authorizedAt:
                    type: string
                    format: date-time
                  expiresAt:
                    type: string
                    format: date-time
        '400':
          description: Invalid input data or project IDs
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Requires Admin or Manager role
        '404':
          description: One or more projects not found
        '500':
          description: Internal server error
  /projects/stats/summary:
    get:
      tags:
        - Projects
      summary: Get project statistics summary
      description: Retrieves comprehensive statistics and analytics for all projects in the organization including status distribution, budget utilization, and time tracking metrics.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: period
          schema:
            type: string
            enum:
              - week
              - month
              - quarter
              - year
              - all
            default: month
          description: Time period for statistics calculation
        - in: query
          name: status
          schema:
            type: string
            enum:
              - DRAFT
              - ACTIVE
              - ON_HOLD
              - COMPLETED
              - CANCELLED
          description: Filter statistics by project status
        - in: query
          name: customerId
          schema:
            type: string
          description: Filter statistics by specific customer
      responses:
        '200':
          description: Project statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    type: object
                    properties:
                      totalProjects:
                        type: integer
                        description: Total number of projects
                      activeProjects:
                        type: integer
                        description: Currently active projects
                      completedProjects:
                        type: integer
                        description: Completed projects in period
                      totalBudget:
                        type: number
                        format: float
                        description: Combined budget of all projects
                      totalSpent:
                        type: number
                        format: float
                        description: Total amount spent across projects
                  statusDistribution:
                    type: object
                    properties:
                      DRAFT:
                        type: integer
                      ACTIVE:
                        type: integer
                      ON_HOLD:
                        type: integer
                      COMPLETED:
                        type: integer
                      CANCELLED:
                        type: integer
                  timeTracking:
                    type: object
                    properties:
                      totalHoursLogged:
                        type: number
                        format: float
                      estimatedHours:
                        type: number
                        format: float
                      efficiency:
                        type: number
                        format: float
                        description: Efficiency percentage (actual vs estimated)
                  topProjects:
                    type: array
                    description: Top projects by budget or activity
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        budget:
                          type: number
                          format: float
                        hoursLogged:
                          type: number
                          format: float
                        status:
                          type: string
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '500':
          description: Internal server error
  /projects/{id}:
    get:
      tags:
        - Projects
      summary: Get project details
      description: Retrieves detailed information about a specific project including time tracking, assigned users, and progress metrics.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Project ID
          schema:
            type: string
            example: clp1234567890
      responses:
        '200':
          description: Project details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Project ID
                  name:
                    type: string
                    example: Website Redesign
                  description:
                    type: string
                    example: Complete overhaul of company website
                  status:
                    type: string
                    enum:
                      - DRAFT
                      - ACTIVE
                      - ON_HOLD
                      - COMPLETED
                      - CANCELLED
                    example: ACTIVE
                  priority:
                    type: string
                    enum:
                      - LOW
                      - MEDIUM
                      - HIGH
                      - URGENT
                    example: HIGH
                  budget:
                    type: number
                    format: float
                    example: 15000
                  estimatedHours:
                    type: number
                    format: float
                    example: 120.5
                  actualHours:
                    type: number
                    format: float
                    example: 95.25
                  startDate:
                    type: string
                    format: date
                    example: '2024-01-15'
                  endDate:
                    type: string
                    format: date
                    example: '2024-03-15'
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                        example: Acme Corporation
                      email:
                        type: string
                        example: contact@acme.com
                  assignedUsers:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        email:
                          type: string
                        role:
                          type: string
                        hoursLogged:
                          type: number
                          format: float
                  timeTracking:
                    type: object
                    properties:
                      totalHours:
                        type: number
                        format: float
                      billableHours:
                        type: number
                        format: float
                      lastEntry:
                        type: string
                        format: date-time
                  progress:
                    type: number
                    format: float
                    description: Project completion percentage
                    example: 75.5
                  tags:
                    type: array
                    items:
                      type: string
                    example:
                      - web-development
                      - design
                  attachments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        filename:
                          type: string
                        url:
                          type: string
                        uploadedAt:
                          type: string
                          format: date-time
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '404':
          description: Project not found
        '500':
          description: Internal server error
    put:
      tags:
        - Projects
      summary: Update project
      description: Updates project information including details, timeline, budget, and assignments. Employees can update projects they are assigned to.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Project ID
          schema:
            type: string
            example: clp1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Project name
                  example: Website Redesign - Updated
                  minLength: 2
                  maxLength: 100
                description:
                  type: string
                  description: Project description
                  example: Updated project requirements and scope
                  maxLength: 2000
                budget:
                  type: number
                  format: float
                  description: Project budget
                  example: 18000
                  minimum: 0
                estimatedHours:
                  type: number
                  format: float
                  description: Estimated hours
                  example: 140
                  minimum: 0
                startDate:
                  type: string
                  format: date
                  description: Project start date
                  example: '2024-01-20'
                endDate:
                  type: string
                  format: date
                  description: Project end date
                  example: '2024-04-15'
                priority:
                  type: string
                  enum:
                    - LOW
                    - MEDIUM
                    - HIGH
                    - URGENT
                  description: Project priority
                status:
                  type: string
                  enum:
                    - DRAFT
                    - ACTIVE
                    - ON_HOLD
                    - COMPLETED
                    - CANCELLED
                  description: Project status (Admin/Manager only)
                tags:
                  type: array
                  items:
                    type: string
                  description: Project tags
                assignedTo:
                  type: array
                  items:
                    type: string
                  description: Array of user IDs to assign (Admin/Manager only)
      responses:
        '200':
          description: Project updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  status:
                    type: string
                    enum:
                      - DRAFT
                      - ACTIVE
                      - ON_HOLD
                      - COMPLETED
                      - CANCELLED
                  priority:
                    type: string
                    enum:
                      - LOW
                      - MEDIUM
                      - HIGH
                      - URGENT
                  budget:
                    type: number
                    format: float
                  estimatedHours:
                    type: number
                    format: float
                  updatedAt:
                    type: string
                    format: date-time
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Project not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Projects
      summary: Delete project
      description: Soft deletes a project and all associated data including time entries, assignments, and files. This action is irreversible and requires proper authorization.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Project ID
          schema:
            type: string
            example: clp1234567890
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: Reason for project deletion
                  example: Project cancelled by client
                  minLength: 10
                  maxLength: 500
                archiveData:
                  type: boolean
                  default: true
                  description: Whether to archive project data for compliance
                notifyTeam:
                  type: boolean
                  default: true
                  description: Whether to notify assigned team members
      responses:
        '200':
          description: Project deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Project deleted successfully
                  projectId:
                    type: string
                  projectName:
                    type: string
                  deletedAt:
                    type: string
                    format: date-time
                  deletedBy:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
                  archivedData:
                    type: object
                    properties:
                      timeEntries:
                        type: integer
                        description: Number of time entries archived
                      attachments:
                        type: integer
                        description: Number of attachments archived
                      totalHours:
                        type: number
                        format: float
                        description: Total hours logged on project
                      totalCost:
                        type: number
                        format: float
                        description: Total project cost
                      archiveLocation:
                        type: string
                        description: Location of archived data
                  notifiedUsers:
                    type: array
                    items:
                      type: string
                    description: User IDs that were notified
        '400':
          description: Invalid request - Cannot delete active project with time entries
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Requires Admin or Manager role
        '404':
          description: Project not found
        '409':
          description: Conflict - Project has dependencies that prevent deletion
        '500':
          description: Internal server error
  /projects/{id}/assign:
    patch:
      tags:
        - Projects
      summary: Assign project to users
      description: Assigns or reassigns project to specific users with defined roles and responsibilities. Triggers notifications to assigned users.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Project ID
          schema:
            type: string
            example: clp1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - assignments
              properties:
                assignments:
                  type: array
                  items:
                    type: object
                    required:
                      - userId
                      - role
                    properties:
                      userId:
                        type: string
                        description: ID of user to assign
                        example: clp1234567890
                      role:
                        type: string
                        enum:
                          - PROJECT_MANAGER
                          - LEAD_DEVELOPER
                          - DEVELOPER
                          - DESIGNER
                          - TESTER
                          - CONSULTANT
                        description: Role for this assignment
                        example: LEAD_DEVELOPER
                      hourlyRate:
                        type: number
                        format: float
                        description: Hourly rate for this user on this project
                        example: 85
                        minimum: 0
                      maxHours:
                        type: number
                        format: float
                        description: Maximum hours allocated for this user
                        example: 40
                        minimum: 0
                      responsibilities:
                        type: array
                        items:
                          type: string
                        description: List of responsibilities
                        example:
                          - Frontend development
                          - Code review
                      startDate:
                        type: string
                        format: date
                        description: When this assignment starts
                        example: '2024-01-20'
                      endDate:
                        type: string
                        format: date
                        description: When this assignment ends
                        example: '2024-03-15'
                  minItems: 1
                  description: Array of user assignments
                replaceExisting:
                  type: boolean
                  default: false
                  description: Whether to replace all existing assignments
                notifyUsers:
                  type: boolean
                  default: true
                  description: Whether to send notifications to assigned users
                assignmentNotes:
                  type: string
                  description: Notes about the assignment
                  example: Please start with requirements analysis
                  maxLength: 500
      responses:
        '200':
          description: Project assignment updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  projectId:
                    type: string
                  assignments:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: string
                        userName:
                          type: string
                        userEmail:
                          type: string
                        role:
                          type: string
                        hourlyRate:
                          type: number
                          format: float
                        maxHours:
                          type: number
                          format: float
                        responsibilities:
                          type: array
                          items:
                            type: string
                        assignedAt:
                          type: string
                          format: date-time
                        notified:
                          type: boolean
                  previousAssignments:
                    type: array
                    items:
                      type: object
                    description: Previous assignments that were removed
                  totalAssignedUsers:
                    type: integer
                    description: Total number of users assigned to project
                  estimatedTotalCost:
                    type: number
                    format: float
                    description: Estimated total cost based on assignments
        '400':
          description: Invalid input data or user assignments
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Requires Admin or Manager role
        '404':
          description: Project or one or more users not found
        '409':
          description: Conflict - User assignment conflicts or capacity issues
        '500':
          description: Internal server error
  /projects/{id}/complete:
    patch:
      tags:
        - Projects
      summary: Complete project
      description: Marks project as COMPLETED, finalizes time tracking, and triggers completion workflows including final billing and client notifications.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Project ID
          schema:
            type: string
            example: clp1234567890
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                completionNotes:
                  type: string
                  description: Notes about project completion
                  example: All deliverables completed and client approved
                  maxLength: 1000
                actualEndDate:
                  type: string
                  format: date
                  description: Actual completion date (defaults to current date)
                  example: '2024-03-10'
                finalDeliverables:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      url:
                        type: string
                      description:
                        type: string
                  description: List of final project deliverables
                generateInvoice:
                  type: boolean
                  default: false
                  description: Whether to automatically generate final invoice
      responses:
        '200':
          description: Project completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  status:
                    type: string
                    example: COMPLETED
                  actualEndDate:
                    type: string
                    format: date
                  completedBy:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
                  completedAt:
                    type: string
                    format: date-time
                  finalMetrics:
                    type: object
                    properties:
                      totalHours:
                        type: number
                        format: float
                      totalCost:
                        type: number
                        format: float
                      budgetVariance:
                        type: number
                        format: float
                        description: Difference between budget and actual cost
                      timeVariance:
                        type: number
                        format: float
                        description: Difference between estimated and actual hours
                  generatedInvoiceId:
                    type: string
                    description: ID of automatically generated invoice (if requested)
        '400':
          description: Invalid request - Project already completed or invalid status
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Project not found
        '500':
          description: Internal server error
  /projects/{id}/start:
    patch:
      tags:
        - Projects
      summary: Start project
      description: Changes project status to ACTIVE and begins time tracking. This action triggers notifications to assigned team members and initializes project timelines.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Project ID
          schema:
            type: string
            example: clp1234567890
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                notes:
                  type: string
                  description: Optional notes about starting the project
                  example: Project kickoff meeting completed
                  maxLength: 500
                actualStartDate:
                  type: string
                  format: date
                  description: Actual start date (defaults to current date)
                  example: '2024-01-20'
      responses:
        '200':
          description: Project started successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Project ID
                  name:
                    type: string
                    example: Website Redesign
                  status:
                    type: string
                    example: ACTIVE
                  actualStartDate:
                    type: string
                    format: date
                  startedBy:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
                  startedAt:
                    type: string
                    format: date-time
                  notifiedUsers:
                    type: array
                    items:
                      type: string
                    description: User IDs that were notified
        '400':
          description: Invalid request - Project already started or invalid status
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Project not found
        '500':
          description: Internal server error
  /projects/{id}/time:
    patch:
      tags:
        - Projects
      summary: Update time tracking
      description: Logs time entries for project work including billable hours, tasks performed, and time period. Essential for accurate project costing and billing.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Project ID
          schema:
            type: string
            example: clp1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - hours
                - date
                - description
              properties:
                hours:
                  type: number
                  format: float
                  description: Number of hours worked
                  example: 8.5
                  minimum: 0.1
                  maximum: 24
                date:
                  type: string
                  format: date
                  description: Date work was performed (YYYY-MM-DD)
                  example: '2024-01-20'
                description:
                  type: string
                  description: Description of work performed
                  example: Implemented responsive navigation menu
                  minLength: 5
                  maxLength: 500
                billable:
                  type: boolean
                  default: true
                  description: Whether these hours are billable
                hourlyRate:
                  type: number
                  format: float
                  description: Hourly rate for this time entry (overrides default)
                  example: 85
                  minimum: 0
                category:
                  type: string
                  enum:
                    - DEVELOPMENT
                    - DESIGN
                    - TESTING
                    - MEETING
                    - RESEARCH
                    - DOCUMENTATION
                    - OTHER
                  default: DEVELOPMENT
                  description: Category of work performed
                tags:
                  type: array
                  items:
                    type: string
                  description: Tags for categorizing the work
                  example:
                    - frontend
                    - javascript
                    - responsive
                startTime:
                  type: string
                  format: time
                  description: Start time of work (HH:MM)
                  example: '09:00'
                endTime:
                  type: string
                  format: time
                  description: End time of work (HH:MM)
                  example: '17:30'
      responses:
        '200':
          description: Time tracking updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  timeEntryId:
                    type: string
                    description: ID of the created time entry
                  projectId:
                    type: string
                  userId:
                    type: string
                  hours:
                    type: number
                    format: float
                  date:
                    type: string
                    format: date
                  description:
                    type: string
                  billable:
                    type: boolean
                  amount:
                    type: number
                    format: float
                    description: Calculated billable amount
                  projectTotals:
                    type: object
                    properties:
                      totalHours:
                        type: number
                        format: float
                      billableHours:
                        type: number
                        format: float
                      totalAmount:
                        type: number
                        format: float
                      remainingBudget:
                        type: number
                        format: float
                  createdAt:
                    type: string
                    format: date-time
        '400':
          description: Invalid input data or time entry validation failed
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Project not found
        '409':
          description: Conflict - Overlapping time entries or project not active
        '500':
          description: Internal server error
  /quotes:
    post:
      tags:
        - Quotes
      summary: Create a new quote
      description: Creates a new quote for a customer. Requires Admin, Manager, Accountant, or Employee role.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - customerId
                - items
              properties:
                customerId:
                  type: string
                  description: Customer ID for the quote
                  example: clp1234567890
                items:
                  type: array
                  description: Array of quote items
                  items:
                    type: object
                    required:
                      - description
                      - quantity
                      - unitPrice
                    properties:
                      description:
                        type: string
                        example: Professional Website Development
                      quantity:
                        type: number
                        example: 1
                      unitPrice:
                        type: number
                        format: float
                        example: 2500
                      notes:
                        type: string
                        example: Includes responsive design and SEO optimization
                notes:
                  type: string
                  description: Additional notes for the quote
                  example: 'Quote valid for 30 days. Payment terms: 50% upfront, 50% on completion.'
                validUntil:
                  type: string
                  format: date
                  description: Quote expiration date
                  example: '2024-02-15'
                termsAndConditions:
                  type: string
                  description: Terms and conditions for the quote
                  example: All work to be completed within agreed timeframe. Additional requests may incur extra charges.
      responses:
        '201':
          description: Quote created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Quote ID
                    example: quo_1234567890
                  customerId:
                    type: string
                    example: clp1234567890
                  quoteNumber:
                    type: string
                    example: QTE-2024-001
                  items:
                    type: array
                    items:
                      type: object
                  subtotal:
                    type: number
                    format: float
                    example: 2500
                  tax:
                    type: number
                    format: float
                    example: 200
                  total:
                    type: number
                    format: float
                    example: 2700
                  status:
                    type: string
                    enum:
                      - DRAFT
                      - SENT
                      - VIEWED
                      - ACCEPTED
                      - REJECTED
                      - EXPIRED
                    example: DRAFT
                  validUntil:
                    type: string
                    format: date
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - Insufficient permissions
        '500':
          description: Internal server error
    get:
      tags:
        - Quotes
      summary: List quotes
      description: Retrieves a list of quotes with filtering and pagination. Available to all authenticated users.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Number of quotes per page
        - in: query
          name: search
          schema:
            type: string
          description: Search term for quote number, customer name, or description
        - in: query
          name: status
          schema:
            type: string
            enum:
              - DRAFT
              - SENT
              - VIEWED
              - ACCEPTED
              - REJECTED
              - EXPIRED
          description: Filter by quote status
        - in: query
          name: customerId
          schema:
            type: string
          description: Filter by customer ID
        - in: query
          name: dateFrom
          schema:
            type: string
            format: date
          description: Filter quotes created from this date
        - in: query
          name: dateTo
          schema:
            type: string
            format: date
          description: Filter quotes created until this date
        - in: query
          name: sortBy
          schema:
            type: string
            enum:
              - quoteNumber
              - total
              - status
              - createdAt
              - validUntil
            default: createdAt
          description: Field to sort by
        - in: query
          name: sortOrder
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          description: Sort order
      responses:
        '200':
          description: Quotes retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: quo_1234567890
                        quoteNumber:
                          type: string
                          example: QTE-2024-001
                        customerId:
                          type: string
                          example: clp1234567890
                        customerName:
                          type: string
                          example: John Doe
                        total:
                          type: number
                          format: float
                          example: 2700
                        status:
                          type: string
                          example: SENT
                        validUntil:
                          type: string
                          format: date
                        createdAt:
                          type: string
                          format: date-time
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      total:
                        type: integer
                      pages:
                        type: integer
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /quotes/stats/summary:
    get:
      tags:
        - Quotes
      summary: Get quote statistics summary
      description: Retrieves comprehensive quote statistics including totals, status breakdown, conversion rates, and revenue metrics. Available to all authenticated users.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Quote statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalQuotes:
                    type: integer
                    description: Total number of quotes
                    example: 150
                  statusBreakdown:
                    type: object
                    properties:
                      draft:
                        type: integer
                        example: 25
                      sent:
                        type: integer
                        example: 45
                      viewed:
                        type: integer
                        example: 35
                      accepted:
                        type: integer
                        example: 30
                      rejected:
                        type: integer
                        example: 10
                      expired:
                        type: integer
                        example: 5
                  conversionRates:
                    type: object
                    properties:
                      viewToAccept:
                        type: number
                        format: float
                        example: 0.75
                        description: Percentage of viewed quotes that were accepted
                      sentToAccept:
                        type: number
                        format: float
                        example: 0.67
                        description: Percentage of sent quotes that were accepted
                      overallConversion:
                        type: number
                        format: float
                        example: 0.2
                        description: Overall quote to acceptance conversion rate
                  revenueMetrics:
                    type: object
                    properties:
                      totalQuoteValue:
                        type: number
                        format: float
                        example: 125000
                      acceptedQuoteValue:
                        type: number
                        format: float
                        example: 75000
                      averageQuoteValue:
                        type: number
                        format: float
                        example: 2500
                      averageAcceptedValue:
                        type: number
                        format: float
                        example: 2500
                  trends:
                    type: object
                    properties:
                      thisMonth:
                        type: integer
                        example: 25
                      lastMonth:
                        type: integer
                        example: 20
                      monthlyGrowth:
                        type: number
                        format: float
                        example: 0.25
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /quotes/{id}:
    get:
      tags:
        - Quotes
      summary: Get quote by ID
      description: Retrieves a specific quote by its ID. Available to all authenticated users.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Quote ID
          schema:
            type: string
            example: quo_1234567890
      responses:
        '200':
          description: Quote retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: quo_1234567890
                  quoteNumber:
                    type: string
                    example: QTE-2024-001
                  customerId:
                    type: string
                    example: clp1234567890
                  customer:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                        example: John Doe
                      email:
                        type: string
                        example: john@example.com
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                          example: Professional Website Development
                        quantity:
                          type: number
                          example: 1
                        unitPrice:
                          type: number
                          format: float
                          example: 2500
                        lineTotal:
                          type: number
                          format: float
                          example: 2500
                        notes:
                          type: string
                  subtotal:
                    type: number
                    format: float
                    example: 2500
                  tax:
                    type: number
                    format: float
                    example: 200
                  total:
                    type: number
                    format: float
                    example: 2700
                  status:
                    type: string
                    enum:
                      - DRAFT
                      - SENT
                      - VIEWED
                      - ACCEPTED
                      - REJECTED
                      - EXPIRED
                    example: SENT
                  notes:
                    type: string
                  validUntil:
                    type: string
                    format: date
                  termsAndConditions:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  sentAt:
                    type: string
                    format: date-time
                  viewedAt:
                    type: string
                    format: date-time
                  acceptedAt:
                    type: string
                    format: date-time
                  rejectedAt:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized
        '404':
          description: Quote not found
        '500':
          description: Internal server error
    put:
      tags:
        - Quotes
      summary: Update quote
      description: Updates an existing quote. Only quotes in DRAFT status can be updated. Requires Admin, Manager, Accountant, or Employee role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Quote ID
          schema:
            type: string
            example: quo_1234567890
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  description: Array of quote items
                  items:
                    type: object
                    required:
                      - description
                      - quantity
                      - unitPrice
                    properties:
                      description:
                        type: string
                        example: Updated Website Development with CMS
                      quantity:
                        type: number
                        example: 1
                      unitPrice:
                        type: number
                        format: float
                        example: 3000
                      notes:
                        type: string
                        example: Includes CMS integration and training
                notes:
                  type: string
                  description: Additional notes for the quote
                  example: Updated quote with additional CMS functionality
                validUntil:
                  type: string
                  format: date
                  description: Quote expiration date
                  example: '2024-03-15'
                termsAndConditions:
                  type: string
                  description: Terms and conditions for the quote
      responses:
        '200':
          description: Quote updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  quoteNumber:
                    type: string
                  customerId:
                    type: string
                  items:
                    type: array
                    items:
                      type: object
                  subtotal:
                    type: number
                    format: float
                  tax:
                    type: number
                    format: float
                  total:
                    type: number
                    format: float
                  status:
                    type: string
                  updatedAt:
                    type: string
                    format: date-time
        '400':
          description: Invalid input data or quote cannot be updated (not in DRAFT status)
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Quote not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Quotes
      summary: Delete quote
      description: Deletes a quote. Only quotes in DRAFT status can be deleted. Requires Admin or Manager role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Quote ID
          schema:
            type: string
            example: quo_1234567890
      responses:
        '200':
          description: Quote deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Quote deleted successfully
                  deletedQuoteId:
                    type: string
                    example: quo_1234567890
        '400':
          description: Quote cannot be deleted (not in DRAFT status)
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Quote not found
        '500':
          description: Internal server error
  /quotes/{id}/accept:
    post:
      tags:
        - Quotes
      summary: Accept quote
      description: Marks a quote as accepted by the customer. This action typically triggers invoice generation. Requires Admin, Manager, Accountant, or Employee role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Quote ID
          schema:
            type: string
            example: quo_1234567890
      responses:
        '200':
          description: Quote accepted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Quote accepted successfully
                  quote:
                    type: object
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                        example: ACCEPTED
                      acceptedAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                  invoiceGenerated:
                    type: boolean
                    description: Whether an invoice was automatically generated
                    example: true
                  invoiceId:
                    type: string
                    description: ID of the generated invoice (if applicable)
                    example: inv_1234567890
        '400':
          description: Quote cannot be accepted (invalid status)
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Quote not found
        '500':
          description: Internal server error
  /quotes/{id}/convert-to-invoice:
    post:
      tags:
        - Quotes
      summary: Convert quote to invoice
      description: Converts an accepted quote to an invoice. The quote must be in ACCEPTED status. Requires Admin, Manager, or Accountant role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Quote ID
          schema:
            type: string
            example: quo_1234567890
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                dueDate:
                  type: string
                  format: date
                  description: Due date for the invoice (optional, defaults to 30 days from today)
                  example: '2024-02-28'
                depositRequired:
                  type: number
                  minimum: 0
                  description: Required deposit amount (optional)
                  example: 500
                terms:
                  type: string
                  description: Payment terms (optional, uses quote terms if not provided)
                  example: Net 30 days
                notes:
                  type: string
                  description: Additional notes for the invoice
                  example: Thank you for your business!
      responses:
        '200':
          description: Quote converted to invoice successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Quote converted to invoice successfully
                  invoice:
                    type: object
                    properties:
                      id:
                        type: string
                        example: inv_1234567890
                      invoiceNumber:
                        type: string
                        example: INV-000123
                      status:
                        type: string
                        example: DRAFT
                      quoteId:
                        type: string
                        example: quo_1234567890
                      total:
                        type: number
                        example: 1695
                      dueDate:
                        type: string
                        format: date
                        example: '2024-02-28'
        '400':
          description: Quote cannot be converted (not in ACCEPTED status or already converted)
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - Insufficient permissions
        '404':
          description: Quote not found
        '500':
          description: Internal server error
  /quotes/{id}/duplicate:
    post:
      tags:
        - Quotes
      summary: Duplicate quote
      description: Creates a new quote by duplicating an existing one. The new quote will have DRAFT status. Requires Admin, Manager, Accountant, or Employee role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Quote ID to duplicate
          schema:
            type: string
            example: quo_1234567890
      responses:
        '201':
          description: Quote duplicated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Quote duplicated successfully
                  originalQuoteId:
                    type: string
                    example: quo_1234567890
                  newQuote:
                    type: object
                    properties:
                      id:
                        type: string
                        example: quo_0987654321
                      quoteNumber:
                        type: string
                        example: QTE-2024-002
                      customerId:
                        type: string
                      status:
                        type: string
                        example: DRAFT
                      total:
                        type: number
                        format: float
                      createdAt:
                        type: string
                        format: date-time
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Quote not found
        '500':
          description: Internal server error
  /quotes/{id}/reject:
    post:
      tags:
        - Quotes
      summary: Reject quote
      description: Marks a quote as rejected by the customer. Requires Admin, Manager, Accountant, or Employee role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Quote ID
          schema:
            type: string
            example: quo_1234567890
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: Reason for rejection (optional)
                  example: Budget constraints - looking for lower cost option
      responses:
        '200':
          description: Quote rejected successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Quote rejected successfully
                  quote:
                    type: object
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                        example: REJECTED
                      rejectedAt:
                        type: string
                        format: date-time
                      rejectionReason:
                        type: string
                        example: Budget constraints
                      updatedAt:
                        type: string
                        format: date-time
        '400':
          description: Quote cannot be rejected (invalid status)
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Quote not found
        '500':
          description: Internal server error
  /quotes/{id}/send:
    post:
      tags:
        - Quotes
      summary: Send quote to customer
      description: Sends a quote to the customer via email and updates status to SENT. Requires Admin, Manager, Accountant, or Employee role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Quote ID
          schema:
            type: string
            example: quo_1234567890
      responses:
        '200':
          description: Quote sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Quote sent successfully to customer
                  quote:
                    type: object
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                        example: SENT
                      sentAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '400':
          description: Quote cannot be sent (invalid status or missing customer email)
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Quote not found
        '500':
          description: Internal server error
  /quotes/{id}/viewed:
    post:
      tags:
        - Quotes
      summary: Mark quote as viewed
      description: Marks a quote as viewed by the customer. This is typically called when the customer views the quote through a public link. Available to all authenticated users.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Quote ID
          schema:
            type: string
            example: quo_1234567890
      responses:
        '200':
          description: Quote marked as viewed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Quote marked as viewed
                  quote:
                    type: object
                    properties:
                      id:
                        type: string
                      status:
                        type: string
                        example: VIEWED
                      viewedAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '400':
          description: Quote cannot be marked as viewed (invalid status)
        '401':
          description: Unauthorized
        '404':
          description: Quote not found
        '500':
          description: Internal server error
  /users:
    post:
      tags:
        - Users
      summary: Create a new user
      description: Creates a new user account. Requires Admin or Super Admin role.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - firstName
                - lastName
                - role
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                  example: john.doe@example.com
                firstName:
                  type: string
                  minLength: 1
                  maxLength: 50
                  description: User's first name
                  example: John
                lastName:
                  type: string
                  minLength: 1
                  maxLength: 50
                  description: User's last name
                  example: Doe
                role:
                  type: string
                  enum:
                    - SUPER_ADMIN
                    - ADMIN
                    - MANAGER
                    - ACCOUNTANT
                    - EMPLOYEE
                    - VIEWER
                  description: User's role
                  example: EMPLOYEE
                phone:
                  type: string
                  description: User's phone number
                  example: '+1234567890'
                password:
                  type: string
                  minLength: 8
                  description: User's password (must contain uppercase, lowercase, number, and special character)
                  example: SecurePass123!
                isActive:
                  type: boolean
                  description: Whether the user account is active
                  default: true
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          description: Validation error
        '403':
          description: Insufficient permissions
        '409':
          description: User with email already exists
    get:
      tags:
        - Users
      summary: List users
      description: Get a paginated list of users in the organization. Requires Admin+ role.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
          description: Number of items per page
        - in: query
          name: role
          schema:
            type: string
            enum:
              - SUPER_ADMIN
              - ADMIN
              - MANAGER
              - ACCOUNTANT
              - EMPLOYEE
              - VIEWER
          description: Filter by user role
        - in: query
          name: isActive
          schema:
            type: boolean
          description: Filter by active status
        - in: query
          name: search
          schema:
            type: string
            maxLength: 100
          description: Search by name or email
      responses:
        '200':
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          description: Validation error
        '403':
          description: Insufficient permissions
  /users/invite:
    post:
      tags:
        - Users
      summary: Invite user
      description: Send an invitation to join the organization. Requires Admin+ role.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - role
              properties:
                email:
                  type: string
                  format: email
                  description: Email address to invite
                  example: newuser@example.com
                role:
                  type: string
                  enum:
                    - SUPER_ADMIN
                    - ADMIN
                    - MANAGER
                    - ACCOUNTANT
                    - EMPLOYEE
                    - VIEWER
                  description: Role for the new user
                  example: EMPLOYEE
      responses:
        '200':
          description: Invitation sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: User already exists or validation error
        '403':
          description: Insufficient permissions
  /users/{userId}:
    get:
      tags:
        - Users
      summary: Get user by ID
      description: Get a specific user by ID. Requires Admin+ role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/User'
        '403':
          description: Insufficient permissions
        '404':
          description: User not found
    put:
      tags:
        - Users
      summary: Update user
      description: Update user information. Requires Admin+ role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                firstName:
                  type: string
                  minLength: 1
                  maxLength: 50
                  description: User's first name
                lastName:
                  type: string
                  minLength: 1
                  maxLength: 50
                  description: User's last name
                role:
                  type: string
                  enum:
                    - SUPER_ADMIN
                    - ADMIN
                    - MANAGER
                    - ACCOUNTANT
                    - EMPLOYEE
                    - VIEWER
                  description: User's role
                phone:
                  type: string
                  description: User's phone number
                isActive:
                  type: boolean
                  description: Whether the user account is active
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          description: Validation error
        '403':
          description: Insufficient permissions
        '404':
          description: User not found
    delete:
      tags:
        - Users
      summary: Delete user
      description: Soft delete a user account. Requires Admin+ role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Cannot delete self
        '403':
          description: Insufficient permissions
        '404':
          description: User not found
  /users/{userId}/activate:
    post:
      tags:
        - Users
      summary: Activate user account
      description: Activate a user account. Requires Admin+ role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: User activated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/User'
                  message:
                    type: string
        '403':
          description: Insufficient permissions
        '404':
          description: User not found
  /users/{userId}/deactivate:
    post:
      tags:
        - Users
      summary: Deactivate user account
      description: Deactivate a user account. Users cannot deactivate themselves. Requires Admin+ role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: User deactivated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/User'
                  message:
                    type: string
        '400':
          description: Cannot deactivate self
        '403':
          description: Insufficient permissions
        '404':
          description: User not found
  /users/{userId}/resend-invite:
    post:
      tags:
        - Users
      summary: Resend user invitation
      description: Resend invitation to a pending user. Requires Admin+ role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: Invitation resent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: User not found or already activated
        '403':
          description: Insufficient permissions
  /users/{userId}/status:
    get:
      tags:
        - Users
      summary: Get user account status
      description: Get detailed account status information for a user. Requires Admin+ role.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: User status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      userId:
                        type: string
                      isActive:
                        type: boolean
                      emailVerified:
                        type: boolean
                      lastLogin:
                        type: string
                        format: date-time
                        nullable: true
                      accountStatus:
                        type: string
                        enum:
                          - active
                          - inactive
                          - pending
                          - suspended
                      loginAttempts:
                        type: integer
                      lockedUntil:
                        type: string
                        format: date-time
                        nullable: true
        '403':
          description: Insufficient permissions
        '404':
          description: User not found
