# Upstream configuration
upstream api_backend {
    server api:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# Rate limiting for different endpoints
map $request_uri $limit_key {
    ~*/auth/* $binary_remote_addr;
    default "";
}

# Main server configuration
server {
    listen 80;
    server_name localhost accounting-api.local;

    # Redirect HTTP to HTTPS in production
    # return 301 https://$server_name$request_uri;

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";

    # Hide server version
    server_tokens off;

    # Block common attack patterns
    location ~* \.(htaccess|htpasswd|svn|git) {
        deny all;
        return 404;
    }

    # Block access to sensitive files
    location ~* \.(env|log|sql|bak|backup)$ {
        deny all;
        return 404;
    }

    # Health check endpoint (no rate limiting)
    location = /health {
        access_log off;
        proxy_pass http://api_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 5s;
        proxy_read_timeout 10s;
    }

    # Authentication endpoints with strict rate limiting
    location ~* ^/api/v[0-9]+/auth/ {
        limit_req zone=auth burst=10 nodelay;
        limit_conn conn_limit_per_ip 5;

        proxy_pass http://api_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;

        # Security timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # API endpoints with moderate rate limiting
    location ~* ^/api/ {
        limit_req zone=api burst=20 nodelay;
        limit_conn conn_limit_per_ip 10;

        # IP whitelist for admin operations (uncomment and configure as needed)
        # allow 192.168.1.0/24;
        # allow 10.0.0.0/8;
        # deny all;

        proxy_pass http://api_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;

        # Performance settings
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # Buffer settings for large requests
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 16 8k;
        proxy_busy_buffers_size 16k;
    }

    # Block all other requests
    location / {
        return 404;
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /404.html {
        internal;
        return 404 '{"error": "Not Found", "message": "The requested resource does not exist."}';
        add_header Content-Type application/json;
    }

    location = /50x.html {
        internal;
        return 500 '{"error": "Internal Server Error", "message": "A server error occurred."}';
        add_header Content-Type application/json;
    }
}

# HTTPS server (for production)
server {
    listen 443 ssl http2;
    server_name localhost accounting-api.local;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    # SSL security settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

    # Copy all location blocks from HTTP server
    # ... (same configuration as above)
}