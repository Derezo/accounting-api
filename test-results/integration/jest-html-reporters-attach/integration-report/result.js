window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":0,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":0,"startTime":1759316380079,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/home/eric/Projects/accounting-api/tests/integration/intake-form-v2.test.ts","failureMessage":"  ● Test suite failed to run\n\n    \u001b[96msrc/routes/organization.routes.ts\u001b[0m:\u001b[93m129\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      The last overload gave the following error.\n        Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\n          Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\n            Types of parameters 'req' and 'req' are incompatible.\n              Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n                Types of property 'user' are incompatible.\n                  Type '{ id: string; organizationId: string; role: string; sessionId: string; } | undefined' is not assignable to type '{ email: string; firstName: string; lastName: string; id: string; organizationId: string; passwordHash: string; role: string; isActive: boolean; emailVerified: boolean; twoFactorEnabled: boolean; ... 12 more ...; deletedAt: Date | null; } & { ...; }'.\n                    Type 'undefined' is not assignable to type '{ email: string; firstName: string; lastName: string; id: string; organizationId: string; passwordHash: string; role: string; isActive: boolean; emailVerified: boolean; twoFactorEnabled: boolean; ... 12 more ...; deletedAt: Date | null; } & { ...; }'.\n                      Type 'undefined' is not assignable to type '{ email: string; firstName: string; lastName: string; id: string; organizationId: string; passwordHash: string; role: string; isActive: boolean; emailVerified: boolean; twoFactorEnabled: boolean; ... 12 more ...; deletedAt: Date | null; }'.\n\n    \u001b[7m129\u001b[0m   requireMasterOrgSuperAdmin,  // ← Enhanced: Master org only\n    \u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m153\u001b[0m     <\n        \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\n        \u001b[7m154\u001b[0m         P = ParamsDictionary,\n        \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        \u001b[7m...\u001b[0m \n        \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\n        \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        \u001b[7m163\u001b[0m     ): T;\n        \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\n        The last overload is declared here.\n    \u001b[96msrc/routes/organization.routes.ts\u001b[0m:\u001b[93m254\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      The last overload gave the following error.\n        Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\n          Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\n            Types of parameters 'req' and 'req' are incompatible.\n              Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n                Types of property 'user' are incompatible.\n                  Type '{ id: string; organizationId: string; role: string; sessionId: string; } | undefined' is not assignable to type '{ email: string; firstName: string; lastName: string; id: string; organizationId: string; passwordHash: string; role: string; isActive: boolean; emailVerified: boolean; twoFactorEnabled: boolean; ... 12 more ...; deletedAt: Date | null; } & { ...; }'.\n                    Type 'undefined' is not assignable to type '{ email: string; firstName: string; lastName: string; id: string; organizationId: string; passwordHash: string; role: string; isActive: boolean; emailVerified: boolean; twoFactorEnabled: boolean; ... 12 more ...; deletedAt: Date | null; } & { ...; }'.\n                      Type 'undefined' is not assignable to type '{ email: string; firstName: string; lastName: string; id: string; organizationId: string; passwordHash: string; role: string; isActive: boolean; emailVerified: boolean; twoFactorEnabled: boolean; ... 12 more ...; deletedAt: Date | null; }'.\n\n    \u001b[7m254\u001b[0m   requireMasterOrgSuperAdmin,  // ← Enhanced: Master org only + domain verification\n    \u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m153\u001b[0m     <\n        \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\n        \u001b[7m154\u001b[0m         P = ParamsDictionary,\n        \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        \u001b[7m...\u001b[0m \n        \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\n        \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        \u001b[7m163\u001b[0m     ): T;\n        \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\n        The last overload is declared here.\n    \u001b[96msrc/routes/organization.routes.ts\u001b[0m:\u001b[93m360\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      The last overload gave the following error.\n        Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\n          Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\n            Types of parameters 'req' and 'req' are incompatible.\n              Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n                Types of property 'user' are incompatible.\n                  Type '{ id: string; organizationId: string; role: string; sessionId: string; } | undefined' is not assignable to type '{ email: string; firstName: string; lastName: string; id: string; organizationId: string; passwordHash: string; role: string; isActive: boolean; emailVerified: boolean; twoFactorEnabled: boolean; ... 12 more ...; deletedAt: Date | null; } & { ...; }'.\n                    Type 'undefined' is not assignable to type '{ email: string; firstName: string; lastName: string; id: string; organizationId: string; passwordHash: string; role: string; isActive: boolean; emailVerified: boolean; twoFactorEnabled: boolean; ... 12 more ...; deletedAt: Date | null; } & { ...; }'.\n                      Type 'undefined' is not assignable to type '{ email: string; firstName: string; lastName: string; id: string; organizationId: string; passwordHash: string; role: string; isActive: boolean; emailVerified: boolean; twoFactorEnabled: boolean; ... 12 more ...; deletedAt: Date | null; }'.\n\n    \u001b[7m360\u001b[0m   requireSameOrgOrMasterAdmin,  // ← Enhanced: Same org or master admin\n    \u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m153\u001b[0m     <\n        \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\n        \u001b[7m154\u001b[0m         P = ParamsDictionary,\n        \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        \u001b[7m...\u001b[0m \n        \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\n        \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        \u001b[7m163\u001b[0m     ): T;\n        \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\n        The last overload is declared here.\n    \u001b[96msrc/routes/organization.routes.ts\u001b[0m:\u001b[93m525\u001b[0m:\u001b[93m3\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      The last overload gave the following error.\n        Argument of type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\n          Type '(req: AuthenticatedRequest, res: Response, next: NextFunction) => Promise<void>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.\n            Types of parameters 'req' and 'req' are incompatible.\n              Type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>' is not assignable to type 'AuthenticatedRequest'.\n                Types of property 'user' are incompatible.\n                  Type '{ id: string; organizationId: string; role: string; sessionId: string; } | undefined' is not assignable to type '{ email: string; firstName: string; lastName: string; id: string; organizationId: string; passwordHash: string; role: string; isActive: boolean; emailVerified: boolean; twoFactorEnabled: boolean; ... 12 more ...; deletedAt: Date | null; } & { ...; }'.\n                    Type 'undefined' is not assignable to type '{ email: string; firstName: string; lastName: string; id: string; organizationId: string; passwordHash: string; role: string; isActive: boolean; emailVerified: boolean; twoFactorEnabled: boolean; ... 12 more ...; deletedAt: Date | null; } & { ...; }'.\n                      Type 'undefined' is not assignable to type '{ email: string; firstName: string; lastName: string; id: string; organizationId: string; passwordHash: string; role: string; isActive: boolean; emailVerified: boolean; twoFactorEnabled: boolean; ... 12 more ...; deletedAt: Date | null; }'.\n\n    \u001b[7m525\u001b[0m   requireMasterOrgSuperAdmin,  // ← Enhanced: Master org only\n    \u001b[7m   \u001b[0m \u001b[91m  ~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96mnode_modules/@types/express-serve-static-core/index.d.ts\u001b[0m:\u001b[93m153\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m153\u001b[0m     <\n        \u001b[7m   \u001b[0m \u001b[96m    ~\u001b[0m\n        \u001b[7m154\u001b[0m         P = ParamsDictionary,\n        \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        \u001b[7m...\u001b[0m \n        \u001b[7m162\u001b[0m         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>\n        \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n        \u001b[7m163\u001b[0m     ): T;\n        \u001b[7m   \u001b[0m \u001b[96m~~~~~~~~~\u001b[0m\n        The last overload is declared here.\n","testResults":[]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["src/**/*.ts","!src/**/*.d.ts","!src/**/*.interface.ts","!src/**/*.mock.ts","!src/index.ts"],"coverageDirectory":"/home/eric/Projects/accounting-api/coverage/integration","coverageProvider":"babel","coverageReporters":["text","lcov","html","json-summary"],"coverageThreshold":{"global":{"branches":85,"functions":85,"lines":85,"statements":85}},"detectLeaks":false,"detectOpenHandles":true,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":true,"globalSetup":"/home/eric/Projects/accounting-api/tests/integration/global-setup.ts","globalTeardown":"/home/eric/Projects/accounting-api/tests/integration/global-teardown.ts","json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":1,"noStackTrace":false,"nonFlagArgs":["tests/integration/intake-form-v2.test.ts"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/home/eric/Projects/accounting-api/node_modules/jest-junit/index.js",{"outputDirectory":"test-results/integration","outputName":"junit.xml","classNameTemplate":"{classname}","titleTemplate":"{title}","ancestorSeparator":" › ","usePathForSuiteName":true}],["/home/eric/Projects/accounting-api/node_modules/jest-html-reporters/index.js",{"publicPath":"test-results/integration","filename":"integration-report.html","expand":true,"hideIcon":false,"pageTitle":"Integration Test Report"}]],"rootDir":"/home/eric/Projects/accounting-api","runTestsByPath":false,"seed":-803026891,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"tests/integration/intake-form-v2.test.ts","testSequencer":"/home/eric/Projects/accounting-api/node_modules/@jest/test-sequencer/build/index.js","testTimeout":30000,"updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1759316381099,"_reporterOptions":{"publicPath":"test-results/integration","filename":"integration-report.html","expand":true,"pageTitle":"Integration Test Report","hideIcon":false,"testCommand":"","openReport":true,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})